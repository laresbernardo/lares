% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/audio.R
\name{mp3_update_tags}
\alias{mp3_update_tags}
\title{Update MP3 Metadata Tags}
\usage{
mp3_update_tags(
  filename,
  title = NULL,
  artist = NULL,
  album = NULL,
  genre = NULL,
  ...
)
}
\arguments{
\item{filename}{Character. Path to the MP3 file to update.}

\item{title}{Character. New title of the track (optional).}

\item{artist}{Character. New artist name (optional).}

\item{album}{Character. New album name (optional).}

\item{genre}{Character. New genre name (optional).}

\item{...}{Additional named arguments corresponding to other ID3 tags.
Only tags that exist in the MP3 file will be updated.}
}
\value{
Invisibly returns \code{NULL}. The MP3 file is updated in-place.
}
\description{
Updates the ID3 metadata tags of an MP3 file using the Python `eyeD3` library
via the `reticulate` package. You can modify standard fields such as
\code{title}, \code{artist}, \code{album}, and \code{genre}, as well as
additional tags passed through \code{...} if they exist in the MP3 file.
}
\details{
The function requires Python and the \code{eyeD3} package installed. It will
automatically initialize ID3 tags if they do not exist. Tags provided via
\code{...} are checked against the existing tag names to avoid errors.
}
\examples{
\dontrun{
mp3_update_tags(
  "song.mp3",
  title = "My Jazz Song",
  artist = "Bernardo",
  album = "Smooth Album",
  genre = "Jazz"
)
}
}
\seealso{
Other Audio: 
\code{\link{mp3_get}()},
\code{\link{mp3_trim}()}
}
\concept{Audio}
