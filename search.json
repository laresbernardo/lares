[{"path":"https://laresbernardo.github.io/lares/CONTRIBUTE.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"contributing repository, please first discuss change wish make via issue, email, method owners repository making change. Please note code conduct, please follow interactions project.","code":""},{"path":"https://laresbernardo.github.io/lares/CONTRIBUTE.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull Request Process","title":"Contributing","text":"Ensure install build dependencies removed end layer build. Update README.md details changes interface, includes new environment variables, exposed ports, useful file locations container parameters. Increase version numbers examples files README.md new version Pull Request represent. may merge Pull Request sign-two developers, permission , may request second reviewer merge .","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/CONTRIBUTE.html","id":"our-pledge","dir":"","previous_headings":"Code of Conduct","what":"Our Pledge","title":"Contributing","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://laresbernardo.github.io/lares/CONTRIBUTE.html","id":"our-standards","dir":"","previous_headings":"Code of Conduct","what":"Our Standards","title":"Contributing","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://laresbernardo.github.io/lares/CONTRIBUTE.html","id":"our-responsibilities","dir":"","previous_headings":"Code of Conduct","what":"Our Responsibilities","title":"Contributing","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://laresbernardo.github.io/lares/CONTRIBUTE.html","id":"scope","dir":"","previous_headings":"Code of Conduct","what":"Scope","title":"Contributing","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://laresbernardo.github.io/lares/CONTRIBUTE.html","id":"enforcement","dir":"","previous_headings":"Code of Conduct","what":"Enforcement","title":"Contributing","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team [laresbernardo@gmail.com]. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://laresbernardo.github.io/lares/articles/h2o_automl.html","id":"pipeline","dir":"Articles","previous_headings":"","what":"Pipeline","title":"Introduction to AutoML using lares","text":"short, things happen backend: Mapping h2o_automl Input dataframe df choose one independent variable (y) ’d like predict. may set/change seed argument guarantee reproducibility results. function decides ’s classification (categorical) regression (continuous) model looking independent variable’s (y) class number unique values, can control thresh parameter. dataframe split two: test train datasets. proportion split can control split argument. can replicated msplit() function. also center scale numerical values continue, use no_outliers exclude outliers, /impute missing values MICE. ’s classification model, function can balance (-sample) training data. can control behavior balance argument. , can replicate whole process model_preprocess() function. Runs h2o::h2o.automl(...) train multiple models generate leaderboard top (max_models max_time) models trained, sorted performance. can also customize additional arguments nfolds k-fold cross-validations, exclude_algos include_algos exclude include algorithms, additional argument wish pass mother function. best model given default performance metric (can changed stopping_metric parameter) evaluated cross-validation (customize nfolds), selected continue. can also use function h2o_selectmodel() select another model recalculate/plot everything using alternate model. Performance metrics plots calculated rendered given test predictions test actual values (passed models inputs trained ). way, model’s performance metrics shouldn’t biased. can replicate calculations model_metrics() function. list inputs, leaderboard results, best selected model, performance metrics, plots. can either (play) see results console export using export_results() function.","code":""},{"path":"https://laresbernardo.github.io/lares/articles/h2o_automl.html","id":"load-the-library","dir":"Articles","previous_headings":"","what":"Load the library","title":"Introduction to AutoML using lares","text":"Now, let’s (install ) load library, data, dig : NOTE: ’ll randomly set parameters example give visibility arguments can set models. sure also check print, warnings, messages shown throughout process may relevant information regarding inputs backend operations.","code":"# install.packages(\"lares\") library(lares)  # The data we'll use is the Titanic dataset data(dft) df <- subset(dft, select = -c(Ticket, PassengerId, Cabin))"},{"path":"https://laresbernardo.github.io/lares/articles/h2o_automl.html","id":"modeling-examples","dir":"Articles","previous_headings":"","what":"Modeling examples","title":"Introduction to AutoML using lares","text":"Let’s look three specific examples: classification models (binary multiple categories) regression model. Also, let’s see can export models put work environment.","code":""},{"path":"https://laresbernardo.github.io/lares/articles/h2o_automl.html","id":"classification-binary","dir":"Articles","previous_headings":"Modeling examples","what":"Classification: Binary","title":"Introduction to AutoML using lares","text":"Let’s begin binary (TRUE/FALSE) model predict passenger Survived: Let’s take look plots generated single dashboard:  also several calculations model’s performance may come useful confusion matrix, gain lift percentile, area curve (AUC), accuracy (ACC), recall true positive rate (TPR), cross-validation metrics, exact thresholds maximize metric, others: goes plots generated metrics. gains response plots test data-set, confusion matrix, ROC curves.     models, regardless type (classification regression), can check importance variable well:","code":"r <- h2o_automl(df, y = Survived, max_models = 1, impute = FALSE, target = \"TRUE\") #> 2022-02-15 17:06:08 | Started process... #> - INDEPENDENT VARIABLE: Survived #> - MODEL TYPE: Classification #>  [38;5;246m# A tibble: 2 × 5 [39m #>   tag       n     p order  pcum #>    [3m [38;5;246m<lgl> [39m [23m  [3m [38;5;246m<int> [39m [23m  [3m [38;5;246m<dbl> [39m [23m  [3m [38;5;246m<int> [39m [23m  [3m [38;5;246m<dbl> [39m [23m #>  [38;5;250m1 [39m FALSE   549  61.6     1  61.6 #>  [38;5;250m2 [39m TRUE    342  38.4     2 100 #> - MISSINGS: The following variables contain missing observations: Age (19.87%). Consider using the impute parameter. #> - CATEGORICALS: There are 3 non-numerical features. Consider using ohse() or equivalent prior to encode categorical variables. #> >>> Splitting data: train = 0.7 & test = 0.3 #> train_size  test_size  #>        623        268 #> - REPEATED: There were 63 repeated rows which are being suppressed from the train dataset #> - ALGORITHMS: excluded 'StackedEnsemble', 'DeepLearning' #> - CACHE: Previous models are not being erased. You may use 'start_clean' [clear] or 'project_name' [join] #> - UI: You may check results using H2O Flow's interactive platform: http://localhost:54321/flow/index.html #> >>> Iterating until 1 models or 600 seconds... #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> - EUREKA: Succesfully generated 1 models #>                             model_id       auc   logloss     aucpr #> 1 XGBoost_1_AutoML_5_20220215_170608 0.8566026 0.4411616 0.8198835 #>   mean_per_class_error      rmse       mse #> 1             0.197097 0.3707621 0.1374646 #> SELECTED MODEL: XGBoost_1_AutoML_5_20220215_170608 #> - NOTE: The following variables were the least important: Parch, SibSp, Pclass.2, Embarked.C #> >>> Running predictions for Survived... #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> Target value: TRUE #> >>> Generating plots... #> Model (1/1): XGBoost_1_AutoML_5_20220215_170608 #> Independent Variable: Survived #> Type: Classification (2 classes) #> Algorithm: XGBOOST #> Split: 70% training data (of 891 observations) #> Seed: 0 #>  #> Test metrics: #>    AUC = 0.84006 #>    ACC = 0.22015 #>    PRC = 0.21925 #>    TPR = 0.39423 #>    TNR = 0.10976 #>  #> Most important variables: #>    Sex.female (46.6%) #>    Age (13.9%) #>    Fare (11.3%) #>    Pclass.3 (9.2%) #>    Sex.male (8.0%) #> Process duration: 10.7s plot(r) r$metrics #> $dictionary #> [1] \"AUC: Area Under the Curve\"                                                              #> [2] \"ACC: Accuracy\"                                                                          #> [3] \"PRC: Precision = Positive Predictive Value\"                                             #> [4] \"TPR: Sensitivity = Recall = Hit rate = True Positive Rate\"                              #> [5] \"TNR: Specificity = Selectivity = True Negative Rate\"                                    #> [6] \"Logloss (Error): Logarithmic loss [Neutral classification: 0.69315]\"                    #> [7] \"Gain: When best n deciles selected, what % of the real target observations are picked?\" #> [8] \"Lift: When best n deciles selected, how much better than random is?\"                    #>  #> $confusion_matrix #>        Pred #> Real    FALSE TRUE #>   FALSE    18  146 #>   TRUE     63   41 #>  #> $gain_lift #> # A tibble: 10 × 10 #>    percentile value random target total  gain optimal   lift response score #>    <fct>      <chr>  <dbl>  <int> <int> <dbl>   <dbl>  <dbl>    <dbl> <dbl> #>  1 1          TRUE    11.2     30    30  28.8    28.8 158.     28.8   86.8  #>  2 2          TRUE    20.1     19    24  47.1    51.9 134.     18.3   69.2  #>  3 3          TRUE    30.2     14    27  60.6    77.9 100.     13.5   51.0  #>  4 4          TRUE    39.9     14    26  74.0   100    85.4    13.5   33.4  #>  5 5          TRUE    50        5    27  78.8   100    57.7     4.81  23.1  #>  6 6          TRUE    60.1      7    27  85.6   100    42.5     6.73  16.0  #>  7 7          TRUE    69.8      7    26  92.3   100    32.3     6.73  13.0  #>  8 8          TRUE    79.9      4    27  96.2   100    20.4     3.85  10.6  #>  9 9          TRUE    89.9      1    27  97.1   100     8.00    0.962  8.28 #> 10 10         TRUE   100        3    27 100     100     0       2.88   4.49 #>  #> $metrics #>       AUC     ACC     PRC     TPR     TNR #> 1 0.84006 0.22015 0.21925 0.39423 0.10976 #>  #> $cv_metrics #> # A tibble: 20 × 8 #>    metric     mean     sd cv_1_valid cv_2_valid cv_3_valid cv_4_valid cv_5_valid #>    <chr>     <dbl>  <dbl>      <dbl>      <dbl>      <dbl>      <dbl>      <dbl> #>  1 accuracy  0.817 0.0469      0.752      0.832     0.88        0.823      0.798 #>  2 auc       0.861 0.0656      0.763      0.885     0.938       0.884      0.835 #>  3 err       0.183 0.0469      0.248      0.168     0.12        0.177      0.202 #>  4 err_cou… 22.8   5.85       31         21        15          22         25     #>  5 f0point5  0.753 0.0736      0.645      0.774     0.851       0.752      0.745 #>  6 f1        0.769 0.0618      0.674      0.788     0.845       0.771      0.766 #>  7 f2        0.785 0.0495      0.705      0.802     0.840       0.791      0.788 #>  8 lift_to…  2.62  0.154       2.84       2.60      2.55        2.70       2.43  #>  9 logloss   0.441 0.0844      0.551      0.430     0.327       0.409      0.489 #> 10 max_per…  0.205 0.0410      0.273      0.188     0.163       0.196      0.205 #> 11 mcc       0.619 0.0974      0.479      0.650     0.747       0.628      0.592 #> 12 mean_pe…  0.813 0.0459      0.746      0.828     0.872       0.819      0.799 #> 13 mean_pe…  0.187 0.0459      0.254      0.172     0.128       0.181      0.201 #> 14 mse       0.137 0.0299      0.175      0.135     0.0955      0.127      0.155 #> 15 pr_auc    0.822 0.0757      0.717      0.817     0.923       0.853      0.799 #> 16 precisi…  0.744 0.0811      0.627      0.765     0.854       0.74       0.732 #> 17 r2        0.416 0.134       0.234      0.429     0.599       0.456      0.359 #> 18 recall    0.797 0.0412      0.727      0.812     0.837       0.804      0.804 #> 19 rmse      0.369 0.0411      0.418      0.368     0.309       0.356      0.394 #> 20 specifi…  0.829 0.0541      0.765      0.844     0.908       0.833      0.795 #>  #> $max_metrics #>                         metric  threshold       value idx #> 1                       max f1 0.51650798   0.7560440 167 #> 2                       max f2 0.26417303   0.8137715 248 #> 3                 max f0point5 0.63541240   0.7924335 142 #> 4                 max accuracy 0.51650798   0.8218299 167 #> 5                max precision 0.96990901   1.0000000   0 #> 6                   max recall 0.03247154   1.0000000 397 #> 7              max specificity 0.96990901   1.0000000   0 #> 8             max absolute_mcc 0.51650798   0.6178165 167 #> 9   max min_per_class_accuracy 0.36661234   0.7948052 207 #> 10 max mean_per_class_accuracy 0.51650798   0.8029030 167 #> 11                     max tns 0.96990901 385.0000000   0 #> 12                     max fns 0.96990901 237.0000000   0 #> 13                     max fps 0.02563620 385.0000000 399 #> 14                     max tps 0.03247154 238.0000000 397 #> 15                     max tnr 0.96990901   1.0000000   0 #> 16                     max fnr 0.96990901   0.9957983   0 #> 17                     max fpr 0.02563620   1.0000000 399 #> 18                     max tpr 0.03247154   1.0000000 397 r$plots$metrics #> $gains #>  #> $response #>  #> $conf_matrix #>  #> $ROC head(r$importance) #>     variable relative_importance scaled_importance importance #> 1 Sex.female           224.65222        1.00000000 0.46635853 #> 2        Age            66.93142        0.29793349 0.13894382 #> 3       Fare            54.58708        0.24298481 0.11331804 #> 4   Pclass.3            44.27368        0.19707654 0.09190832 #> 5   Sex.male            38.64116        0.17200433 0.08021569 #> 6   Pclass.1            17.50386        0.07791537 0.03633650  r$plots$importance"},{"path":"https://laresbernardo.github.io/lares/articles/h2o_automl.html","id":"classification-multi-categorical","dir":"Articles","previous_headings":"Modeling examples","what":"Classification: Multi-Categorical","title":"Introduction to AutoML using lares","text":"Now, let’s run multi-categorical (+2 labels) model predict Pclass passenger: Let’s take look plots generated single dashboard:","code":"r <- h2o_automl(df, Pclass, ignore = c(\"Fare\", \"Cabin\"), max_time = 30, plots = FALSE) #> 2022-02-15 17:06:24 | Started process... #> - INDEPENDENT VARIABLE: Pclass #> - MODEL TYPE: Classification #>  [38;5;246m# A tibble: 3 × 5 [39m #>   tag       n     p order  pcum #>    [3m [38;5;246m<fct> [39m [23m  [3m [38;5;246m<int> [39m [23m  [3m [38;5;246m<dbl> [39m [23m  [3m [38;5;246m<int> [39m [23m  [3m [38;5;246m<dbl> [39m [23m #>  [38;5;250m1 [39m n_3     491  55.1     1  55.1 #>  [38;5;250m2 [39m n_1     216  24.2     2  79.4 #>  [38;5;250m3 [39m n_2     184  20.6     3 100 #> - MISSINGS: The following variables contain missing observations: Age (19.87%). Consider using the impute parameter. #> - CATEGORICALS: There are 3 non-numerical features. Consider using ohse() or equivalent prior to encode categorical variables. #> >>> Splitting data: train = 0.7 & test = 0.3 #> train_size  test_size  #>        623        268 #> - REPEATED: There were 65 repeated rows which are being suppressed from the train dataset #> - ALGORITHMS: excluded 'StackedEnsemble', 'DeepLearning' #> - CACHE: Previous models are not being erased. You may use 'start_clean' [clear] or 'project_name' [join] #> - UI: You may check results using H2O Flow's interactive platform: http://localhost:54321/flow/index.html #> >>> Iterating until 3 models or 30 seconds... #> - EUREKA: Succesfully generated 3 models #>                             model_id mean_per_class_error   logloss      rmse #> 1     GLM_1_AutoML_6_20220215_170624            0.4742325 0.8170807 0.5409388 #> 2 XGBoost_1_AutoML_6_20220215_170624            0.4946035 0.8255072 0.5392879 #> 3     GBM_1_AutoML_6_20220215_170624            0.5037168 0.8620436 0.5616772 #>         mse #> 1 0.2926147 #> 2 0.2908315 #> 3 0.3154812 #> SELECTED MODEL: GLM_1_AutoML_6_20220215_170624 #> - NOTE: The following variables were the least important: Sex.male, Sex.female, Parch #> >>> Running predictions for Pclass... #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> Model (1/3): GLM_1_AutoML_6_20220215_170624 #> Independent Variable: Pclass #> Type: Classification (3 classes) #> Algorithm: GLM #> Split: 70% training data (of 891 observations) #> Seed: 0 #>  #> Test metrics: #>    AUC = 0.76337 #>    ACC = 0.64179 #>  #> Most important variables: #>    Embarked.Q (25.3%) #>    Embarked.C (13.5%) #>    Embarked.S (13.3%) #>    Age (11.9%) #>    Survived.FALSE (10.6%) #> Process duration: 16.8s plot(r)"},{"path":"https://laresbernardo.github.io/lares/articles/h2o_automl.html","id":"regression","dir":"Articles","previous_headings":"Modeling examples","what":"Regression","title":"Introduction to AutoML using lares","text":"Finally, regression model continuous values predict Fare payed passenger: Let’s take look plots generated single dashboard:","code":"r <- h2o_automl(df, y = \"Fare\", ignore = \"Pclass\", exclude_algos = NULL, quiet = TRUE) print(r) #> Model (1/7): StackedEnsemble_BestOfFamily_1_AutoML_7_20220215_170644 #> Independent Variable: Fare #> Type: Regression #> Algorithm: STACKEDENSEMBLE #> Split: 70% training data (of 871 observations) #> Seed: 0 #>  #> Test metrics: #>    rmse = 20.17 #>    mae = 14.079 #>    mape = 0.068862 #>    mse = 406.82 #>    rsq = 0.367 #>    rsqa = 0.3645 plot(r)"},{"path":"https://laresbernardo.github.io/lares/articles/h2o_automl.html","id":"export-models-and-results","dir":"Articles","previous_headings":"","what":"Export models and results","title":"Introduction to AutoML using lares","text":"model trained picked, can export model ’s results, can put work production environment (doesn’t R). function : export_results(). Simply pass h2o_automl list object function ’s ! can select formats exported using argument. Currently support: txt, csv, rds, binary, mojo [best format production], plots. also 2 quick options (dev production) export files. Lastly, can set custom subdir gather everything new sub-directory; ’d recommend using model’s name convention helps know one’s .","code":""},{"path":"https://laresbernardo.github.io/lares/articles/h2o_automl.html","id":"import-and-use-your-models","dir":"Articles","previous_headings":"","what":"Import and use your models","title":"Introduction to AutoML using lares","text":"’d like re-use exported models predict new datasets, several options: h2o_predict_MOJO() [recommended]: function lets user predict using h2o’s .zip file containing MOJO files. files also ones used putting model production environment. Also, MOJO let’s change h2o’s versions without issues h2o_predict_binary(): function lets user predict using h2o binary file. h2o version/build must match work. h2o_predict_model(): function lets user run predictions H2O Model Object ’d use predict base function. probably work current session must actual trained object use .","code":""},{"path":"https://laresbernardo.github.io/lares/articles/h2o_automl.html","id":"addittional-posts","dir":"Articles","previous_headings":"","what":"Addittional Posts","title":"Introduction to AutoML using lares","text":"DataScience+: Visualizations Classification Models Results DataScience+: Visualizations Regression Models Results","code":""},{"path":"https://laresbernardo.github.io/lares/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bernardo Lares. Author, maintainer.","code":""},{"path":"https://laresbernardo.github.io/lares/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lares B (2022). lares: Analytics & Machine Learning Sidekick. https://github.com/laresbernardo/lares, https://laresbernardo.github.io/lares/.","code":"@Manual{,   title = {lares: Analytics & Machine Learning Sidekick},   author = {Bernardo Lares},   year = {2022},   note = {https://github.com/laresbernardo/lares, https://laresbernardo.github.io/lares/}, }"},{"path":[]},{"path":[]},{"path":"https://laresbernardo.github.io/lares/index.html","id":"cran_status_badge-r-cmd-check-documentation-codefactor-saythanks","dir":"","previous_headings":"","what":"Analytics & Machine Learning Sidekick","title":"Analytics & Machine Learning Sidekick","text":"R package built automate, improve, speed everyday Analysis Machine Learning tasks. wide variety family functions like Machine Learning, data cleaning processing, EDA, Investment, NLP, Queries, Scrappers, API interactions, lares helps analyst data scientist get quick, reproducible, robust results, without need repetitive coding extensive programming skills. Feel free install, use, /comment code functionalities. also colourblind, sure check colour palettes! Don’t hesitate contact , please , let know first hear library family functions interested .","code":""},{"path":"https://laresbernardo.github.io/lares/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analytics & Machine Learning Sidekick","text":"Windows users: MAY install RTools installing dev version. Download .","code":"## CRAN VERSION install.packages(\"lares\")  ## DEV VERSION # If you don't have remotes yet, run: install.packages('remotes') remotes::install_github(\"laresbernardo/lares\") # Full installation with recommended dependencies (takes more time) remotes::install_github(\"laresbernardo/lares\", dependencies = TRUE)"},{"path":"https://laresbernardo.github.io/lares/index.html","id":"see-the-library-in-action","dir":"","previous_headings":"","what":"See the library in action!","title":"Analytics & Machine Learning Sidekick","text":"Vignette: Introduction AutoML using lares DataScience+: Visualizations Classification Models Results DataScience+: Visualizations Regression Models Results DataScience+: AutoML DALEX Dataset Understanding DataScience+: Find Insights Ranked Cross-Correlations DataScience+: Portfolio’s Performance Reporting DataScience+: Manage Credentials Safely R DataScience+: Using cache avoid re-processing R DataScience+: Plot Timelines Gantt Charts RPubs: freqs(), distr(), corr_var() Examples","code":""},{"path":"https://laresbernardo.github.io/lares/index.html","id":"automl-simplified-map-h2o_automl","dir":"","previous_headings":"See the library in action!","what":"AutoML Simplified Map h2o_automl()","title":"Analytics & Machine Learning Sidekick","text":"AutoML Map (lares)","code":""},{"path":"https://laresbernardo.github.io/lares/index.html","id":"insights-while-understanding","dir":"","previous_headings":"See the library in action!","what":"Insights While Understanding","title":"Analytics & Machine Learning Sidekick","text":"get insights value dataset, first need understand structure, types data, empty values, interactions variables… corr_cross() freqs() give just ! show wide perspective dataset content, correlations, frequencies. Additionally, missingness() function detect missing values df_str() break data frame’s structure, ready squeeze valuable insights data. ’d like go deeper, try x2y(), lasso_vars() tree_var() use Machine Learning detect patterns, predictive powers, variables importance. Cross-Correlations Frequencies (lares)","code":""},{"path":"https://laresbernardo.github.io/lares/index.html","id":"kings-of-data-mining","dir":"","previous_headings":"See the library in action!","what":"Kings of Data Mining","title":"Analytics & Machine Learning Sidekick","text":"favourite used functions freqs(), distr(), corr_var(). RMarkdown can see action. Basically, group count values within variables, show distributions one variable vs another one (numerical categorical), calculate/plot correlations one variables vs others, matter type data insert. space one , add ohse() (One Hot Smart Encoding), made life much easier work much valuable. converts whole data frame numerical values making dummy variables (categoricals turned new columns 1s 0s, ordered frequencies grouping less frequent single column) dates new features (month, year, week year, minutes time present, holidays given country, currency exchange rates, etc).","code":""},{"path":"https://laresbernardo.github.io/lares/index.html","id":"what-else-is-there","dir":"","previous_headings":"","what":"What else is there?","title":"Analytics & Machine Learning Sidekick","text":"can check active functions documentations type lares:: RStudio get pop-functions currently available within package. might also want check whole documentation running help(package = \"lares\") RStudio Online Official Documentation. Remember check families similar functions See Also sections well.","code":""},{"path":"https://laresbernardo.github.io/lares/index.html","id":"getting-further-help","dir":"","previous_headings":"What else is there?","what":"Getting further help","title":"Analytics & Machine Learning Sidekick","text":"need help functions using RStudio, use ? function (.e. ?lares::function) Help tab display short explanation function parameters. might also interested online documentation check functions parameters. encounter bug, please share reproducible example Github issues ’ll take care . inquiries, matters, can contact LinkedIn anytime!","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ROC.html","id":null,"dir":"Reference","previous_headings":"","what":"AUC and ROC Curves Data — ROC","title":"AUC and ROC Curves Data — ROC","text":"function calculates ROC Curves AUC values 95% confidence range. also works multi-categorical models.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ROC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AUC and ROC Curves Data — ROC","text":"","code":"ROC(tag, score, multis = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/ROC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AUC and ROC Curves Data — ROC","text":"tag Vector. Real known label score Vector. Predicted value model's result multis Data.frame. Containing columns category score (used 2 categories coexist)","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ROC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AUC and ROC Curves Data — ROC","text":"List ROC's results, area curve (AUC) CI.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ROC.html","id":"plot-results","dir":"Reference","previous_headings":"","what":"Plot Results","title":"AUC and ROC Curves Data — ROC","text":"plot results, use mplot_roc() function.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/ROC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AUC and ROC Curves Data — ROC","text":"","code":"data(dfr) # Results for AutoML Predictions lapply(dfr[c(1, 2)], head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>   # ROC Data for Binomial Model roc1 <- ROC(dfr$class2$tag, dfr$class2$scores) lapply(roc1, head) #> $ci #>        roc.ci #> min 0.8542079 #> AUC 0.8946749 #> max 0.9351419 #>  #> $roc #>   fpr         tpr label #> 1   1 0.000000000 2cats #> 2   1 0.009708738 2cats #> 3   1 0.019417476 2cats #> 4   1 0.029126214 2cats #> 5   1 0.038834951 2cats #> 6   1 0.048543689 2cats #>   # ROC Data for Multi-Categorical Model roc2 <- ROC(dfr$class3$tag, dfr$class3$score,   multis = subset(dfr$class3, select = -c(tag, score)) ) lapply(roc2, head) #> $ci #>           n_1       n_2       n_3      mean #> min 0.8198601 0.6018566 0.7774864 0.7330677 #> AUC 0.8669377 0.6754127 0.8264621 0.7896042 #> max 0.9140153 0.7489689 0.8754379 0.8461407 #>  #> $roc #>   fpr         tpr        label #> 1   1 0.000000000 86.69% | n_1 #> 2   1 0.004878049 86.69% | n_1 #> 3   1 0.009756098 86.69% | n_1 #> 4   1 0.019512195 86.69% | n_1 #> 5   1 0.024390244 86.69% | n_1 #> 6   1 0.029268293 86.69% | n_1 #>  #> $rocs #> $rocs$n_1 #>  #> Call: #> roc.default(response = label, predictor = res, quiet = TRUE,     ci = TRUE) #>  #> Data: res in 63 controls (label n_1) > 205 cases (label other_label). #> Area under the curve: 0.8669 #> 95% CI: 0.8199-0.914 (DeLong) #>  #> $rocs$n_2 #>  #> Call: #> roc.default(response = label, predictor = res, quiet = TRUE,     ci = TRUE) #>  #> Data: res in 56 controls (label n_2) > 212 cases (label other_label). #> Area under the curve: 0.6754 #> 95% CI: 0.6019-0.749 (DeLong) #>  #> $rocs$n_3 #>  #> Call: #> roc.default(response = label, predictor = res, quiet = TRUE,     ci = TRUE) #>  #> Data: res in 149 controls (label n_3) > 119 cases (label other_label). #> Area under the curve: 0.8265 #> 95% CI: 0.7775-0.8754 (DeLong) #>  #>"},{"path":"https://laresbernardo.github.io/lares/reference/autoline.html","id":null,"dir":"Reference","previous_headings":"","what":"New Line Feed for Long Strings (Wrapper) — autoline","title":"New Line Feed for Long Strings (Wrapper) — autoline","text":"Add break new line without breaking words. Automatically, function can detect plot's width dynamically set auto width. can adjust relation (rel) parameter different fonts sizes perfect harmony found. Quite similar stringr::str_wrap , text vector factor, levels kept order transformed.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/autoline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New Line Feed for Long Strings (Wrapper) — autoline","text":"","code":"autoline(text, top = \"auto\", rel = 9)"},{"path":"https://laresbernardo.github.io/lares/reference/autoline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New Line Feed for Long Strings (Wrapper) — autoline","text":"text Character factor vector. top Integer. many characters aprox. line? rel Numeric. Relation pixels characters per line","code":""},{"path":"https://laresbernardo.github.io/lares/reference/autoline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New Line Feed for Long Strings (Wrapper) — autoline","text":"Character. String (vector) including \\n within.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/autoline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New Line Feed for Long Strings (Wrapper) — autoline","text":"","code":"cat(autoline(\"This is a long text that may not fit into a single line\", 8)) #> This is #> a long #> text #> that may #> not fit #> into a #> single #> line  text <- factor(c(\"First value\", \"Second value\", \"First value\"),   levels = c(\"First value\", \"Second value\") ) autoline(text, 1) #> [1] First\\nvalue  Second\\nvalue First\\nvalue  #> Levels: First\\nvalue Second\\nvalue  path <- file.path(R.home(\"doc\"), \"THANKS\") text <- paste(readLines(path), collapse = \" \") cat(autoline(text)) #> R would not be what it is today without the #> invaluable help of these people outside of the #> (former and current) R Core team, who contributed by #> donating code, bug fixes and documentation: Valerio #> Aimale, Suharto Anggono, Thomas Baier, Gabe Becker, #> Henrik Bengtsson, Roger Bivand, Ben Bolker, David #> Brahm, G\"oran Brostr\"om, Patrick Burns, Vince Carey, #> Saikat DebRoy, Matt Dowle, Brian D'Urso, Lyndon #> Drake, Dirk Eddelbuettel, Claus Ekstrom, Sebastian #> Fischmeister, John Fox, Paul Gilbert, Yu Gong, Gabor #> Grothendieck, Frank E Harrell Jr, Peter M. Haverty, #> Torsten Hothorn, Robert King, Kjetil Kjernsmo, #> Roger Koenker, Philippe Lambert, Jan de Leeuw, #> Jim Lindsey, Patrick Lindsey, Catherine Loader, #> Gordon Maclean, Arni Magnusson, John Maindonald, #> David Meyer, Ei-ji Nakama, Jens Oehlschl\"agel, #> Steve Oncley, Richard O'Keefe, Hubert Palme, Roger #> D. Peng, Jose' C. Pinheiro, Tony Plate, Anthony #> Rossini, Jonathan Rougier, Petr Savicky, Guenther #> Sawitzki, Marc Schwartz, Arun Srinivasan, Detlef #> Steuer, Bill Simpson, Gordon Smyth, Adrian Trapletti, #> Terry Therneau, Rolf Turner, Bill Venables, Gregory #> R. Warnes, Andreas Weingessel, Morten Welinder, #> James Wettenhall, Simon Wood, and Achim Zeileis. #> Others have written code that has been adopted by #> R and is acknowledged in the code files, including #> J. D. Beasley, David J. Best, Richard Brent, Kevin #> Buhr, Michael A. Covington, Bill Cleveland, Robert #> Cleveland,, G. W. Cran, C. G. Ding, Ulrich Drepper, #> Paul Eggert, J. O. Evans, David M. Gay, H. Frick, #> G. W. Hill, Richard H. Jones, Eric Grosse, Shelby #> Haberman, Bruno Haible, John Hartigan, Andrew Harvey, #> Trevor Hastie, Min Long Lam, George Marsaglia, K. #> J. Martin, Gordon Matzigkeit, C. R. Mckenzie, Jean #> McRae, Cyrus Mehta, Fionn Murtagh, John C. Nash, #> Finbarr O'Sullivan, R. E. Odeh, William Patefield, #> Nitin Patel, Alan Richardson, D. E. Roberts, Patrick #> Royston, Russell Lenth, Ming-Jen Shyu, Richard C. #> Singleton, S. G. Springer, Supoj Sutanthavibul, #> Irma Terpenning, G. E. Thomas, Rob Tibshirani, #> Wai Wan Tsang, Berwin Turlach, Gary V. Vaughan, #> Michael Wichura, Jingbo Wang, M. A. Wong, and the #> Free Software Foundation (for autoconf code and #> utilities). See also files under src/extras. Many #> more, too numerous to mention here, have contributed #> by sending bug reports and suggesting various #> improvements. Simon Davies whilst at the University #> of Auckland wrote the original version of glm(). #> Julian Harris and Wing Kwong (Tiki) Wan whilst at #> the University of Auckland assisted Ross Ihaka with #> the original Macintosh port. R was inspired by the S #> environment which has been principally developed by #> John Chambers, with substantial input from Douglas #> Bates, Rick Becker, Bill Cleveland, Trevor Hastie, #> Daryl Pregibon and Allan Wilks. A special debt is #> owed to John Chambers who has graciously contributed #> advice and encouragement in the early days of R #> and later became a member of the core team. Stefano #> Iacus (a former member of R Core) and Simon Urbanek #> developed the macOS port, including the R.app GUI, #> toolchains and packaging. The Windows port was #> developed by Guido Masarotto (for a while a member #> of R Core) and Brian Ripley, then Duncan Murdoch (a #> former member of R Core) and currently by Jeroen Ooms #> (base) and Uwe Ligges (packages). Tomas Kalibera's #> work has been sponsored by Jan Vitek and funded #> by his European Research Council grant \"Evolving #> Language Ecosystems (ELE)\". Computing support #> (including hardware, hosting and infrastructure) has #> been provided/funded by the R Foundation, employers #> of R-Core members (notably WU Wien, ETH Zurich, U #> Oxford and U Iowa) and by Northeastern University and #> the University of Kent. Distributions of R contain #> the recommended packages, whose authors/contributors #> are listed in their DESCRIPTION files."},{"path":"https://laresbernardo.github.io/lares/reference/balance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance Binary Data by Resampling: Under-Over Sampling — balance_data","title":"Balance Binary Data by Resampling: Under-Over Sampling — balance_data","text":"function lets user balance given data.frame resampling given relation rate binary feature.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/balance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance Binary Data by Resampling: Under-Over Sampling — balance_data","text":"","code":"balance_data(df, variable, rate = 1, target = \"auto\", seed = 0, quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/balance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance Binary Data by Resampling: Under-Over Sampling — balance_data","text":"df Vector Dataframe. Contains different variables column, separated specific character variable Variable. variable used re-sample dataset? rate Numeric. many X every Y need? Default: 1. 2 unique values, rate represent percentage number rows target Character. binary, value reduced? kept \"auto\", frequent value reduced. seed Numeric. Seed replicate obtain values quiet Boolean. Keep quiet? , messages printed","code":""},{"path":"https://laresbernardo.github.io/lares/reference/balance_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance Binary Data by Resampling: Under-Over Sampling — balance_data","text":"data.frame. Reduced sampled data.frame following rate appearance specific variable.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/balance_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance Binary Data by Resampling: Under-Over Sampling — balance_data","text":"","code":"data(dft) # Titanic dataset df <- balance_data(dft, Survived, rate = 0.5) #> Resampled from: 549 v 342 #> Reducing size for label: FALSE #> New label distribution: 171 v 342 df <- balance_data(dft, .data$Survived, rate = 0.1, target = \"TRUE\") #> Resampled from: 549 v 342 #> Reducing size for label: TRUE #> New label distribution: 549 v 55"},{"path":"https://laresbernardo.github.io/lares/reference/bindfiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind Files into Dataframe — bindfiles","title":"Bind Files into Dataframe — bindfiles","text":"function imports binds multiple files single data.frame. Files must inserted absolute roots files names.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/bindfiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind Files into Dataframe — bindfiles","text":"","code":"bindfiles(files)"},{"path":"https://laresbernardo.github.io/lares/reference/bindfiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind Files into Dataframe — bindfiles","text":"files Character vector. Files names.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/bindfiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind Files into Dataframe — bindfiles","text":"data.frame data joined files passed.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/bring_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Get API (JSON) and Transform into data.frame — bring_api","title":"Get API (JSON) and Transform into data.frame — bring_api","text":"function lets user bring API data JSON format transform data.frame.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/bring_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get API (JSON) and Transform into data.frame — bring_api","text":"","code":"bring_api(url, status = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/bring_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get API (JSON) and Transform into data.frame — bring_api","text":"url Character. API's URL GET. status Boolean. Display status message?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/bring_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get API (JSON) and Transform into data.frame — bring_api","text":"data.frame urlGET results NULL results returned API.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/cache_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache Save and Load (Write and Read) — cache_write","title":"Cache Save and Load (Write and Read) — cache_write","text":"function lets user save load cache R object improve timings UX.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/cache_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache Save and Load (Write and Read) — cache_write","text":"","code":"cache_write(   data,   base = \"temp\",   cache_dir = getOption(\"LARES_CACHE_DIR\"),   ask = FALSE,   quiet = FALSE )  cache_read(   base,   cache_dir = getOption(\"LARES_CACHE_DIR\"),   ask = FALSE,   quiet = FALSE )  cache_exists(base = NULL, cache_dir = getOption(\"LARES_CACHE_DIR\"))  cache_clear(cache_dir = getOption(\"LARES_CACHE_DIR\"), quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/cache_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache Save and Load (Write and Read) — cache_write","text":"data Object base Character vector. Unique name cache file. can pass character vector multiple elements concatenated. cache files start lares_cache_* automatically quickly detect cache files. cache_dir Character. want save cache files? default stored tempdir() can change using parameter setting global option called \"LARES_CACHE_DIR\". ask Boolean. cache exists, reading: (interactive) ask user cache used proceed ignored; writing, (interactive) ask user cache overwritten. Note can ask one cache file time vectors concatenated. quiet Boolean. Keep quiet? , message shown.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/cache_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache Save and Load (Write and Read) — cache_write","text":"cache_write. return value, called side effects. cache_read. R object. Data cache file NULL cache found. cache_exists. Boolean. Result base existence. cache_clear. Invisible vector containing cache file names removed.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/cache_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cache Save and Load (Write and Read) — cache_write","text":"","code":"x <- list(a = 1, b = 2:4) base <- c(as.character(Sys.Date()), \"A\", \"B\") cache_write(x, base) #> > Cache saved succesfully: lares_cache_2022-02-15.A.B cache_read(base, ask = FALSE) #> > Cache loaded succesfully: lares_cache_2022-02-15.A.B #> $a #> [1] 1 #>  #> $b #> [1] 2 3 4 #>  cache_exists(\"lares_cache_2021-06-01.A.B.C\") #> [1] FALSE #> attr(,\"filename\") #> [1] \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//Rtmp8xZ0s9/lares_cache_2021-06-01.A.B.C.RDS\" #> attr(,\"base\") #> [1] \"lares_cache_2021-06-01.A.B.C\" #> attr(,\"cache_dir\") #> [1] \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//Rtmp8xZ0s9\" cache_clear() #> Removed 1 cache files succesfully!"},{"path":"https://laresbernardo.github.io/lares/reference/categ_reducer.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce categorical values — categ_reducer","title":"Reduce categorical values — categ_reducer","text":"function lets user reduce categorical values vector. tidyverse friendly use pipelines","code":""},{"path":"https://laresbernardo.github.io/lares/reference/categ_reducer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce categorical values — categ_reducer","text":"","code":"categ_reducer(   df,   var,   nmin = 0,   pmin = 0,   pcummax = 100,   top = NA,   pvalue_max = 1,   cor_var = \"tag\",   limit = 20,   other_label = \"other\",   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/categ_reducer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce categorical values — categ_reducer","text":"df Categorical Vector var Variable. variable wish reduce? nmin Integer. Number minimum times value repeated pmin Numerical. Percentage minimum times value repeated pcummax Numerical. Top cumulative percentage repeated values top Integer. Keep n frequently repeated values pvalue_max Numeric (0-1]. Max pvalue categories cor_var Character. pvalue_max < 1, must define column name compared (numerical binary). limit Integer. Limit one hot encoding n frequent values column. Set NA ignore argument. other_label Character. text wish replace filtered values ? ... Additional parameters","code":""},{"path":"https://laresbernardo.github.io/lares/reference/categ_reducer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce categorical values — categ_reducer","text":"data.frame df var transformed","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/categ_reducer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce categorical values — categ_reducer","text":"","code":"data(dft) # Titanic dataset categ_reducer(dft, Embarked, top = 2) %>% freqs(Embarked) #> # A tibble: 3 × 5 #>   Embarked     n     p order  pcum #>   <chr>    <int> <dbl> <int> <dbl> #> 1 S          644 72.3      1  72.3 #> 2 C          168 18.9      2  91.1 #> 3 other       79  8.87     3 100.  categ_reducer(dft, Ticket, nmin = 7, other_label = \"Other Ticket\") %>% freqs(Ticket) #> # A tibble: 4 × 5 #>   Ticket           n     p order  pcum #>   <chr>        <int> <dbl> <int> <dbl> #> 1 Other Ticket   870 97.6      1  97.6 #> 2 1601             7  0.79     2  98.4 #> 3 347082           7  0.79     3  99.2 #> 4 CA. 2343         7  0.79     4 100.  categ_reducer(dft, Ticket, pvalue_max = 0.05, cor_var = \"Survived\") %>% freqs(Ticket) #> Warning: Not a valid input: cor_var_temp was transformed or does not exist. #> # A tibble: 6 × 5 #>   Ticket       n     p order  pcum #>   <chr>    <int> <dbl> <int> <dbl> #> 1 other      866 97.2      1  97.2 #> 2 347082       7  0.79     2  98.0 #> 3 CA. 2343     7  0.79     3  98.8 #> 4 113760       4  0.45     4  99.2 #> 5 2666         4  0.45     5  99.7 #> 6 110152       3  0.34     6 100."},{"path":"https://laresbernardo.github.io/lares/reference/check_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Attribute checker — check_attr","title":"Attribute checker — check_attr","text":"function checks object specific attribute stops ","code":""},{"path":"https://laresbernardo.github.io/lares/reference/check_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute checker — check_attr","text":"","code":"check_attr(object, attr = \"type\", check = NULL, stop = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/check_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attribute checker — check_attr","text":"object Object kind attr Character. Attribute check check Character. Attribute value stop Boolean. Stop check?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/check_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attribute checker — check_attr","text":"return value, called side effects.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/check_attr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attribute checker — check_attr","text":"","code":"test <- data.frame() attributes(test) #> $names #> character(0) #>  #> $row.names #> integer(0) #>  #> $class #> [1] \"data.frame\" #>  check_attr(test, \"class\", \"data.frame\") # check_attr(test, \"class\", \"not.data.frame\")"},{"path":"https://laresbernardo.github.io/lares/reference/check_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate options within vector — check_opts","title":"Validate options within vector — check_opts","text":"function validates inputs match /options return error/message possible options use.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/check_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate options within vector — check_opts","text":"","code":"check_opts(   inputs,   opts,   input_name = \"input\",   type = \"all\",   not = \"stop\",   quiet = TRUE )"},{"path":"https://laresbernardo.github.io/lares/reference/check_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate options within vector — check_opts","text":"inputs Vector character. Check options. opts Vector character. Valid options. input_name Character. Custom message change \"input\" string. example: \"column names\". type Character. Options: \"\", \".\" Character. Options: \"stop\", \"message\", \"print\", \"return\". quiet Boolean. Keep quiet? , returns logical value.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/check_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate options within vector — check_opts","text":"Boolean. Result inputs opts (options). Depending type /stop arguments, errors messages shown.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/check_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate options within vector — check_opts","text":"","code":"opts <- c(\"A\", \"B\", \"C\") # Let's check the \"all\" logic check_opts(inputs = c(\"A\", \"B\"), opts, quiet = FALSE) #> [1] TRUE check_opts(inputs = c(\"X\"), opts, not = \"message\", quiet = FALSE) #> Your input 'X' is NOT valid; ALL should match these options: #>   'A', 'B', 'C' #> [1] FALSE check_opts(inputs = c(\"A\", \"X\"), opts, input_name = \"value\", not = \"warning\") #> Warning: Your value 'X' is NOT valid; ALL should match these options: #>   'A', 'B', 'C' # Now let's check the \"any\" logic check_opts(inputs = c(\"A\", \"X\"), opts, type = \"any\") check_opts(inputs = c(\"X\"), opts, type = \"any\", not = \"message\") #> Your input 'X' is NOT valid; ANY should match these options: #>   'A', 'B', 'C' check_opts(inputs = c(\"A\", NA), opts, type = \"any\") # Final trick: just ignore results check_opts(inputs = \"X\", opts, not = \"invisible\")"},{"path":"https://laresbernardo.github.io/lares/reference/ci_lower.html","id":null,"dir":"Reference","previous_headings":"","what":"Lower/Upper Confidence Intervals — ci_lower","title":"Lower/Upper Confidence Intervals — ci_lower","text":"Calculate lower upper confidence intervals given mean, standard deviation, sample size, confidence level. may want use ci_var() calculate values quickly.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ci_lower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lower/Upper Confidence Intervals — ci_lower","text":"","code":"ci_lower(mean, ssd, n, conf = 0.95)  ci_upper(mean, ssd, n, conf = 0.95)"},{"path":"https://laresbernardo.github.io/lares/reference/ci_lower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lower/Upper Confidence Intervals — ci_lower","text":"mean Numeric. Mean: mean(var, na.rm = TRUE) ssd Numeric. Standard deviation: sd(var, na.rm = TRUE) n Integer. Amount observations: n() conf Numeric (0-1). Confidence level.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ci_lower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lower/Upper Confidence Intervals — ci_lower","text":"Vector confidence limit value.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/ci_lower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lower/Upper Confidence Intervals — ci_lower","text":"","code":"ci_lower(100, 5, 10) #> [1] 96.42322 ci_upper(100, 5, 10) #> [1] 103.5768"},{"path":"https://laresbernardo.github.io/lares/reference/ci_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals on Dataframe — ci_var","title":"Confidence Intervals on Dataframe — ci_var","text":"Calculate confidence intervals continuous numerical column dataframe, given confidence level. may also group results using another variable. Tidyverse friendly.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ci_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals on Dataframe — ci_var","text":"","code":"ci_var(df, var, group_var = NULL, conf = 0.95)"},{"path":"https://laresbernardo.github.io/lares/reference/ci_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals on Dataframe — ci_var","text":"df Dataframe var Variable name. Must numerical column. group_var Variable name. Group results another variable. conf Numeric. Confidence level (0-1).","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ci_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Intervals on Dataframe — ci_var","text":"data.frame mean, standard deviation, counter, upper lower CIs.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/ci_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Intervals on Dataframe — ci_var","text":"","code":"data(dft) # Titanic dataset ci_var(dft, Fare) #> # A tibble: 1 × 5 #>   Fare_mean Fare_sd     n lower_ci upper_ci #>       <dbl>   <dbl> <int>    <dbl>    <dbl> #> 1      32.2    49.7   891     28.9     35.5 ci_var(dft, Fare, Pclass) #> # A tibble: 3 × 6 #>   Pclass Fare_mean Fare_sd     n lower_ci upper_ci #>   <fct>      <dbl>   <dbl> <int>    <dbl>    <dbl> #> 1 1           84.2    78.4   216     73.6     94.7 #> 2 2           20.7    13.4   184     18.7     22.6 #> 3 3           13.7    11.8   491     12.6     14.7 ci_var(dft, Fare, Pclass, conf = 0.99) #> # A tibble: 3 × 6 #>   Pclass Fare_mean Fare_sd     n lower_ci upper_ci #>   <fct>      <dbl>   <dbl> <int>    <dbl>    <dbl> #> 1 1           84.2    78.4   216     70.3     98.0 #> 2 2           20.7    13.4   184     18.1     23.2 #> 3 3           13.7    11.8   491     12.3     15.1"},{"path":"https://laresbernardo.github.io/lares/reference/cleanNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean title names of a data.frame/tibble object — cleanNames","title":"Clean title names of a data.frame/tibble object — cleanNames","text":"Resulting names unique consist _ character, numbers, ASCII letters. Capitalization preferences can specified using lower parameter. Inspired janitor::clean_names.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/cleanNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean title names of a data.frame/tibble object — cleanNames","text":"","code":"cleanNames(df, num = \"x\", ...)"},{"path":"https://laresbernardo.github.io/lares/reference/cleanNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean title names of a data.frame/tibble object — cleanNames","text":"df data.frame/tibble num Add character -numeric names ... Additional parameters passed cleanText","code":""},{"path":"https://laresbernardo.github.io/lares/reference/cleanNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean title names of a data.frame/tibble object — cleanNames","text":"Character vector transformed strings.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/cleanNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean title names of a data.frame/tibble object — cleanNames","text":"","code":"df <- dft[1:5, 1:6] # Dummy data colnames(df) <- c(\"ID.\", \"34\", \"x_2\", \"Num 123\", \"Nòn-äscì\", \"  white   Spaces  \") print(df) #>   ID.    34 x_2 Num 123 Nòn-äscì   white   Spaces   #> 1   1 FALSE   3    male       22                  1 #> 2   2  TRUE   1  female       38                  1 #> 3   3  TRUE   3  female       26                  0 #> 4   4  TRUE   1  female       35                  1 #> 5   5 FALSE   3    male       35                  0 cleanNames(df) #>   id   x34 x2 num_123 nonasci white_spaces #> 1  1 FALSE  3    male      22            1 #> 2  2  TRUE  1  female      38            1 #> 3  3  TRUE  3  female      26            0 #> 4  4  TRUE  1  female      35            1 #> 5  5 FALSE  3    male      35            0 cleanNames(df, lower = FALSE) #>   ID   x34 x2 Num_123 Nonasci white_Spaces #> 1  1 FALSE  3    male      22            1 #> 2  2  TRUE  1  female      38            1 #> 3  3  TRUE  3  female      26            0 #> 4  4  TRUE  1  female      35            1 #> 5  5 FALSE  3    male      35            0"},{"path":"https://laresbernardo.github.io/lares/reference/cleanText.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean text — cleanText","title":"Clean text — cleanText","text":"function lets user clean text getting alphanumeric characters accents/symbols letters.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/cleanText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean text — cleanText","text":"","code":"cleanText(text, spaces = TRUE, lower = TRUE, ascii = TRUE, title = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/cleanText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean text — cleanText","text":"text Character Vector spaces Boolean. Keep spaces? character input, spaces transformed passed argument. lower Boolean. Transform lower case? ascii Boolean. ASCII characters? title Boolean. Transform title format (upper case first letters)","code":""},{"path":"https://laresbernardo.github.io/lares/reference/cleanText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean text — cleanText","text":"Character vector transformed strings.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/cleanText.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean text — cleanText","text":"","code":"cleanText(\"Bernardo Lares 123\") #> [1] \"bernardo lares 123\" cleanText(\"Bèrnärdo LáreS 123\", lower = FALSE) #> [1] \"Bernardo LareS 123\" cleanText(\"Bernardo Lare$\", spaces = \".\", ascii = FALSE) #> [1] \"bernardo lare$\" cleanText(\"\\\\@®ì÷å   %ñS  ..-X\", spaces = FALSE) #> [1] \"riansx\" cleanText(c(\"maría\", \"€\", \"núñez_a.\"), title = TRUE) #> [1] \"Maria\"  \"Eur\"    \"Nuneza\""},{"path":"https://laresbernardo.github.io/lares/reference/clusterKmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Automated K-Means Clustering + PCA/t-SNE — clusterKmeans","title":"Automated K-Means Clustering + PCA/t-SNE — clusterKmeans","text":"function lets user cluster whole data.frame automatically. might know, goal kmeans group data points distinct non-overlapping subgroups. needed, one hot encoding applied categorical values automatically function. consideration: Scale/standardize data applying kmeans. Also, kmeans assumes spherical shapes clusters work well clusters different shapes elliptical clusters.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/clusterKmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automated K-Means Clustering + PCA/t-SNE — clusterKmeans","text":"","code":"clusterKmeans(   df,   k = NULL,   limit = 15,   drop_na = TRUE,   ignore = NULL,   ohse = TRUE,   norm = TRUE,   algorithm = c(\"Hartigan-Wong\", \"Lloyd\", \"Forgy\", \"MacQueen\"),   dim_red = \"PCA\",   comb = c(1, 2),   seed = 123,   quiet = FALSE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/clusterKmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automated K-Means Clustering + PCA/t-SNE — clusterKmeans","text":"df Dataframe k Integer. Number clusters limit Integer. many clusters considered? drop_na Boolean. NA rows removed? ignore Character vector. Names columns ignore. ohse Boolean. wish automatically run one hot encoding non-numerical columns? norm Boolean. data normalized? algorithm character: may abbreviated.  Note     \"Lloyd\" \"Forgy\" alternative names one     algorithm. dim_red Character. Select dimensionality reduction technique. Pass : c(\"PCA\", \"tSNE\", \"\", \"none\"). comb Vector. columns wish plot? Select two variables name column position. seed Numeric. Seed reproducibility quiet Boolean. Keep quiet? , print messages. ... Additional parameters pass sub-functions.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/clusterKmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automated K-Means Clustering + PCA/t-SNE — clusterKmeans","text":"List. k provided, contains nclusters nclusters_plot determine optimal k given WSS (Within Groups Sum Squares). k provided, additionally get: df data.frame original df plus cluster column clusters integer k fit kmeans object used fit clusters means data.frame means counts cluster correlations plot correlations grouped clusters PCA list PCA results (dim_red=\"PCA\") tSNE list t-SNE results (dim_red=\"tSNE\")","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/clusterKmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automated K-Means Clustering + PCA/t-SNE — clusterKmeans","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(\"iris\") df <- subset(iris, select = c(-Species)) print(head(df)) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1          5.1         3.5          1.4         0.2 #> 2          4.9         3.0          1.4         0.2 #> 3          4.7         3.2          1.3         0.2 #> 4          4.6         3.1          1.5         0.2 #> 5          5.0         3.6          1.4         0.2 #> 6          5.4         3.9          1.7         0.4  # If dataset has +5 columns, feel free to reduce dimenstionalities # with reduce_pca() or reduce_tsne() first  # Find optimal k check_k <- clusterKmeans(df, limit = 10) #> >>> Removed duplicate obserations: 1 check_k$nclusters_plot  # You can also use our other functions: # clusterOptimalK() and clusterVisualK()  # Run with selected k clusters <- clusterKmeans(df, k = 3) #> >>> Removed duplicate obserations: 1 names(clusters) #> [1] \"nclusters\"      \"nclusters_plot\" \"df\"             \"clusters\"       #> [5] \"fit\"            \"means\"          \"correlations\"   \"PCA\"             # Cross-Correlations for each cluster plot(clusters$correlations)   # PCA Results (when dim_red = \"PCA\") plot(clusters$PCA$plot_explained)  plot(clusters$PCA$plot)"},{"path":"https://laresbernardo.github.io/lares/reference/clusterOptimalK.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize K-Means Clusters for Several K Methods — clusterOptimalK","title":"Visualize K-Means Clusters for Several K Methods — clusterOptimalK","text":"Visualize cluster data assorted values k methods WSS, Silhouette Gap Statistic. See factoextra::fviz_nbclust .","code":""},{"path":"https://laresbernardo.github.io/lares/reference/clusterOptimalK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize K-Means Clusters for Several K Methods — clusterOptimalK","text":"","code":"clusterOptimalK(   df,   method = c(\"wss\", \"silhouette\", \"gap_stat\"),   drop_na = TRUE,   ohse = TRUE,   norm = TRUE,   quiet = TRUE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/clusterOptimalK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize K-Means Clusters for Several K Methods — clusterOptimalK","text":"df Dataframe method Character vector. drop_na Boolean. NA rows removed? ohse Boolean. wish automatically run one hot encoding non-numerical columns? norm Boolean. data normalized? quiet Boolean. Keep quiet? , print messages. ... Additional parameters passed factoextra::fviz_nbclust","code":""},{"path":"https://laresbernardo.github.io/lares/reference/clusterOptimalK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize K-Means Clusters for Several K Methods — clusterOptimalK","text":"Plot. Optimal number clusters df data.frame given selected method.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/clusterOptimalK.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize K-Means Clusters for Several K Methods — clusterOptimalK","text":"","code":"# You must have \"factoextra\" library to use this auxiliary function: if (FALSE) { data(\"iris\") df <- subset(iris, select = c(-Species)) # Calculate and plot optimal k clusters clusterOptimalK(df) }"},{"path":"https://laresbernardo.github.io/lares/reference/clusterVisualK.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize K-Means Clusters for Several K — clusterVisualK","title":"Visualize K-Means Clusters for Several K — clusterVisualK","text":"Visualize cluster data assorted values k.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/clusterVisualK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize K-Means Clusters for Several K — clusterVisualK","text":"","code":"clusterVisualK(df, ks = 1:6, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/clusterVisualK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize K-Means Clusters for Several K — clusterVisualK","text":"df Dataframe ks Integer vector. k tested? ... Additional parameters passed clusterKmeans","code":""},{"path":"https://laresbernardo.github.io/lares/reference/clusterVisualK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize K-Means Clusters for Several K — clusterVisualK","text":"List. Plot data.frame results clustering dfdata.frame ks integer clusters.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/clusterVisualK.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize K-Means Clusters for Several K — clusterVisualK","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(\"iris\") df <- subset(iris, select = c(-Species))  # Calculate and plot result <- clusterVisualK(df) #> >>> Removed duplicate obserations: 1 #> >>> Removed duplicate obserations: 1 #> >>> Removed duplicate obserations: 1 #> >>> Removed duplicate obserations: 1 #> >>> Removed duplicate obserations: 1 #> >>> Removed duplicate obserations: 1  # You can use the data generated as well lapply(result$data, function(x) head(x$cluster)) #> Warning: Unknown or uninitialised column: `cluster`. #> Warning: Unknown or uninitialised column: `cluster`. #> Warning: Unknown or uninitialised column: `cluster`. #> Warning: Unknown or uninitialised column: `cluster`. #> Warning: Unknown or uninitialised column: `cluster`. #> Warning: Unknown or uninitialised column: `cluster`. #> [[1]] #> NULL #>  #> [[2]] #> NULL #>  #> [[3]] #> NULL #>  #> [[4]] #> NULL #>  #> [[5]] #> NULL #>  #> [[6]] #> NULL #>"},{"path":"https://laresbernardo.github.io/lares/reference/conf_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Confussion Matrix — conf_mat","title":"Confussion Matrix — conf_mat","text":"function calculates Confussion Matrix using crosstab 2 categories. can either set score threshold labels wish cross .","code":""},{"path":"https://laresbernardo.github.io/lares/reference/conf_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confussion Matrix — conf_mat","text":"","code":"conf_mat(tag, score, thresh = 0.5, sense = \">=\", diagonal = TRUE, plot = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/conf_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confussion Matrix — conf_mat","text":"tag Vector. Real known label score Vector. Predicted value model's result thresh Integer. Threshold selecting binary regression models: number threshold unique values 'tag' (: regression; less : classification) sense Character. Inequation sense threshold: <, <=, >=, > diagonal Boolean. FALSE convert diagonal numbers zeroes. Ideal detect must confusing categories. plot Boolean. Plot result? Uses mplot_conf()","code":""},{"path":"https://laresbernardo.github.io/lares/reference/conf_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confussion Matrix — conf_mat","text":"data.frame. Result counting tag score's tag given threshold, similar base::table().","code":""},{"path":"https://laresbernardo.github.io/lares/reference/conf_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confussion Matrix — conf_mat","text":"may use mplot_conf() set plot=TRUE.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/conf_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confussion Matrix — conf_mat","text":"","code":"data(dfr) # Results for AutoML Predictions lapply(dfr[c(1, 2)], head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>   # Results for Binomial Model conf_mat(dfr$class2$tag, dfr$class2$scores) #> # A tibble: 2 × 3 #>   `Real x Pred` `FALSE` `TRUE` #>   <fct>           <int>  <int> #> 1 FALSE               9    156 #> 2 TRUE               68     35 conf_mat(dfr$class2$tag, dfr$class2$scores, thresh = 0.3) #> # A tibble: 2 × 3 #>   `Real x Pred` `FALSE` `TRUE` #>   <fct>           <int>  <int> #> 1 FALSE              27    138 #> 2 TRUE               84     19 conf_mat(dfr$class2$tag, dfr$class2$scores, sense = \"<=\") #> # A tibble: 2 × 3 #>   `Real x Pred` `FALSE` `TRUE` #>   <fct>           <int>  <int> #> 1 FALSE             156      9 #> 2 TRUE               35     68  # Results for Multi-Categorical Model conf_mat(dfr$class3$tag, dfr$class3$score) #> # A tibble: 3 × 4 #>   `Real x Pred`   n_3   n_1   n_2 #>   <fct>         <int> <int> <int> #> 1 n_3             120    11    18 #> 2 n_1              12    43     8 #> 3 n_2              26    15    15"},{"path":"https://laresbernardo.github.io/lares/reference/corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation table — corr","title":"Correlation table — corr","text":"function correlates whole dataframe, running one hot smart encoding (ohse) transform non-numerical features. Note automatically suppress columns less 3 non missing values warn user.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation table — corr","text":"","code":"corr(   df,   method = \"pearson\",   use = \"pairwise.complete.obs\",   pvalue = FALSE,   half = FALSE,   dec = 6,   ignore = NULL,   dummy = TRUE,   redundant = NULL,   logs = FALSE,   limit = 10,   top = NA,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation table — corr","text":"df Dataframe. matter got non-numerical columns: filtered. method Character. : c(\"pearson\", \"kendall\", \"spearman\"). use Character. Method computing covariances presence missing values. Check stats::cor options. pvalue Boolean. Returns list, correlations statistical significance (p-value) value. half Boolean. Return half matrix? redundant symmetrical correlations NA. dec Integer. Number decimals round correlations p-values. ignore Vector character. column ignored? dummy Boolean. One Hot (Smart) Encoding (ohse()) applied categorical columns? redundant Boolean. keep redundant columns? .e. column two different values, keep new columns? set NULL, binary variables dump redundant columns. logs Boolean. Calculate log(x)+1 numerical columns? limit Integer. Limit one hot encoding n frequent values column. Set NA ignore argument. top Integer. Select top N relevant variables? Filtered sorted mean variable's correlations. ... Additional parameters passed ohse, corr, /cor.test.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation table — corr","text":"data.frame. Squared dimensions (N x N) match every correlation every df data.frame column/variable. Notice using ohse() may get dimensions.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation table — corr","text":"","code":"data(dft) # Titanic dataset df <- dft[, 2:5]  # Correlation matrix (without redundancy) corr(df, half = TRUE) #>                     Age Survived_TRUE  Sex_male  Pclass_1 Pclass_2 Pclass_3 #> Age                  NA            NA        NA        NA       NA       NA #> Survived_TRUE -0.077221            NA        NA        NA       NA       NA #> Sex_male       0.093254     -0.543351        NA        NA       NA       NA #> Pclass_1       0.348941      0.285904 -0.098013        NA       NA       NA #> Pclass_2       0.006954      0.093349 -0.064746 -0.288585       NA       NA #> Pclass_3      -0.312271     -0.322308  0.137143 -0.626738 -0.56521       NA  # Ignore specific column corr(df, ignore = \"Pclass\") #>                     Age Survived_TRUE  Sex_male #> Age            1.000000     -0.077221  0.093254 #> Survived_TRUE -0.077221      1.000000 -0.543351 #> Sex_male       0.093254     -0.543351  1.000000  # Calculate p-values as well corr(df, pvalue = TRUE, limit = 1) #> $cor #>                     Age Survived_TRUE  Sex_male  Pclass_3 Pclass_OTHER #> Age            1.000000     -0.077221  0.093254 -0.312271     0.312271 #> Survived_TRUE -0.077221      1.000000 -0.543351 -0.322308     0.322308 #> Sex_male       0.093254     -0.543351  1.000000  0.137143    -0.137143 #> Pclass_3      -0.312271     -0.322308  0.137143  1.000000    -1.000000 #> Pclass_OTHER   0.312271      0.322308 -0.137143 -1.000000     1.000000 #>  #> $pvalue #>                        Age Survived_TRUE     Sex_male     Pclass_3 Pclass_OTHER #> Age           0.000000e+00  3.912465e-02 1.267130e-02 1.295594e-17 1.295594e-17 #> Survived_TRUE 3.912465e-02  0.000000e+00 1.406066e-69 5.510281e-23 5.510281e-23 #> Sex_male      1.267130e-02  1.406066e-69 0.000000e+00 4.002500e-05 4.002500e-05 #> Pclass_3      1.295594e-17  5.510281e-23 4.002500e-05 0.000000e+00 0.000000e+00 #> Pclass_OTHER  1.295594e-17  5.510281e-23 4.002500e-05 0.000000e+00 0.000000e+00 #>   # Test when no more than 2 non-missing values df$trash <- c(1, rep(NA, nrow(df) - 1)) # and another method... corr(df, method = \"spearman\") #> Warning: Dropped columns with less than 3 non-missing values: 'trash' #>                     Age Survived_TRUE  Sex_male  Pclass_1  Pclass_2  Pclass_3 #> Age            1.000000     -0.052565  0.083330  0.333881  0.031291 -0.319907 #> Survived_TRUE -0.052565      1.000000 -0.543351  0.285904  0.093349 -0.322308 #> Sex_male       0.083330     -0.543351  1.000000 -0.098013 -0.064746  0.137143 #> Pclass_1       0.333881      0.285904 -0.098013  1.000000 -0.288585 -0.626738 #> Pclass_2       0.031291      0.093349 -0.064746 -0.288585  1.000000 -0.565210 #> Pclass_3      -0.319907     -0.322308  0.137143 -0.626738 -0.565210  1.000000"},{"path":"https://laresbernardo.github.io/lares/reference/corr_cross.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranked cross-correlation across all variables — corr_cross","title":"Ranked cross-correlation across all variables — corr_cross","text":"function creates correlation full study returns rank highest correlation variables obtained cross-table.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/corr_cross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranked cross-correlation across all variables — corr_cross","text":"","code":"corr_cross(   df,   plot = TRUE,   pvalue = TRUE,   max_pvalue = 1,   type = 1,   max = 1,   top = 25,   local = 1,   ignore = NULL,   contains = NA,   grid = TRUE,   rm.na = FALSE,   quiet = FALSE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/corr_cross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranked cross-correlation across all variables — corr_cross","text":"df Dataframe. matter got non-numerical columns: filtered. plot Boolean. Show return plot? pvalue Boolean. Returns list, correlations statistical significance (p-value) value. max_pvalue Numeric. Filter non-significant variables. Range (0, 1] type Integer. Plot type. 1 overall rank. 2 local rank. max Numeric. Maximum correlation permitted (0 1) top Integer. Return top n results . valid type = 1. Set value NA use cross-correlations local Integer. Label top n local correlations. valid type = 2 ignore Vector character. column ignored? contains Character vector. Filter cross-correlations variables contains certain strings (using value vector used). grid Boolean. Separate grids? rm.na Boolean. Remove NAs? quiet Boolean. Keep quiet? , show messages ... Additional parameters passed corr","code":""},{"path":"https://laresbernardo.github.io/lares/reference/corr_cross.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ranked cross-correlation across all variables — corr_cross","text":"Depending input plot, get correlation p-value results every combination features, arranged descending absolute correlation value, data.frame plot = FALSE plot plot = TRUE.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/corr_cross.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ranked cross-correlation across all variables — corr_cross","text":"DataScience+ Post: Find Insights Ranked Cross-Correlations","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/corr_cross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ranked cross-correlation across all variables — corr_cross","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dft) # Titanic dataset  # Only data with no plot corr_cross(dft, plot = FALSE, top = 10) #> Warning: the standard deviation is zero #> Returning only the top 10. You may override with the 'top' argument #> # A tibble: 10 × 8 #> # Rowwise:  #>    key           mix               corr    pvalue group1   cat1   group2 cat2    #>    <chr>         <chr>            <dbl>     <dbl> <chr>    <chr>  <chr>  <chr>   #>  1 Ticket_113781 Cabin_C22.C26    0.866 3.35e-269 Ticket   113781 Cabin  \"C22.C… #>  2 Pclass_1      Cabin_OTHER      0.795 4.58e-195 Pclass   1      Cabin  \"OTHER\" #>  3 Pclass_1      Cabin_          -0.789 4.39e-190 Pclass   1      Cabin  \"\"      #>  4 SibSp         Ticket_CA..2343  0.604 1.40e- 89 SibSp    SibSp  Ticket \"CA..2… #>  5 Fare          Pclass_1         0.592 2.87e- 85 Fare     Fare   Pclass \"1\"     #>  6 SibSp         Ticket_OTHER    -0.571 3.37e- 78 SibSp    SibSp  Ticket \"OTHER\" #>  7 Survived_TRUE Sex_male        -0.543 1.41e- 69 Survived TRUE   Sex    \"male\"  #>  8 Pclass_3      Cabin_           0.539 2.25e- 68 Pclass   3      Cabin  \"\"      #>  9 Pclass_3      Cabin_OTHER     -0.502 3.94e- 58 Pclass   3      Cabin  \"OTHER\" #> 10 Fare          Cabin_          -0.482 4.85e- 53 Fare     Fare   Cabin  \"\"       # Show only most relevant results filtered by pvalue corr_cross(dft, rm.na = TRUE, max_pvalue = 0.05, top = 15) #> Warning: the standard deviation is zero #> Returning only the top 15. You may override with the 'top' argument   # Cross-Correlation for certain variables corr_cross(dft, contains = c(\"Survived\", \"Fare\")) #> Warning: the standard deviation is zero   # Cross-Correlation max values per category corr_cross(dft, type = 2, top = NA) #> Warning: the standard deviation is zero"},{"path":"https://laresbernardo.github.io/lares/reference/corr_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation between variable and dataframe — corr_var","title":"Correlation between variable and dataframe — corr_var","text":"function correlates whole dataframe single feature. automatically runs ohse (one-hot-smart-encoding) need input numerical values.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/corr_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation between variable and dataframe — corr_var","text":"","code":"corr_var(   df,   var,   pvalue = TRUE,   ignore = NULL,   trim = 0,   clean = FALSE,   plot = TRUE,   top = NA,   ceiling = 100,   max_pvalue = 1,   limit = 10,   ranks = FALSE,   zeroes = FALSE,   save = FALSE,   quiet = FALSE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/corr_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation between variable and dataframe — corr_var","text":"df Dataframe. matter got non-numerical columns: filtered. var Variable. Name variable correlate. Note variable var numerical, 1. may define category select using `var_category`; 2. may add redundant = TRUE enable categories (instead n-1). pvalue Boolean. Returns list, correlations statistical significance (p-value) value. ignore Character vector. columns wish exclude? trim Integer. Trim words nth character categorical values (applies , target values) clean Boolean. Use lares::cleanText categorical values (applies , target values) plot Boolean. wish plot result? set TRUE, function return plot result's data top Integer. want plot top correlations, define many ceiling Numeric. Remove correlations ... Range: (0-100] max_pvalue Numeric. Filter non-significant variables. Range (0, 1] limit Integer. Limit one hot encoding n frequent values column. Set NA ignore argument. ranks Boolean. Add ranking numbers? zeroes wish keep zeroes correlations ? save Boolean. Save output plot working directory quiet Boolean. Keep quiet? , show messages ... Additional parameters passed corr cor.test","code":""},{"path":"https://laresbernardo.github.io/lares/reference/corr_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation between variable and dataframe — corr_var","text":"data.frame. variables, correlation p-value results feature, arranged descending absolute correlation value.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/corr_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation between variable and dataframe — corr_var","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dft) # Titanic dataset  corr_var(dft, Survived, method = \"spearman\", plot = FALSE, top = 10) #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: the standard deviation is zero #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Cannot compute exact p-value with ties #> Warning: Maybe you meant one of: 'Survived_TRUE' #> Automatically using 'Survived_TRUE #> Warning: Not a valid input: Survived was transformed or does not exist. #>                 variables      corr       pvalue #> Sex_male         Sex_male -0.543351 1.406066e-69 #> Fare                 Fare  0.323736 3.471228e-23 #> Pclass_3         Pclass_3 -0.322308 5.510281e-23 #> Cabin_             Cabin_ -0.316912 3.090891e-22 #> Pclass_1         Pclass_1  0.285904 3.190582e-18 #> Cabin_OTHER   Cabin_OTHER  0.277835 2.949939e-17 #> Embarked_C     Embarked_C  0.168240 4.397151e-07 #> Embarked_S     Embarked_S -0.155660 3.036111e-06 #> Parch               Parch  0.138266 3.453591e-05 #> Ticket_OTHER Ticket_OTHER  0.102598 2.167223e-03  # With plots, results are easier to compare:  # Correlate Survived with everything else and show only significant results dft %>% corr_var(Survived_TRUE, max_pvalue = 0.01) #> Warning: the standard deviation is zero   # Top 15 with less than 50% correlation and show ranks dft %>% corr_var(Survived_TRUE, ceiling = 60, top = 15, ranks = TRUE) #> Removing all correlations greater than 60% (absolute)"},{"path":"https://laresbernardo.github.io/lares/reference/cran_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and plot daily downloads of CRAN packages — cran_logs","title":"Download and plot daily downloads of CRAN packages — cran_logs","text":"Download daily downloads stats CRAN package, plot. can also used auxiliary function plot (cranlogs::cran_downloads) results.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/cran_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and plot daily downloads of CRAN packages — cran_logs","text":"","code":"cran_logs(   input = \"lares\",   from = Sys.Date() - 31,   to = Sys.Date() - 1,   plot = TRUE )"},{"path":"https://laresbernardo.github.io/lares/reference/cran_logs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and plot daily downloads of CRAN packages — cran_logs","text":"input Character vector package names data.frame product cranlogs::cran_downloads. , Dates. Range dates fetch downloads metrics. plot Boolean. Create plot?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/cran_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and plot daily downloads of CRAN packages — cran_logs","text":"List data.frame plot plot=TRUE.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/cran_logs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and plot daily downloads of CRAN packages — cran_logs","text":"","code":"# \\donttest{ cran_logs(c(\"lares\", \"dplyr\"), from = \"2021-05-31\") #> $df #> # A tibble: 518 × 3 #>    date       count package #>    <date>     <int> <chr>   #>  1 2022-02-13    26 lares   #>  2 2022-02-13 33280 dplyr   #>  3 2022-02-12    78 lares   #>  4 2022-02-12 33203 dplyr   #>  5 2022-02-11   132 lares   #>  6 2022-02-11 60867 dplyr   #>  7 2022-02-10   161 lares   #>  8 2022-02-10 74137 dplyr   #>  9 2022-02-09   169 lares   #> 10 2022-02-09 82339 dplyr   #> # … with 508 more rows #>  #> $plot  #>  # }"},{"path":"https://laresbernardo.github.io/lares/reference/crosstab.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Cross Tabulation — crosstab","title":"Weighted Cross Tabulation — crosstab","text":"cross-tabulation function output similar STATA, tidy friendly, weighting possibility.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/crosstab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Cross Tabulation — crosstab","text":"","code":"crosstab(   df,   ...,   wt = NULL,   prow = FALSE,   pcol = FALSE,   pall = FALSE,   decimals = 2,   rm.na = FALSE,   total = TRUE,   order = TRUE )"},{"path":"https://laresbernardo.github.io/lares/reference/crosstab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Cross Tabulation — crosstab","text":"df Data.frame. ... Variables. Dependent independent variables. wt Variable, numeric. Weights. prow, pcol, pall Boolean. Calculate percent values rows, columns, whole table, respectively. decimals Integer. many decimals returned? rm.na Boolean. Remove NA values? total Boolean. Return total values column? order Boolean. Sort columns rows frequencies? Else, sorted alphabetically","code":""},{"path":"https://laresbernardo.github.io/lares/reference/crosstab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Cross Tabulation — crosstab","text":"data.frame. Result crossing variables provided ... counting many observations (rows) fall criteria.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/crosstab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Cross Tabulation — crosstab","text":"","code":"data(dft) # Titanic dataset crosstab(dft, Survived, Pclass, total = FALSE) #> # A tibble: 2 × 4 #>   `Survived x Pclass`   `3`   `1`   `2` #>   <fct>               <int> <int> <int> #> 1 FALSE                 372    80    97 #> 2 TRUE                  119   136    87 # Show values in percentages crosstab(dft, Pclass, Survived, prow = TRUE) #> # A tibble: 3 × 4 #>   `Pclass x Survived` `FALSE` `TRUE` total #>   <fct>                 <dbl>  <dbl> <dbl> #> 1 3                      67.8   34.8  55.1 #> 2 1                      14.6   39.8  24.2 #> 3 2                      17.7   25.4  20.6 crosstab(dft, Pclass, Survived, pall = TRUE) #> # A tibble: 3 × 4 #>   `Pclass x Survived` `FALSE` `TRUE` total #>   <fct>                 <dbl>  <dbl> <dbl> #> 1 3                     41.8   13.4   55.1 #> 2 1                      8.98  15.3   24.2 #> 3 2                     10.9    9.76  20.6 # Weighted by another variable crosstab(dft, Survived, Pclass, wt = Fare, prow = TRUE) #> # A tibble: 2 × 5 #>   `Survived x Pclass`   `1`   `3`   `2` total #>   <fct>               <dbl> <dbl> <dbl> <dbl> #> 1 TRUE                 71.5  24.3  50.5  57.7 #> 2 FALSE                28.5  75.7  49.5  42.3"},{"path":"https://laresbernardo.github.io/lares/reference/daily_portfolio.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily Portfolio Dataframe — daily_portfolio","title":"Daily Portfolio Dataframe — daily_portfolio","text":"function creates dataframe relevant metrics values, overall portfolio, every day since inception.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/daily_portfolio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily Portfolio Dataframe — daily_portfolio","text":"","code":"daily_portfolio(hist, trans, cash, cash_fix = 0, window = \"MAX\")"},{"path":"https://laresbernardo.github.io/lares/reference/daily_portfolio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Daily Portfolio Dataframe — daily_portfolio","text":"hist Dataframe. Result stocks_hist() trans Dataframe. Result stocks_file()$transactions cash Dataframe. Result stocks_file()$cash cash_fix Numeric. , reason, need fix cash amount reports, set amount window Character. Choose : \"1W\", \"1M\", \"6M\", \"1Y\", \"YTD\", \"5Y\", \"MAX\"","code":""},{"path":"https://laresbernardo.github.io/lares/reference/daily_portfolio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Daily Portfolio Dataframe — daily_portfolio","text":"data.frame. Processed date portfolio level.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/daily_stocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily Stocks Dataframe — daily_stocks","title":"Daily Stocks Dataframe — daily_stocks","text":"function creates dataframe relevant metrics values, ticker symbol, every day since inception.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/daily_stocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily Stocks Dataframe — daily_stocks","text":"","code":"daily_stocks(hist, trans, tickers = NA, window = \"MAX\")"},{"path":"https://laresbernardo.github.io/lares/reference/daily_stocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Daily Stocks Dataframe — daily_stocks","text":"hist Dataframe. Result stocks_hist() trans Dataframe. Result stocks_file()$transactions tickers Dataframe. Result stocks_file()$portfolio window Character. Choose : \"1W\", \"1M\", \"6M\", \"1Y\", \"YTD\", \"5Y\", \"MAX\"","code":""},{"path":"https://laresbernardo.github.io/lares/reference/daily_stocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Daily Stocks Dataframe — daily_stocks","text":"data.frame. Processed date symbol level.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/dalex_local.html","id":null,"dir":"Reference","previous_headings":"","what":"DALEX Local — dalex_local","title":"DALEX Local — dalex_local","text":"DALEX function local interpretations","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dalex_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DALEX Local — dalex_local","text":"","code":"dalex_local(explainer, observation = NA, row = 1, type = \"break_down\")"},{"path":"https://laresbernardo.github.io/lares/reference/dalex_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DALEX Local — dalex_local","text":"explainer Object. Result h2o_explainer function observation Data.frame. want use observation original explainer function, add . Else, use row row Dataframe. Row number data.frame used explainer. type Character. type variable attributions. Either shap, oscillations, break_down break_down_interactions.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dalex_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DALEX Local — dalex_local","text":"List. Containing observation, breakdown results, breakdown plot.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/dalex_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"DALEX Residuals — dalex_residuals","title":"DALEX Residuals — dalex_residuals","text":"DALEX function residuals","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dalex_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DALEX Residuals — dalex_residuals","text":"","code":"dalex_residuals(explainer)"},{"path":"https://laresbernardo.github.io/lares/reference/dalex_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DALEX Residuals — dalex_residuals","text":"explainer Object. Result h2o_explainer function","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dalex_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DALEX Residuals — dalex_residuals","text":"Plot. Based explainer residual results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/dalex_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"DALEX Partial Dependency Plots (PDP) — dalex_variable","title":"DALEX Partial Dependency Plots (PDP) — dalex_variable","text":"DALEX auxiliary function creating Partial Dependency Plots study variable's responses vs independent vector.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dalex_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DALEX Partial Dependency Plots (PDP) — dalex_variable","text":"","code":"dalex_variable(explainer, vars, force_class = NA, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/dalex_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DALEX Partial Dependency Plots (PDP) — dalex_variable","text":"explainer Object. Result h2o_explainer function. vars Character vector. features wish study? force_class Character. wish force class vars, one need? ... Additional parameters passed model_profile.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dalex_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DALEX Partial Dependency Plots (PDP) — dalex_variable","text":"List. Containing PDP results, plot vars input.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/dalex_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DALEX Partial Dependency Plots (PDP) — dalex_variable","text":"","code":"# You must have \"DALEX\" library to use this auxiliary function: if (FALSE) { # Having an \"explainer\" object created with \\code{h2o_explainer}: # For numerical variables dalex_variable(explainer, vars = c(\"Age\", \"Fare\")) # For categorical variables dalex_variable(explainer, vars = c(\"Pclass\", \"Sex\")) }"},{"path":"https://laresbernardo.github.io/lares/reference/date_cuts.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Date into Year + Cut — date_cuts","title":"Convert Date into Year + Cut — date_cuts","text":"function returns categorical values date(s) using year cuts bimonths, quarters, terms, halves.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/date_cuts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Date into Year + Cut — date_cuts","text":"","code":"date_cuts(date = Sys.Date(), type = \"Q\")"},{"path":"https://laresbernardo.github.io/lares/reference/date_cuts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Date into Year + Cut — date_cuts","text":"date Date. Date wish transform type Character. following: B (2 months), Q (3 months), T (4 months), H (6 months)","code":""},{"path":"https://laresbernardo.github.io/lares/reference/date_cuts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Date into Year + Cut — date_cuts","text":"Vector date cut date","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/date_cuts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Date into Year + Cut — date_cuts","text":"","code":"date_cuts(Sys.Date(), type = \"Q\") #> [1] \"Q1\" date_cuts(Sys.Date(), type = \"H\") #> [1] \"H1\""},{"path":"https://laresbernardo.github.io/lares/reference/date_feats.html","id":null,"dir":"Reference","previous_headings":"","what":"One Hot Encoding for Date/Time Variables (Dummy Variables) — date_feats","title":"One Hot Encoding for Date/Time Variables (Dummy Variables) — date_feats","text":"function lets user automatically create new columns dataframe vector date/time variables.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/date_feats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One Hot Encoding for Date/Time Variables (Dummy Variables) — date_feats","text":"","code":"date_feats(   dates,   drop = FALSE,   only = NA,   append = FALSE,   holidays = FALSE,   country = \"Venezuela\",   currency_pair = NA,   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/date_feats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One Hot Encoding for Date/Time Variables (Dummy Variables) — date_feats","text":"dates Vector dataframe. Non-date/time columns automatically ignored/extracted. drop Boolean. original date/time columns kept results? valid input dataframe. Character vector. columns wish process? non explicitly defined, processed append Boolean. Append results existing data.frame? FALSE, calculated values returned. holidays Boolean. Include holidays new columns? country Character vector. countries holidays included? currency_pair Character. currency exchange wish get history ? .e, USD/COP, EUR/USD... quiet Boolean. Quiet messages?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/date_feats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One Hot Encoding for Date/Time Variables (Dummy Variables) — date_feats","text":"data.frame additional features calculated time date vectors.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/date_feats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One Hot Encoding for Date/Time Variables (Dummy Variables) — date_feats","text":"","code":"df <- data.frame(   dates = sample(seq(Sys.Date() - 365, Sys.Date(), by = 1), 50),   times = sample(seq(Sys.time() - 1e7, Sys.time(), by = 1), 50) )  # Input as a vector or dataframe date_feats(df, drop = TRUE) %>% head(10) #> >>> Processing 2 date/time columns: 'dates', 'times' #> Warning: argument 'pattern' has length > 1 and only the first element will be used #> # A tibble: 10 × 14 #>    dates_year dates_month dates_day dates_week dates_weekday dates_weekend #>         <dbl>       <dbl>     <int>      <dbl> <chr>         <lgl>         #>  1       2021           8        12         32 Thu           FALSE         #>  2       2021           2        28          9 Sun           TRUE          #>  3       2021           8        28         35 Sat           TRUE          #>  4       2021          12        17         51 Fri           FALSE         #>  5       2021           6        12         24 Sat           TRUE          #>  6       2021          12        10         50 Fri           FALSE         #>  7       2021          10         1         40 Fri           FALSE         #>  8       2021          10        16         42 Sat           TRUE          #>  9       2022           2        14          7 Mon           FALSE         #> 10       2021           7        17         29 Sat           TRUE          #> # … with 8 more variables: dates_year_day <int>, times_year <dbl>, #> #   times_month <dbl>, times_day <int>, times_week <dbl>, times_weekday <chr>, #> #   times_weekend <lgl>, times_year_day <int>  # Holidays given a date range and country # \\donttest{ hol <- date_feats(   seq(Sys.Date() - 365, Sys.Date(), by = 1),   holidays = TRUE,   country = \"Colombia\" ) #> >>> Processing 1 date/time columns: 'df' #> >>> Extracting Colombia's holidays for 2021 #> >>> Extracting Colombia's holidays for 2022 #> Warning: invalid factor level, NA generated head(hol[!is.na(hol$holidayname), ]) #> # A tibble: 6 × 16 #>   values month   day  week weekday weekend year_day holidayname      holidaytype #>    <dbl> <dbl> <int> <dbl> <chr>   <lgl>      <int> <chr>            <chr>       #> 1   2021     3     8    10 Mon     FALSE         66 Women's Day      Observance  #> 2   2021     3    19    12 Fri     FALSE         77 Saint Joseph's … Observance  #> 3   2021     3    20    12 Sat     TRUE          78 March Equinox    Season      #> 4   2021     3    22    12 Mon     FALSE         80 Saint Joseph's … National h… #> 5   2021     3    28    13 Sun     TRUE          86 Palm Sunday      Observance… #> 6   2021     4     1    13 Thu     FALSE         90 Maundy Thursday  National h… #> # … with 7 more variables: holiday_national <lgl>, holiday_observance <lgl>, #> #   holiday_bank <lgl>, holiday_nonwork <lgl>, holiday_season <lgl>, #> #   holiday_hother <lgl>, holiday_county <fct> # }"},{"path":"https://laresbernardo.github.io/lares/reference/db_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download/Import Dropbox File by File's Name — db_download","title":"Download/Import Dropbox File by File's Name — db_download","text":"function lets user download file Dropbox, specifying name, using previously created token interactive window.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/db_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download/Import Dropbox File by File's Name — db_download","text":"","code":"db_download(   query,   local_path = NULL,   xlsx = TRUE,   token_dir = NA,   token_name = \"token_pers.rds\",   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/db_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download/Import Dropbox File by File's Name — db_download","text":"query Search string. string split (spaces) individual words. Files used contain words search string. local_path Character. Path save file . NULL (default), saves file working directory name. , valid folder, file saved folder basename path. NULL folder, file saved path exactly. xlsx Boolean. Excel file? Can returned list tab file needed. delete downloaded file. token_dir Character. RDS token local directory. may set NA already set credentials (see get_creds()) token_name Character. RDS file name token's data. quiet Boolean. Keep quiet? , show informative messages.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/db_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download/Import Dropbox File by File's Name — db_download","text":"query returns .xlsx file xlsx=TRUE, return data.frame. Else, local_path string.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/db_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download/Import Dropbox File by File's Name — db_download","text":"","code":"if (FALSE) { # Download a specific file db_download(\"stocksReport.Rmd\", local_path = \"~/Desktop/generic.Rmd\") # Import an Excel file from Dropbox into a data.frame df <- db_download(\"Portfolio LC.xlsx\", xlsx = FALSE) }"},{"path":"https://laresbernardo.github.io/lares/reference/db_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload Local Files to Dropbox — db_upload","title":"Upload Local Files to Dropbox — db_upload","text":"function lets user upload local file Dropbox, using previously created token interactive window.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/db_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload Local Files to Dropbox — db_upload","text":"","code":"db_upload(   filename,   dir,   delete_file = FALSE,   token_dir = NA,   token_name = \"token_pers.rds\" )"},{"path":"https://laresbernardo.github.io/lares/reference/db_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload Local Files to Dropbox — db_upload","text":"filename String. Local file's name upload. dir String. Directory wish upload file . delete_file Boolean. Delete local file uploading? token_dir Character. RDS token local directory. may set NA already set credentials (see get_creds()) token_name Character. RDS file name token's data.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/db_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload Local Files to Dropbox — db_upload","text":"TRUE successfully uploads file.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/df_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset columns and rows structure — df_str","title":"Dataset columns and rows structure — df_str","text":"function lets user check quickly structure dataset (data.frame). returns multiple counters useful metrics, plot, list column names column metrics.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/df_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset columns and rows structure — df_str","text":"","code":"df_str(df, return = \"plot\", subtitle = NA, quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/df_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset columns and rows structure — df_str","text":"df Dataframe return Character. Return \"skimr\" skim report, \"numbers\" stats numbers, \"names\" list column names class types, \"plot\" nice plot \"numbers\" output, \"distr\" overall summary plot showing categorical, numeric, missing values using plot_df distributions subtitle Character. Add subtitle plot quiet Boolean. Keep quiet show options available?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/df_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dataset columns and rows structure — df_str","text":"Depending return input based df structure: list names columns classified class data.frame numbers: total values, row, columns,   complete rows plot visualizations","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/df_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset columns and rows structure — df_str","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dft) # Titanic dataset df_str(dft, \"names\") #> Other available 'return' options: 'skimr', 'numbers', 'distr', 'plot' #> $cols #>  [1] \"PassengerId\" \"Survived\"    \"Pclass\"      \"Sex\"         \"Age\"         #>  [6] \"SibSp\"       \"Parch\"       \"Ticket\"      \"Fare\"        \"Cabin\"       #> [11] \"Embarked\"    #>  #> $nums #> [1] \"PassengerId\" \"Age\"         \"SibSp\"       \"Parch\"       \"Fare\"        #>  #> $char #> [1] \"Ticket\" #>  #> $factor #> [1] \"Pclass\"   \"Sex\"      \"Cabin\"    \"Embarked\" #>  #> $logic #> [1] \"Survived\" #>  #> $time #> character(0) #>  #> $allnas #> character(0) #>  df_str(dft, \"numbers\", quiet = TRUE) #>                                  metric counter       p #> Total.Values               Total.Values    9801  100.00 #> Total.Rows                   Total.Rows     891  100.00 #> Total.Columns             Total.Columns      11  100.00 #> Numeric.Columns         Numeric.Columns       5   45.45 #> Character.Columns     Character.Columns       1    9.09 #> Factor.Columns           Factor.Columns       4   36.36 #> Logical.Columns         Logical.Columns       1    9.09 #> Time.Date.Columns     Time.Date.Columns       0    0.00 #> All.Missing.Columns All.Missing.Columns       0    0.00 #> Missing.Values           Missing.Values     177    1.81 #> Complete.Rows             Complete.Rows     714   80.13 #> Memory.Usage               Memory.Usage  103448 1055.48 df_str(dft, \"plot\", quiet = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/dfr.html","id":null,"dir":"Reference","previous_headings":"","what":"Results for AutoML Predictions — dfr","title":"Results for AutoML Predictions — dfr","text":"List categorical (2 3 classes) continuous predictions, generated h2o_automl() dft. Note models per se work predict.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dfr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results for AutoML Predictions — dfr","text":"","code":"data(dfr)"},{"path":"https://laresbernardo.github.io/lares/reference/dfr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Results for AutoML Predictions — dfr","text":"object class \"list\" 3 \"data.frame\" class2 Predictions Binomial Classification Model class3 Predictions Multi-Categorical Classification Model regr Predictions Continuous Regression Model","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dfr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Results for AutoML Predictions — dfr","text":"List","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/dfr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Results for AutoML Predictions — dfr","text":"","code":"data(dfr) lapply(dfr, head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>  #> $regr #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 #>"},{"path":"https://laresbernardo.github.io/lares/reference/dft.html","id":null,"dir":"Reference","previous_headings":"","what":"Titanic Dataset — dft","title":"Titanic Dataset — dft","text":"sinking Titanic one infamous shipwrecks history. April 15, 1912, maiden voyage, widely considered \"unsinkable\" RMS Titanic sank colliding iceberg. Unfortunately, weren’t enough lifeboats everyone onboard, resulting death 1502 2224 passengers crew. element luck involved surviving, seems groups people likely survive others. dataset contains details subset passengers board (891 exact) taken Kaggle's Titanic Train.csv.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Titanic Dataset — dft","text":"","code":"data(dft)"},{"path":"https://laresbernardo.github.io/lares/reference/dft.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Titanic Dataset — dft","text":"object class \"data.frame\" PassengerId Unique ID passenger (1-891) Survived passenger survive? (TRUE, FALSE) Pclass Ticket class, first third (1, 2, 3) Sex Gender (female, male) Age Age passenger years (0.42-80) SibSp Amount siblings / spouses aboard Titanic (0-8) Parch Amount parents / children aboard Titanic (0-6) Ticket Ticket IDs Fare Amount paid passenger's ticket (0-512.3292) Cabin width top diamond relative widest point (43-95) Embarked Port Embarkation (43-95)","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Titanic Dataset — dft","text":"data.frame","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/dft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Titanic Dataset — dft","text":"","code":"data(dft) head(dft) #>   PassengerId Survived Pclass    Sex Age SibSp Parch           Ticket    Fare #> 1           1    FALSE      3   male  22     1     0        A/5 21171  7.2500 #> 2           2     TRUE      1 female  38     1     0         PC 17599 71.2833 #> 3           3     TRUE      3 female  26     0     0 STON/O2. 3101282  7.9250 #> 4           4     TRUE      1 female  35     1     0           113803 53.1000 #> 5           5    FALSE      3   male  35     0     0           373450  8.0500 #> 6           6    FALSE      3   male  NA     0     0           330877  8.4583 #>   Cabin Embarked #> 1              S #> 2   C85        C #> 3              S #> 4  C123        S #> 5              S #> 6              Q"},{"path":"https://laresbernardo.github.io/lares/reference/dist2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance from specific point to line — dist2d","title":"Distance from specific point to line — dist2d","text":"function lets user calculate mathematical linear distance specific point line (given geometrical 3 points)","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dist2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance from specific point to line — dist2d","text":"","code":"dist2d(x, a = c(0, 0), b = c(1, 1))"},{"path":"https://laresbernardo.github.io/lares/reference/dist2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance from specific point to line — dist2d","text":"x Vector. Coordinates point want measure distance Vector. Coordinates 1st point line b Vector. Coordinates 2st point line","code":""},{"path":"https://laresbernardo.github.io/lares/reference/dist2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance from specific point to line — dist2d","text":"Numeric value result","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/dist2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance from specific point to line — dist2d","text":"","code":"dist2d(x = c(5, 2)) #> [1] 2.12132 dist2d(x = c(5, 2), a = c(0, 0), b = c(0, 1)) #> [1] 5 dist2d(x = c(5, 2), a = c(0, 0), b = c(1, 0)) #> [1] 2"},{"path":"https://laresbernardo.github.io/lares/reference/distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Variables with their Distributions — distr","title":"Compare Variables with their Distributions — distr","text":"Compare distribution target variable vs another variable. function automatically splits quantiles numerical variables. Custom tidyverse friendly.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/distr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Variables with their Distributions — distr","text":"","code":"distr(   data,   ...,   type = 1,   ref = TRUE,   note = NA,   top = 10,   breaks = 10,   na.rm = FALSE,   force = \"none\",   trim = 0,   clean = FALSE,   abc = FALSE,   custom_colours = FALSE,   plot = TRUE,   chords = FALSE,   save = FALSE,   subdir = NA )"},{"path":"https://laresbernardo.github.io/lares/reference/distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Variables with their Distributions — distr","text":"data Dataframe ... Variables. Main (target variable) secondary (values variable) group (needed). type Integer. 1 plots, 2 counter plot , 3 percentages plot . ref Boolean. Show reference line levels = 2? Quite useful data unbalanced (50/50) reference line drawn. note Character. Caption plot. top Integer. Filter plot n frequent categorical values. breaks Integer. Number splits numerical values. na.rm Boolean. Ignore NAs needed. force Character. Force class values data. Choose 'none', 'character', 'numeric', 'date' trim Integer. Trim labels nth character categorical values (applies , target values) clean Boolean. Use cleanText() categorical values (applies , target values) abc Boolean. wish sort alphabetical order? custom_colours Boolean. Use custom colours function? plot Boolean. Return plot? Otherwise, table results chords Boolean. Use chords plot? save Boolean. Save output plot working directory subdir Character. subdirectory wish save plot ?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/distr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Variables with their Distributions — distr","text":"Plot plot=TRUE two plots one: counter distribution grouped cuts, proportions distribution grouped cuts. data.frame plot=FALSE counting, percentages, cumulative percentages results. type argument used, single plots returned.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/distr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Variables with their Distributions — distr","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dft) # Titanic dataset  # Relation for categorical/categorical values distr(dft, Survived, Sex)   # Relation for categorical/numeric values dft %>%   distr(Survived, Fare, plot = FALSE) %>%   head(10) #> # A tibble: 10 × 5 #>    targets value            n     p  pcum #>    <lgl>   <ord>        <int> <dbl> <dbl> #>  1 FALSE   (7.9,8.1]       87  82.1  82.1 #>  2 FALSE   [0,7.5]         79  85.9  85.9 #>  3 TRUE    (78,5.1e+02]    66  75.9  75.9 #>  4 FALSE   (7.5,7.9]       61  70.1  70.1 #>  5 FALSE   (8.1,10]        60  76.9  76.9 #>  6 FALSE   (27,40]         57  62.6  62.6 #>  7 FALSE   (14,22]         51  58.0  58.0 #>  8 FALSE   (10,14]         48  57.1  57.1 #>  9 TRUE    (40,78]         47  52.8  52.8 #> 10 TRUE    (22,27]         46  51.7  51.7 # Sort values dft %>% distr(Survived, Fare, abc = TRUE)  # Less splits/breaks dft %>% distr(Survived, Fare, abc = TRUE, breaks = 5)   # Distribution of numerical only dft[dft$Fare < 20, ] %>% distr(Fare)   # Distribution of numerical/numerical dft %>% distr(Fare, Age)   # Select only one of the two default plots of distr() dft %>% distr(Survived, Age, type = 2)  dft %>% distr(Survived, Age, type = 3)"},{"path":"https://laresbernardo.github.io/lares/reference/errors.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Continuous Values Errors — errors","title":"Calculate Continuous Values Errors — errors","text":"function lets user calculate errors R squared simultaneously. function lets user calculate Root Mean Squared Error function lets user calculate Mean Absolute Error function lets user calculate Mean Squared Error function lets user calculate Mean Squared Error function lets user calculate R Squared function lets user calculate Adjusted R Squared","code":""},{"path":"https://laresbernardo.github.io/lares/reference/errors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Continuous Values Errors — errors","text":"","code":"errors(tag, score)  rmse(tag, score)  mae(tag, score)  mse(tag, score)  mape(tag, score)  rsq(tag, score)  rsqa(tag, score)"},{"path":"https://laresbernardo.github.io/lares/reference/errors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Continuous Values Errors — errors","text":"tag Vector. Real known label score Vector. Predicted value model's result","code":""},{"path":"https://laresbernardo.github.io/lares/reference/errors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Continuous Values Errors — errors","text":"data.frame numeric values results multiple error metrics continuous numerical vectors inputs.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/errors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Continuous Values Errors — errors","text":"","code":"data(dfr) # Results for AutoML Predictions head(dfr$regr) #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 df <- errors(dfr$regr$tag, dfr$regr$score) head(df) #>       rmse      mae       mape      mse    rsq   rsqa #> 1 20.30881 14.24359 0.07303959 412.4477 0.3169 0.3143"},{"path":"https://laresbernardo.github.io/lares/reference/etf_sector.html","id":null,"dir":"Reference","previous_headings":"","what":"ETF's Sectors Breakdown — etf_sector","title":"ETF's Sectors Breakdown — etf_sector","text":"function scraps etf.com data sector breakdown ETFs. Use splot_etf() visualization.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/etf_sector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETF's Sectors Breakdown — etf_sector","text":"","code":"etf_sector(etf = \"VTI\", quiet = FALSE, cache = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/etf_sector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETF's Sectors Breakdown — etf_sector","text":"etf Character Vector. ETFs wish scrap? quiet Boolean. Keep quiet? , informative messages printed. cache Boolean. Use daily cache available?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/etf_sector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETF's Sectors Breakdown — etf_sector","text":"data.frame ETF break.data sector","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/etf_sector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ETF's Sectors Breakdown — etf_sector","text":"","code":"# \\donttest{ etf_sector(etf = \"VTI\") #> >>> Downloading sectors for each ETF... #> # A tibble: 22 × 3 #>    Sector                 Percentage ETF   #>    <chr>                       <dbl> <chr> #>  1 Technology Services         20.5  VTI   #>  2 Finance                     15.1  VTI   #>  3 Electronic Technology       13.9  VTI   #>  4 Health Technology            9.67 VTI   #>  5 Retail Trade                 7.59 VTI   #>  6 Consumer Non-Durables        4.59 VTI   #>  7 Producer Manufacturing       4.05 VTI   #>  8 Consumer Services            3.72 VTI   #>  9 Consumer Durables            3.17 VTI   #> 10 Utilities                    2.46 VTI   #> # … with 12 more rows # }"},{"path":"https://laresbernardo.github.io/lares/reference/export_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Export ggplot2, gridExtra, or any plot object into rendered file — export_plot","title":"Export ggplot2, gridExtra, or any plot object into rendered file — export_plot","text":"Export ggplot2, gridExtra, plot object created R rendered png jpg file.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/export_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export ggplot2, gridExtra, or any plot object into rendered file — export_plot","text":"","code":"export_plot(   p,   name = \"plot\",   vars = NA,   sep = \".vs.\",   width = 8,   height = 6,   format = \"png\",   res = 300,   dir = getwd(),   subdir = NA,   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/export_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export ggplot2, gridExtra, or any plot object into rendered file — export_plot","text":"p Plot object. Plot render export. name Character. File's name suffix vars NA. need include file format file name. vars Vector. Variable names identify filename. sep Character. Separator vars. width, height, res Numeric. Plot's width, height, res (grids). format Character. One : png jpeg. dir, subdir Character. directory/subdirectory wish save plot? Working directory default dir. quiet Boolean. Display successful message filename saved?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/export_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export ggplot2, gridExtra, or any plot object into rendered file — export_plot","text":"return value, called side effects.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/export_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export ggplot2, gridExtra, or any plot object into rendered file — export_plot","text":"","code":"p <- noPlot() export_plot(p, name = \"noplot\", width = 10, height = 8, res = 300, dir = tempdir()) #> Plot saved as /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//Rtmp8xZ0s9/noplot.png export_plot(p, name = \"noplot2\", subdir = \"newplots\", dir = tempdir()) #> Plot saved as /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//Rtmp8xZ0s9/newplots/noplot2.png"},{"path":"https://laresbernardo.github.io/lares/reference/export_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Export h2o_automl's Results — export_results","title":"Export h2o_automl's Results — export_results","text":"Export RDS, TXT, POJO, MOJO results h2o_automl().","code":""},{"path":"https://laresbernardo.github.io/lares/reference/export_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export h2o_automl's Results — export_results","text":"","code":"export_results(   results,   thresh = 10,   which = c(\"txt\", \"csv\", \"rds\", \"binary\", \"mojo\", \"plots\", \"dev\", \"production\"),   note = NA,   subdir = NA,   save = TRUE,   seed = 0 )"},{"path":"https://laresbernardo.github.io/lares/reference/export_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export h2o_automl's Results — export_results","text":"results h2o_automl h2o model thresh Integer. Threshold selecting binary regression models: number threshold unique values 'tag' (: regression; less : classification) Character vector. Select file format export: Possible values: txt, csv, rds, binary, mojo, plots. might also use dev (txt, csv, rds) production (binary, mojo) simply use parameter export everything note Character. Add note txt file. Useful lots models trained saved remember one one subdir Character. directory wish save results? save Boolean. wish save/export results? seed Numeric. reproducible results random splits.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/export_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export h2o_automl's Results — export_results","text":"return value, called side effects.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/fb_accounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook Ad Accounts — fb_accounts","title":"Facebook Ad Accounts — fb_accounts","text":"returns ad accounts FB Business Account FB. information Ad Insights' API, go original documentaion","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_accounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook Ad Accounts — fb_accounts","text":"","code":"fb_accounts(   token,   business_id = \"904189322962915\",   type = c(\"owned\", \"client\"),   limit = 1000,   api_version = \"v11.0\" )"},{"path":"https://laresbernardo.github.io/lares/reference/fb_accounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facebook Ad Accounts — fb_accounts","text":"token Character. Valid access token sufficient privileges. Visit Facebook API Graph Explorer acquire one. business_id Character. Business ID. type Character vector. Values: owned, client. limit Integer. Query limit api_version Character. Facebook API version","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_accounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facebook Ad Accounts — fb_accounts","text":"data.frame un-nested processed results fetched API.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/fb_accounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facebook Ad Accounts — fb_accounts","text":"","code":"if (FALSE) { # Query all accounts (owned and with permissions) of a Business ID accounts <- fb_accounts(YOURTOKEN, YOURBUSINESS) }"},{"path":"https://laresbernardo.github.io/lares/reference/fb_ads.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook Ads API — fb_ads","title":"Facebook Ads API — fb_ads","text":"returns available FB ads account, campaign, ad set id. information Ad' API, go original documentaion","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_ads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook Ads API — fb_ads","text":"","code":"fb_ads(   token,   which,   start_date = Sys.Date() - 31,   end_date = Sys.Date(),   fields = NA,   api_version = \"v11.0\",   process = TRUE )"},{"path":"https://laresbernardo.github.io/lares/reference/fb_ads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facebook Ads API — fb_ads","text":"token Character. Valid access token sufficient privileges. Visit Facebook API Graph Explorer acquire one. Character vector. accounts, campaigns, adsets, ads IDs queried. Remember: report_level = \"account\", must start ID act_. start_date Character. first last full day report, format \"YYYY-MM-DD\". end_date Character. first last full day report, format \"YYYY-MM-DD\". fields Character, json format. Leave NA default fields. api_version Character. Facebook API version process Boolean. Process GET results friendly format?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_ads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facebook Ads API — fb_ads","text":"data.frame un-nested processed results process=TRUE raw API results list process=FALSE.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_ads.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Facebook Ads API — fb_ads","text":"function based FBinsightsR.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/fb_ads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facebook Ads API — fb_ads","text":"","code":"if (FALSE) { token <- YOURTOKEN which <- act_ADACCOUNT  # Query all ads for \"which\" with results in the last 10 days ads <- fb_accounts(YOURTOKEN, which, start_date = Sys.Date() - 10) }"},{"path":"https://laresbernardo.github.io/lares/reference/fb_creatives.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook Creatives API — fb_creatives","title":"Facebook Creatives API — fb_creatives","text":"information: Ad Creative","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_creatives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook Creatives API — fb_creatives","text":"","code":"fb_creatives(token, which, api_version = \"v11.0\", process = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/fb_creatives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facebook Creatives API — fb_creatives","text":"token Character. Valid access token sufficient privileges. Visit Facebook API Graph Explorer acquire one. Character vector. accounts, campaigns, adsets, ads IDs queried. Remember: report_level = \"account\", must start ID act_. api_version Character. Facebook API version process Boolean. Process GET results friendly format?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_creatives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facebook Creatives API — fb_creatives","text":"data.frame un-nested processed results process=TRUE raw API results list process=FALSE.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/fb_creatives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facebook Creatives API — fb_creatives","text":"","code":"if (FALSE) { token <- YOURTOKEN which <- act_ADACCOUNT  # Query all creatives for \"which\" creatives <- fb_creatives(YOURTOKEN, which) }"},{"path":"https://laresbernardo.github.io/lares/reference/fb_insights.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook Insights API — fb_insights","title":"Facebook Insights API — fb_insights","text":"returns available FB insights per day including given breakdown specified report level, place data frame. information Ad Insights' API, go original documentaion.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_insights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook Insights API — fb_insights","text":"","code":"fb_insights(   token,   which,   start_date = Sys.Date() - 7,   end_date = Sys.Date(),   time_increment = \"1\",   report_level = \"campaign\",   ad_object = \"insights\",   breakdowns = NA,   fields = NA,   limit = 10000,   api_version = \"v11.0\",   process = TRUE )"},{"path":"https://laresbernardo.github.io/lares/reference/fb_insights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facebook Insights API — fb_insights","text":"token Character. Valid access token sufficient privileges. Visit Facebook API Graph Explorer acquire one. Character vector. accounts, campaigns, adsets, ads IDs queried. Remember: report_level = \"account\", must start ID act_. start_date, end_date Character. first last full day report, format \"YYYY-MM-DD\". time_increment Character. Group months (\"monthly\"), everything together (\"all_days\") integer per days [1-90]. Default: day separately (.e. \"1\"). report_level Character. One \"ad\", \"adset\", \"campaign\", \"account\" ad_object Character. One : \"insights\" (default), \"adsets\", ... breakdowns Character Vector. One breakdowns segmentation results. Set NA breakdowns fields Character, json format. Leave NA default fields. limit Integer. Query limit api_version Character. Facebook API version process Boolean. Process GET results friendly format?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_insights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facebook Insights API — fb_insights","text":"data.frame un-nested processed results process=TRUE raw API results list process=FALSE.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/fb_insights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facebook Insights API — fb_insights","text":"","code":"if (FALSE) { token <- \"YOURTOKEN\" which <- \"act_20846447\"  # Platforms' Insights: all ad-sets platforms of \"which\" account, # aggregated, for the last 30 days platforms <- fb_insights(   token, which,   start_date = Sys.Date() - 30,   time_increment = \"all_days\",   report_level = \"adset\",   fields = c(     \"account_name\",     \"adset_id\",     \"adset_start\",     \"adset_end\"   ),   breakdowns = c(     \"publisher_platform\",     \"platform_position\",     \"device_platform\"   ) )  # Daily results for all campaigns of \"which\" account, # with custom performance fields with no breakdowns. insights_adset <- fb_insights(   token, which,   time_increment = \"1\",   report_level = \"campaign\",   fields = c(     \"adset_id\",     \"reach\",     \"frequency\",     \"spend\",     \"cpm\",     \"objective\",     \"optimization_goal\"   ) ) }"},{"path":"https://laresbernardo.github.io/lares/reference/fb_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook Post Comments API — fb_post","title":"Facebook Post Comments API — fb_post","text":"Connect API Graph's token get posts comments given post(s) id.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook Post Comments API — fb_post","text":"","code":"fb_post(token, post_id, limit = 5000)"},{"path":"https://laresbernardo.github.io/lares/reference/fb_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facebook Post Comments API — fb_post","text":"token Character. Valid access token sufficient privileges. Visit Facebook API Graph Explorer acquire one. post_id Character vector. Post id(s) limit Integer. Query limit","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facebook Post Comments API — fb_post","text":"data.frame un-nested processed results fetched API.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/fb_post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facebook Post Comments API — fb_post","text":"","code":"if (FALSE) { token <- YOURTOKEN ids <- c(POST_ID1, POST_ID2)  # Query 50 comments for two post ids posts <- fb_post(token, ids, 50) }"},{"path":"https://laresbernardo.github.io/lares/reference/fb_posts.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook Page Posts API — fb_posts","title":"Facebook Page Posts API — fb_posts","text":"Connect API Graph's token given page get posts, comments, shares, reactions n posts (limits).","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_posts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook Page Posts API — fb_posts","text":"","code":"fb_posts(   token,   n = 150,   limits = 100,   comments = FALSE,   shares = FALSE,   reactions = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/fb_posts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facebook Page Posts API — fb_posts","text":"token Character. Valid access token sufficient privileges. Visit Facebook API Graph Explorer acquire one. n Integer. many recent posts need? limits Integer. post, hoy many results need? comments, shares, reactions Boolean. Include query?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_posts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facebook Page Posts API — fb_posts","text":"data.frame un-nested processed results fetched API.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/fb_posts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facebook Page Posts API — fb_posts","text":"","code":"if (FALSE) { token <- YOURTOKEN # Query latest 10 posts and 50 comments for each posts <- fb_posts(token, n = 10, limits = 50, comments = TRUE) }"},{"path":"https://laresbernardo.github.io/lares/reference/fb_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Facebook's API Objects — fb_process","title":"Process Facebook's API Objects — fb_process","text":"Process paginate raw results Facebook's API, result querying API httr::GET.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Facebook's API Objects — fb_process","text":"","code":"fb_process(response, paginate = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/fb_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Facebook's API Objects — fb_process","text":"response GET's output object, class response paginate Boolean. Run paginations? , first one processed.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Facebook's API Objects — fb_process","text":"data.frame un-nested processed results NULL results found.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/fb_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook Reach and Frequency API — fb_rf","title":"Facebook Reach and Frequency API — fb_rf","text":"Create query reach frequency predictions using Facebook's Reach Frequency API. information API parameters, go original documentaion.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook Reach and Frequency API — fb_rf","text":"","code":"fb_rf(   token,   ad_account = NA,   prediction = NA,   objective = \"REACH\",   days = 28,   budget = 2e+06,   destination_ids = NA,   countries = \"MX\",   frequency_cap = 8,   prediction_mode = 1,   curve = TRUE,   api_version = \"v11.0\",   process = TRUE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/fb_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facebook Reach and Frequency API — fb_rf","text":"token Character. Valid access token sufficient privileges. Visit Facebook API Graph Explorer acquire one. ad_account Character. Ad Account. Remember start act_. use prediction argument, need provide parameter. prediction Integer. Prediction ID already created prediction wish query curve's data. prediction already exists, rest arguments function ignored. objective Character. : \"BRAND_AWARENESS\", \"LINK_CLICKS\", \"POST_ENGAGEMENT\", \"MOBILE_APP_INSTALLS\", \"CONVERSIONS\", \"REACH\", \"VIDEO_VIEWS\". days Integer. Amount days campaign's predictions. budget Integer. budget Ad Account currency cents. destination_ids Integer vector. Page ID /Instagram Account ID. countries Character vector. Country's acronyms. frequency_cap Integer. Frequency cap campaign duration. prediction_mode Integer. \"1\" predicting Reach providing budget, \"2\" predicting Budget given specific Reach. curve Boolean. Return curve data? , prediction created. api_version Character. Facebook API version process Boolean. Process GET results friendly format? ... Additional parameters passed target specs.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_rf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facebook Reach and Frequency API — fb_rf","text":"data.frame un-nested processed results process=TRUE raw API results list process=FALSE.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/fb_rf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facebook Reach and Frequency API — fb_rf","text":"","code":"if (FALSE) { token <- \"YOURTOKEN\" account_id <- \"act_20846447\"  # BASIC 1: Create and return data for a new prediction basic1 <- fb_rf(token, account_id, destination_ids = 187071108930, countries = \"AR\")  # BASIC 2: Fetch data for an existing prediction ID basic2 <- fb_rf(token, account_id, prediction = 6260368700774)  # ADVANCED (Fully custom prediction) advanced <- fb_rf(token, account_id,   objective = \"REACH\",   days = 28,   budget = 2000000,   destination_ids = c(187071108930, 1142958119078556),   age_min = 15,   age_max = 65,   genders = 2,   countries = \"MX\",   publisher_platforms = c(     \"facebook\",     \"instagram\",     #' audience_network',     \"messenger\"   ),   # interests_ids = NA,   facebook_positions = c(     \"feed\",     #' instant_article',     \"marketplace\",     \"video_feeds\",     \"story\",     \"search\",     \"instream_video\"   ),   instagram_positions = c(     \"stream\",     \"story\",     \"explore\"   ),   # audience_network_positions = c(   #  'classic',   #  'instream_video')   messenger_positions = c(     \"messenger_home\",     \"sponsored_messages\",     \"story\"   ),   device_platforms = c(     \"mobile\",     \"desktop\"   ) ) }"},{"path":"https://laresbernardo.github.io/lares/reference/fb_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook's Long Life User Token — fb_token","title":"Facebook's Long Life User Token — fb_token","text":"Using 1-hour generic user token can generate 60 day token. need App ID App secret, valid token. Generate new valid User Token API Graph.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook's Long Life User Token — fb_token","text":"","code":"fb_token(app_id, app_secret, token, api_version = \"v11.0\")"},{"path":"https://laresbernardo.github.io/lares/reference/fb_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facebook's Long Life User Token — fb_token","text":"app_id, app_secret Character. Application ID Secret. token Character. User token, created API Graph fb_token()'s token. api_version Character. Facebook API version","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facebook's Long Life User Token — fb_token","text":"Character. String token requested.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/fb_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Facebook's Long Life User Token — fb_token","text":"info: Long-Lived Access Tokens","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/file_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract file raw name and type from file names — file_name","title":"Extract file raw name and type from file names — file_name","text":"Extract file raw name type file names Get file extensions without file names","code":""},{"path":"https://laresbernardo.github.io/lares/reference/file_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract file raw name and type from file names — file_name","text":"","code":"file_name(filepath)  file_type(filepath)"},{"path":"https://laresbernardo.github.io/lares/reference/file_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract file raw name and type from file names — file_name","text":"filepath Character vector. File path(s) get file raw names without extension path extension without path raw name.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/file_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract file raw name and type from file names — file_name","text":"","code":"file_name(\"file.aux\") #> [1] \"file\" file_name(\"temp/file.R\") #> [1] \"file\" file_name(\"/temp/temp3/music.mp3\") #> [1] \"music\" file_type(\"file.aux\") #> [1] \"aux\" file_type(\"temp/file.R\") #> [1] \"r\" file_type(\"/temp/temp3/music.mp3\") #> [1] \"mp3\""},{"path":"https://laresbernardo.github.io/lares/reference/filesGD.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Drive Files (API v4) — filesGD","title":"Google Drive Files (API v4) — filesGD","text":"Authenticate find Google Drive files IDs name.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/filesGD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Drive Files (API v4) — filesGD","text":"","code":"filesGD(title, server = FALSE, json = NULL, api_key = NULL, email = NULL)"},{"path":"https://laresbernardo.github.io/lares/reference/filesGD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Drive Files (API v4) — filesGD","text":"title Character. Title Google Drive file. Uses regular expressions may fetch patterns instead names. server Boolean. Force interacting auth process? json Character. JSON filename service auth api_key Character. multiple pre-authorized accounts machine, may non-interactively select one wish use email /api_key. email Character. multiple pre-authorized accounts machine, may non-interactively select one wish use email /api_key.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/filesGD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Drive Files (API v4) — filesGD","text":"Vector found file names based title Google Drive.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/files_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"List all functions used in R script files by package — files_functions","title":"List all functions used in R script files by package — files_functions","text":"Parses functions called R script lists package. Wrapper 'getParseData'. May great use developing package help see namespace 'importsFrom' calls required.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/files_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all functions used in R script files by package — files_functions","text":"","code":"files_functions(filename, abc = TRUE, quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/files_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all functions used in R script files by package — files_functions","text":"filename Character. Path R file (directory) containing R code files. abc Boolean. List functions alphabetically. FALSE, list order frequency. quiet Boolean. Keep quiet? , print messages statusbar.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/files_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all functions used in R script files by package — files_functions","text":"data.frame. row function columns stating number appearances, percentage, packages, files searched.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/files_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all functions used in R script files by package — files_functions","text":"","code":"if (FALSE) { # Choose an R script file with functions rfile <- file.choose() files_functions(rfile) }"},{"path":"https://laresbernardo.github.io/lares/reference/font_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Font is Installed — font_exists","title":"Check if Font is Installed — font_exists","text":"function checks font installed machine.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/font_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Font is Installed — font_exists","text":"","code":"font_exists(font = \"Arial Narrow\", quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/font_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Font is Installed — font_exists","text":"font Character. font check quiet Boolean. Keep quiet? , show message","code":""},{"path":"https://laresbernardo.github.io/lares/reference/font_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Font is Installed — font_exists","text":"Boolean result existing fonts check.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/font_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if Font is Installed — font_exists","text":"","code":"font_exists(font = \"Arial\") #> [1] TRUE font_exists(font = \"XOXO\") #> [1] FALSE font_exists(font = \"\") #> [1] FALSE"},{"path":"https://laresbernardo.github.io/lares/reference/forecast_arima.html","id":null,"dir":"Reference","previous_headings":"","what":"ARIMA Forecast — forecast_arima","title":"ARIMA Forecast — forecast_arima","text":"function automates ARIMA iterations modeling time forecasting. moment, units can days.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/forecast_arima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARIMA Forecast — forecast_arima","text":"","code":"forecast_arima(   time,   values,   n_future = 30,   ARMA = 8,   ARMA_min = 5,   AR = NA,   MA = NA,   wd_excluded = NA,   plot = TRUE,   plot_days = 90,   project = NA )"},{"path":"https://laresbernardo.github.io/lares/reference/forecast_arima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARIMA Forecast — forecast_arima","text":"time POSIX. Vector date values values Numeric. Vector numerical values n_future Integer. many steps wish forecast? ARMA Integer. many days model look back ARMA? 5 10 days recommmended. set 0 forecast end max date's month; set -1, end max date's following month ARMA_min Integer. many days model look back ARMA? 5 10 days recommmended. set 0 forecast end max date's month; set -1, end max date's following month AR Integer. Force AR value known MA Integer. Force MA value known wd_excluded Character vector. weekdays excluded training set. , please define know ones. Example: c('Sunday','Thursday'). set 'auto' detect automatically weekdays data forcast without days. plot Boolean. wish plot results plot_days Integer. many days back wish plot? project Character. Name forecast project","code":""},{"path":"https://laresbernardo.github.io/lares/reference/forecast_arima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARIMA Forecast — forecast_arima","text":"List. Containing trained model, forecast accuracy results, data.frame forecast (test) train, plot=TRUE, plot.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/forecast_arima.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ARIMA Forecast — forecast_arima","text":"ARIMA method appropriate time series stationary (.e., mean, variance, autocorrelation approximately constant time) recommended least 50 observations input data. model consists two parts, autoregressive (AR) part  moving average (MA) part. AR part involves regressing  variable lagged (.e., past) values. MA part  involves modeling error term linear combination error  terms occurring contemporaneously various times past. One thing keep mind think ARIMA models given great power capture complex patters temporal correlation (Cochrane, 1997: 25)","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/formatNum.html","id":null,"dir":"Reference","previous_headings":"","what":"Nicely Format Numerical Values — formatNum","title":"Nicely Format Numerical Values — formatNum","text":"function lets user format numerical values nicely","code":""},{"path":"https://laresbernardo.github.io/lares/reference/formatNum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nicely Format Numerical Values — formatNum","text":"","code":"formatNum(   x,   decimals = 2,   signif = NULL,   type = Sys.getenv(\"LARES_NUMFORMAT\"),   pre = \"\",   pos = \"\",   sign = FALSE,   abbr = FALSE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/formatNum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nicely Format Numerical Values — formatNum","text":"x Numerical Vector decimals Integer. Amount decimals display. set NULL, getOption(\"digits\") used. signif Integer. Rounds values first argument specified number significant digits. type Integer. 1 International standards. 2 American Standards. Use Sys.setenv(\"LARES_NUMFORMAT\" = 2) set parameter globally. pre, pos Character. Add string number. sign Boolean. Add + sign positive values. abbr Boolean. Abbreviate using num_abbr()? can use `decimals` parameter set abbr's n(-1) parameter. ... Additional lazy eval parameters.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/formatNum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nicely Format Numerical Values — formatNum","text":"Character. String vector reformatted continuous numbers","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/formatNum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nicely Format Numerical Values — formatNum","text":"","code":"formatNum(1.23456, decimals = 3) #> [1] \"1.235\" formatNum(1.23456, type = 1) #> [1] \"1,23\" formatNum(1.23456, pre = \"$\", pos = \"/person\") #> [1] \"$1.23/person\" formatNum(123456, abbr = TRUE) #> [1] \"123K\" formatNum(1234567890, abbr = TRUE, signif = 2) #> [1] \"1.2B\" formatNum(1234567890, decimals = 0, abbr = TRUE) #> [1] \"1B\" formatNum(c(-3:3), sign = TRUE) #> [1] \"-3\" \"-2\" \"-1\" \"0\"  \"+1\" \"+2\" \"+3\""},{"path":"https://laresbernardo.github.io/lares/reference/formatText.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a string text as markdown/HTML — formatText","title":"Format a string text as markdown/HTML — formatText","text":"Format character string HTML markdown format. recommend using format ggtext::geom_richtext function format text ggplot2 objects.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/formatText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a string text as markdown/HTML — formatText","text":"","code":"formatText(text, color = \"black\", size = 20, bold = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/formatText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a string text as markdown/HTML — formatText","text":"text Character. Strings format. color Character. Hex colour code. size Numeric. Text size. bold Boolean. text bold?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/formatText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a string text as markdown/HTML — formatText","text":"String format characters included.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/formatText.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a string text as markdown/HTML — formatText","text":"","code":"formatText(\"Text test\", color = \"#000000\") #> [1] \"<span style='font-size:20px; color:#000000'>Text test<\/span>\" formatText(c(123, 456), color = \"orange\", size = 120, bold = TRUE) #> [1] \"<span style='font-size:120px; color:orange'>**123**<br/>**456**<\/span>\"  # If you want to use it with \\code{ggtext}: if (FALSE) { col1 <- \"grey\" col2 <- \"orange\" pt <- data.frame(   label = paste0(     formatText(123, color = col2, size = 120, bold = TRUE), \"<br/>\",     formatText(\"of children had a\", col1), \"<br/>\",     formatText(\"traditional stay-at-home mom\", color = col2, bold = TRUE), \"<br/>\",     formatText(paste0(\"in 2012, compared to \", 321, \" in 1970\"), color = col1)   ) ) ggplot(pt, aes(x = 0, y = 0)) +   ggtext::geom_richtext(     aes(label = label),     hjust = 0,     label.color = NA,     lineheight = 1.5   ) +   xlim(0, 0.01) +   theme_void() }"},{"path":"https://laresbernardo.github.io/lares/reference/freqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequencies Calculations and Plot — freqs","title":"Frequencies Calculations and Plot — freqs","text":"function lets user group, count, calculate percentages cumulatives. also plots results needed. Tidyverse friendly.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/freqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequencies Calculations and Plot — freqs","text":"","code":"freqs(   df,   ...,   wt = NULL,   rel = FALSE,   results = TRUE,   variable_name = NA,   plot = FALSE,   rm.na = FALSE,   title = NA,   subtitle = NA,   top = 20,   abc = FALSE,   save = FALSE,   subdir = NA )"},{"path":"https://laresbernardo.github.io/lares/reference/freqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequencies Calculations and Plot — freqs","text":"df Data.frame ... Variables. Variables wish process. Order matters. variables passed, whole data.frame considered wt Variable, numeric. Weights. rel Boolean. Relative percentages (absolute)? results Boolean. Return results dataframe? variable_name Character. Overwrite main variable's name plot Boolean. want see plot? Three variables tops. rm.na Boolean. Remove NA values plot? (filtered numerical output; use na.omit() filter() needed) title Character. Overwrite plot's title . subtitle Character. Overwrite plot's subtitle . top Integer. Filter plot n frequent categorical values. Set NA return values abc Boolean. wish sort alphabetical order? save Boolean. Save output plot working directory subdir Character. subdirectory wish save plot ?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/freqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frequencies Calculations and Plot — freqs","text":"Plot plot=TRUE data.frame grouped frequency results plot=FALSE.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/freqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequencies Calculations and Plot — freqs","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dft) # Titanic dataset  # How many survived? dft %>% freqs(Survived) #> # A tibble: 2 × 5 #>   Survived     n     p order  pcum #>   <lgl>    <int> <dbl> <int> <dbl> #> 1 FALSE      549  61.6     1  61.6 #> 2 TRUE       342  38.4     2 100    # How many survived per Class? dft %>% freqs(Pclass, Survived, abc = TRUE) #> # A tibble: 6 × 6 #>   Pclass Survived     n     p order   pcum #>   <fct>  <lgl>    <int> <dbl> <int>  <dbl> #> 1 1      FALSE       80  8.98     1   8.98 #> 2 1      TRUE       136 15.3      2  24.2  #> 3 2      FALSE       97 10.9      3  35.1  #> 4 2      TRUE        87  9.76     4  44.9  #> 5 3      FALSE      372 41.8      5  86.6  #> 6 3      TRUE       119 13.4      6 100     # How many survived per Class with relative percentages? dft %>% freqs(Pclass, Survived, abc = TRUE, rel = TRUE) #> # A tibble: 6 × 6 #> # Groups:   Pclass [3] #>   Pclass Survived     n     p order  pcum #>   <fct>  <lgl>    <int> <dbl> <int> <dbl> #> 1 1      FALSE       80  37.0     1  37.0 #> 2 1      TRUE       136  63.0     2 100   #> 3 2      FALSE       97  52.7     1  52.7 #> 4 2      TRUE        87  47.3     2 100   #> 5 3      FALSE      372  75.8     1  75.8 #> 6 3      TRUE       119  24.2     2 100    # Using a weighted feature dft %>% freqs(Pclass, Survived, wt = Fare / 100) #> # A tibble: 6 × 6 #>   Pclass Survived     n     p order  pcum #>   <fct>  <lgl>    <dbl> <dbl> <int> <dbl> #> 1 1      TRUE     130.  45.3      1  45.3 #> 2 1      FALSE     51.7 18.0      2  63.4 #> 3 3      FALSE     50.9 17.7      3  81.1 #> 4 2      TRUE      19.2  6.69     4  87.8 #> 5 2      FALSE     18.8  6.56     5  94.3 #> 6 3      TRUE      16.3  5.68     6 100    # Let's check the results with plots:  #' # How many survived and see plot? dft %>% freqs(Survived, plot = TRUE)   # How many survived per class? dft %>% freqs(Survived, Pclass, plot = TRUE)   # Per class, how many survived? dft %>% freqs(Pclass, Survived, plot = TRUE)   # Per sex and class, how many survived? dft %>% freqs(Sex, Pclass, Survived, plot = TRUE)   # Frequency of tickets + Survived dft %>% freqs(Survived, Ticket, plot = TRUE) #> Slicing the top 20 (out of 681) values; use 'top' parameter to overrule.   # Frequency of tickets: top 10 only and order them alphabetically dft %>% freqs(Ticket, plot = TRUE, top = 10, abc = TRUE) #> Slicing the top 10 (out of 681) values; use 'top' parameter to overrule."},{"path":"https://laresbernardo.github.io/lares/reference/freqs_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for All Frequencies on Dataframe — freqs_df","title":"Plot for All Frequencies on Dataframe — freqs_df","text":"function lets user analize data visualizing frequency value column whole data frame.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/freqs_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for All Frequencies on Dataframe — freqs_df","text":"","code":"freqs_df(   df,   max = 0.9,   min = 0,   novar = TRUE,   plot = FALSE,   top = 30,   quiet = FALSE,   save = FALSE,   subdir = NA )"},{"path":"https://laresbernardo.github.io/lares/reference/freqs_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot for All Frequencies on Dataframe — freqs_df","text":"df Data.frame max Numeric. Top variance threshold. Range: (0-1]. variables excluded min Numeric. Minimum variance threshold. Range: [0-1). values grouped high frequency (HF) value novar Boolean. Remove variance columns? plot Boolean. want see plot? Three variables tops top Integer. Plot relevant (less categories) variables quiet Boolean. Keep quiet? (show variables exclusions) save Boolean. Save output plot working directory subdir Character. subdirectory wish save plot ?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/freqs_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot for All Frequencies on Dataframe — freqs_df","text":"Plot plot=TRUE data.frame grouped frequency results plot=FALSE.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/freqs_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot for All Frequencies on Dataframe — freqs_df","text":"","code":"# \\donttest{ data(dft) # Titanic dataset freqs_df(dft) #> Warning: cannot xtfrm data frames #> 1 variables with more than 0.9 variance exluded: 'PassengerId' #> # A tibble: 1,191 × 5 #> # Groups:   variable [10] #>    variable value        n     p  pcum #>    <chr>    <chr>    <int> <dbl> <dbl> #>  1 Cabin    \"\"         687  77.1  77.1 #>  2 Parch    \"0\"        678  76.1  76.1 #>  3 Embarked \"S\"        644  72.3  72.3 #>  4 SibSp    \"0\"        608  68.2  68.2 #>  5 Sex      \"male\"     577  64.8  64.8 #>  6 Survived \"FALSE\"    549  61.6  61.6 #>  7 Pclass   \"3\"        491  55.1  55.1 #>  8 Survived \"TRUE\"     342  38.4 100   #>  9 Sex      \"female\"   314  35.2 100   #> 10 Pclass   \"1\"        216  24.2  79.4 #> # … with 1,181 more rows freqs_df(dft, plot = TRUE) #> Warning: cannot xtfrm data frames #> 1 variables with more than 0.9 variance exluded: 'PassengerId'  # }"},{"path":"https://laresbernardo.github.io/lares/reference/freqs_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequencies on Lists and UpSet Plot — freqs_list","title":"Frequencies on Lists and UpSet Plot — freqs_list","text":"Visualize frequency elements list, list vector, vector comma separated values. Detect combinations elements frequent much represent total observations. similar UpSet Plots may used alternative Venn diagrams.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/freqs_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequencies on Lists and UpSet Plot — freqs_list","text":"","code":"freqs_list(   df,   var = NULL,   wt = NULL,   fx = \"mean\",   rm.na = FALSE,   min_elements = 1,   limit = 10,   limit_x = NA,   limit_y = NA,   tail = TRUE,   size = 10,   unique = TRUE,   abc = FALSE,   title = \"\",   plot = TRUE )"},{"path":"https://laresbernardo.github.io/lares/reference/freqs_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequencies on Lists and UpSet Plot — freqs_list","text":"df Data.frame var Variable. Variables wish process. wt Variable, numeric. Select numeric column use colour scale, used sum, mean... values combinations. fx Character. Set operation: mean, sum rm.na Boolean. Remove NA value wt? min_elements Integer. Exclude combinations less n elements limit, limit_x, limit_y Integer. Show top n combinations (x) /elements (y). rest grouped single element. Set argument 0 ignore. limit_x/limit_y answer limit's argument. tail Boolean. Show tail grouped \"...\" plots? size Numeric. Text base size unique Boolean. ,b = b,? abc Boolean. wish sort alphabetical order? title Character. Overwrite plot's title . plot Boolean. Plot viz? generated anyways output object","code":""},{"path":"https://laresbernardo.github.io/lares/reference/freqs_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frequencies on Lists and UpSet Plot — freqs_list","text":"List. data.frame data results, elements combinations.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/freqs_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequencies on Lists and UpSet Plot — freqs_list","text":"","code":"if (FALSE) { df <- dplyr::starwars head(df[, c(1, 4, 5, 12)], 10)  # Characters per movies combinations in a list column head(df$films, 2) freqs_list(df, films)  # Skin colours in a comma-separated column head(df$skin_color) x <- freqs_list(df, skin_color, min_elements = 2, limit = 5, plot = FALSE) # Inside \"x\" we'll have: names(x)  # Using the 'wt' argument to add a continuous value metric # into an already one-hot encoded columns dataset (and hide tail) csv <- \"https://raw.githubusercontent.com/hms-dbmi/UpSetR/master/inst/extdata/movies.csv\" movies <- read.csv(csv, sep = \";\") head(movies) freqs_list(movies,   wt = AvgRating, min_elements = 2, tail = FALSE,   title = \"Movies\\nMixed Genres\\nRanking\" ) # So, please: no more Comedy+SciFi and more Drama+Horror films (based on ~50 movies)! }"},{"path":"https://laresbernardo.github.io/lares/reference/freqs_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Combinated Frequencies Plot for Categorical Features — freqs_plot","title":"Combinated Frequencies Plot for Categorical Features — freqs_plot","text":"Plot frequencies multiple categories within data.frame new fancy way. Tidyverse friendly, based lares::freqs(), limits amount features evaluate.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/freqs_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combinated Frequencies Plot for Categorical Features — freqs_plot","text":"","code":"freqs_plot(   df,   ...,   top = 10,   rm.na = FALSE,   abc = FALSE,   title = NA,   subtitle = NA )"},{"path":"https://laresbernardo.github.io/lares/reference/freqs_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combinated Frequencies Plot for Categorical Features — freqs_plot","text":"df Data.frame ... Variables. Variables wish process. Order matters. variables passed, whole data.frame considered top Integer. Filter plot n frequent categorical values. Set NA return values rm.na Boolean. Remove NA values plot? (filtered numerical output; use na.omit() filter() needed) abc Boolean. wish sort alphabetical order? title Character. Overwrite plot's title . subtitle Character. Overwrite plot's subtitle .","code":""},{"path":"https://laresbernardo.github.io/lares/reference/freqs_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combinated Frequencies Plot for Categorical Features — freqs_plot","text":"Plot. Result frequency combined variables.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/freqs_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combinated Frequencies Plot for Categorical Features — freqs_plot","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dft) # Titanic dataset  df <- freqs_plot(dft, Pclass, Survived) head(df$data) #> # A tibble: 6 × 7 #>   order     n     p  pcum name     value label           #>   <chr> <int> <dbl> <dbl> <chr>    <chr> <chr>           #> 1 6        80  8.98 100   Pclass   1     Pclass: 1       #> 2 6        80  8.98 100   Survived FALSE Survived: FALSE #> 3 5        87  9.76  91.0 Pclass   2     Pclass: 2       #> 4 5        87  9.76  91.0 Survived TRUE  Survived: TRUE  #> 5 4        97 10.9   81.3 Pclass   2     Pclass: 2       #> 6 4        97 10.9   81.3 Survived FALSE Survived: FALSE plot(df)   freqs_plot(dft, Pclass, Survived, Sex, Embarked) #> Showing 10 most frequent values. Tail of 22 other values grouped into one   freqs_plot(dft, Pclass, Survived, Sex, Embarked, top = 15) #> Showing 15 most frequent values. Tail of 17 other values grouped into one"},{"path":"https://laresbernardo.github.io/lares/reference/gain_lift.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Gain, Lift and Response — gain_lift","title":"Cumulative Gain, Lift and Response — gain_lift","text":"function calculates cumulative gain, lift, response values predictive score specific target. can use mplot_gain() function create plot.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/gain_lift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Gain, Lift and Response — gain_lift","text":"","code":"gain_lift(   tag,   score,   target = \"auto\",   splits = 10,   plot = FALSE,   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/gain_lift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Gain, Lift and Response — gain_lift","text":"tag Vector. Real known label score Vector. Predicted value model's result target Value. target positive value? set 'auto', target largest mean(score) selected. Change value overwrite. used binary categorical model. splits Integer. Number percentiles split data plot Boolean. Plot results? Uses mplot_gain() quiet Boolean. Quiet messages, warnings, recommendations?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/gain_lift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Gain, Lift and Response — gain_lift","text":"data.frame plot=FALSE plot plot=TRUE.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/gain_lift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Gain, Lift and Response — gain_lift","text":"","code":"data(dfr) # Results for AutoML Predictions head(dfr$class2) #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101  # Results for Binomial Model gain_lift(dfr$class2$tag, dfr$class2$scores, target = \"FALSE\") #> Target value: FALSE #> # A tibble: 10 × 10 #>    percentile value random target total  gain optimal  lift response score #>    <fct>      <chr>  <dbl>  <int> <int> <dbl>   <dbl> <dbl>    <dbl> <dbl> #>  1 1          FALSE   10.1     27    27  16.4    16.4 62.4     16.4  93.9  #>  2 2          FALSE   20.1     23    27  30.3    32.7 50.4     13.9  92.5  #>  3 3          FALSE   30.2     26    27  46.1    49.1 52.4     15.8  90.7  #>  4 4          FALSE   39.9     23    26  60      64.8 50.3     13.9  86.8  #>  5 5          FALSE   50       22    27  73.3    81.2 46.7     13.3  80.4  #>  6 6          FALSE   60.1     18    27  84.2    97.6 40.2     10.9  68.8  #>  7 7          FALSE   69.8     14    26  92.7   100   32.9      8.48 54.0  #>  8 8          FALSE   80.2      8    28  97.6   100   21.6      4.85 19.8  #>  9 9          FALSE   90.3      2    27  98.8   100    9.40     1.21  6.66 #> 10 10         FALSE  100        2    26 100     100    0        1.21  1.76 gain_lift(dfr$class2$tag, dfr$class2$scores, target = \"TRUE\", splits = 5) #> Target value: TRUE #> # A tibble: 5 × 10 #>   percentile value random target total  gain optimal  lift response score #>   <fct>      <chr>  <dbl>  <int> <int> <dbl>   <dbl> <dbl>    <dbl> <dbl> #> 1 1          TRUE    20.5     50    55  48.5    53.4 137.     48.5  79.7  #> 2 2          TRUE    39.9     31    52  78.6   100    97.0    30.1  31.5  #> 3 3          TRUE    60.1     14    54  92.2   100    53.5    13.6  13.3  #> 4 4          TRUE    79.9      5    53  97.1   100    21.6     4.85  7.49 #> 5 5          TRUE   100        3    54 100     100     0       2.91  3.19"},{"path":"https://laresbernardo.github.io/lares/reference/get_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Credentials from a YML File — get_credentials","title":"Load Credentials from a YML File — get_credentials","text":"Load credentials local YML file. can set .Renviron LARES_CREDS parameter remember (forever) directory credentials' file. use later, may leave dir = NA. may also use function external (non-lares) code/use.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Credentials from a YML File — get_credentials","text":"","code":"get_credentials(   from = NA,   dir = NA,   filename = \"config.yml\",   env = \"LARES_CREDS\" )  get_creds(from = NA, dir = NA, filename = \"config.yml\", env = \"LARES_CREDS\")"},{"path":"https://laresbernardo.github.io/lares/reference/get_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Credentials from a YML File — get_credentials","text":"Character. Family values import YML file. know names, set = NA warning display possible values, depending YML file. dir Character. Credentials directory YML file . used frequently, set directory using .Renviron file. , leave dir NA follow steps. dir list, 'll return dir (manual credentials input). filename Character. YML filename credentials. env Character. Environment variable name. need set differently function uses library. external use.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_credentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Credentials from a YML File — get_credentials","text":"List. Result reading credential's YML file, filtered input provided.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_credentials.html","id":"set-the-default-directory","dir":"Reference","previous_headings":"","what":"Set the default directory","title":"Load Credentials from a YML File — get_credentials","text":"first time use function creds parameter, dir parameter set NA, function ask set directory save YML local file credentials. asked set R sessions. Remember reset session setup start working properly.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_credentials.html","id":"yml-file-format","dir":"Reference","previous_headings":"","what":"YML file format","title":"Load Credentials from a YML File — get_credentials","text":"YML file text file, .yml file format. may start dummy YML file shared shows structure must follow set credentials file. Check find locally using system.file(\"docs\", \"config.yml\", package = \"lares\").","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/get_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Credentials from a YML File — get_credentials","text":"","code":"if (FALSE) { # Load dummy config.yml file from the library # Recommendation: set dir with NA (read documentation) # We need the directory, not the file yml <- dirname(system.file(\"docs\", \"config.yml\", package = \"lares\"))  # Let's see which credentials we have in our file get_credentials(dir = yml) # Warning message: No credentials for NA found in your YML file. # Try any of the following: 'service1', 'service2', 'service3'  # Get credentials for service2 get_credentials(\"service2\", dir = yml) }"},{"path":"https://laresbernardo.github.io/lares/reference/get_currency.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Historical Currency Exchange Rate — get_currency","title":"Download Historical Currency Exchange Rate — get_currency","text":"function lets user download historical currency exchange rate two currencies.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_currency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Historical Currency Exchange Rate — get_currency","text":"","code":"get_currency(   currency_pair,   from = Sys.Date() - 99,   to = Sys.Date(),   fill = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/get_currency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Historical Currency Exchange Rate — get_currency","text":"currency_pair Character. currency exchange wish get history ? .e, USD/COP, EUR/USD... Date. date Date. date fill Boolean. Fill weekends non-quoted dates previous values?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_currency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Historical Currency Exchange Rate — get_currency","text":"data.frame. Result fetching online data currency_pairgrouped date.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_currency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Historical Currency Exchange Rate — get_currency","text":"","code":"# \\donttest{ # For today (or any one single date) get_currency(\"USD/COP\", from = Sys.Date()) #>         date   rate #> 1 2022-02-15 3943.1 # For multiple dates get_currency(\"EUR/USD\", from = Sys.Date() - 7, fill = TRUE) #>         date     rate #> 1 2022-02-08 1.144086 #> 2 2022-02-09 1.142113 #> 3 2022-02-10 1.142126 #> 4 2022-02-11 1.141175 #> 5 2022-02-12 1.141175 #> 6 2022-02-13 1.141175 #> 7 2022-02-14 1.136583 #> 8 2022-02-15 1.130838 # }"},{"path":"https://laresbernardo.github.io/lares/reference/get_mp3.html","id":null,"dir":"Reference","previous_headings":"","what":"Download MP3 from URL — get_mp3","title":"Download MP3 from URL — get_mp3","text":"function downloads YouTube videos Soundcloud platform supported youtube-dl library, converts high quality MP3 files. URL can single video whole playlist. also returns metadata (invisible) list.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_mp3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download MP3 from URL — get_mp3","text":"","code":"get_mp3(   id,   mp3 = TRUE,   params = \"\",   start_time = 0,   end_time = NA,   overwrite = TRUE,   info = TRUE,   cover = FALSE,   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/get_mp3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download MP3 from URL — get_mp3","text":"id Character. YouTube URL ID search . mp3 Boolean. Add mp3 optimal parameters? params Character. Additional parameters. start_time, end_time Numeric. Start end time trim audio output seconds. overwrite Boolean. Overwrite original file? info Boolean. Import return metadata? cover Boolean. Google Search squared cover? quiet Boolean. Keep quiet? , print messages.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_mp3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download MP3 from URL — get_mp3","text":"(Invisible) list id's meta-data.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_mp3.html","id":"youtube-dl","dir":"Reference","previous_headings":"","what":"youtube-dl","title":"Download MP3 from URL — get_mp3","text":"info original developers code: youtube-dl's Github","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/get_mp3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download MP3 from URL — get_mp3","text":"","code":"# You must have \"youtube-dl\" installed in your OS: if (FALSE) { # Download video from YouTube and convert to MP3 get_mp3(\"https://www.youtube.com/watch?v=lrlKcCdVw9Q\") # OR simply get_mp3(\"lrlKcCdVw9Q\") }"},{"path":"https://laresbernardo.github.io/lares/reference/get_tweets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Tweets — get_tweets","title":"Get Tweets — get_tweets","text":"function downloads tweets personal credentials","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_tweets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Tweets — get_tweets","text":"","code":"get_tweets(q, n = 10000, creds = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/get_tweets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Tweets — get_tweets","text":"q Query. Check ?rtweet::search_tweets() n Integer. Total tweets return creds Character. Credential's user (see get_creds())","code":""},{"path":"https://laresbernardo.github.io/lares/reference/get_tweets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Tweets — get_tweets","text":"data.frame API response results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/gg_fill_customs.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom fill, colour and text colours for ggplot2 — gg_fill_customs","title":"Custom fill, colour and text colours for ggplot2 — gg_fill_customs","text":"function lets user use pre-defined default colours. Check lares_pal()$labels scale. Feel free use gg_vals() debug colours used latest plot.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/gg_fill_customs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom fill, colour and text colours for ggplot2 — gg_fill_customs","text":"","code":"gg_fill_customs(column = \"fill\", ...)  gg_colour_customs(column = \"colour\", ...)  gg_text_customs(column = \"colour\", ...)  gg_vals(layer = \"fill\", column = layer)"},{"path":"https://laresbernardo.github.io/lares/reference/gg_fill_customs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom fill, colour and text colours for ggplot2 — gg_fill_customs","text":"column Character. Select \"fill\" \"colour\" use lares_pal()$labels palette. ... Allow additional parameters used. layer Character. Select \"fill\", \"colour\", \"label\" get layer containing colours labels wish colour.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/gg_fill_customs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom fill, colour and text colours for ggplot2 — gg_fill_customs","text":"scale_fill_manual scale_colour_manualbut custom palette applied.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/gg_fill_customs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Custom fill, colour and text colours for ggplot2 — gg_fill_customs","text":"Notice layer defined GeomPoint, GeomLine, GeomText GeomLabel, gg_colour_customs() force column = \"fill\" parameter.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/gg_fill_customs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom fill, colour and text colours for ggplot2 — gg_fill_customs","text":"","code":"library(\"ggplot2\") # Generic plot function to run examples to run_plot <- function(add_fxs = TRUE) {   p <- data.frame(station = c(\"spring\", \"summer\", \"fall\", \"winter\"), num = 1:4) %>%     ggplot(aes(x = station, y = num, fill = station)) +     geom_col() +     geom_text(aes(y = 0.5, label = num, colour = station), size = 6)   if (add_fxs) p <- p + gg_fill_customs() + gg_colour_customs()   return(p) } # Default colours run_plot()  # Check last colours used gg_vals(\"fill\", \"fill\") #>    spring    summer      fall    winter  #> \"#A1BD4D\" \"#E63946\" \"#FF8303\" \"#40A4D8\"  gg_vals(\"colour\", \"colour\") #>    spring    summer      fall    winter  #> \"#A1BD4D\" \"#E63946\" \"#FF8303\" \"#40A4D8\"  # Change any default colour options(\"lares.colours.custom\" = data.frame(   values = c(\"summer\", \"winter\"),   fill = c(\"pink\", \"black\"),   colour = c(\"black\", \"white\") )) run_plot()  # Check last colours used gg_vals(\"fill\", \"fill\") #>    spring      fall    summer    winter  #> \"#A1BD4D\" \"#FF8303\"    \"pink\"   \"black\"  gg_vals(\"colour\", \"colour\") #>    spring      fall    summer    winter  #> \"#A1BD4D\" \"#FF8303\"    \"pink\"   \"black\"  # Reset to default colours options(\"lares.colours.custom\" = NULL) # Notice you can use 'pal = 4' argument on theme_lares() too run_plot(add_fxs = FALSE) + theme_lares(pal = 4)"},{"path":"https://laresbernardo.github.io/lares/reference/glued.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate a string [glue wrapper] — glued","title":"Interpolate a string [glue wrapper] — glued","text":"Format interpolate string using glue wrapper. Allows simple operations, NULL values input, interactions internal (created within glued) external (environment) objects.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/glued.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate a string [glue wrapper] — glued","text":"","code":"glued(..., .sep = \"\", empty_lines = \"keep\", .envir = parent.frame())"},{"path":"https://laresbernardo.github.io/lares/reference/glued.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate a string [glue wrapper] — glued","text":"... [expressions] Expressions string(s) format, multiple inputs concatenated together formatting. .sep [character(1): ‘\"\"’] Separator used separate elements. empty_lines Character. Set \"keep\" keep \"drop\" drop empty lines. .envir [environment: parent.frame()] Environment evaluate expression . Expressions evaluated left right. .x environment, expressions evaluated environment .envir ignored.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/glued.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate a string [glue wrapper] — glued","text":"input transformed (glued).","code":""},{"path":"https://laresbernardo.github.io/lares/reference/glued.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate a string [glue wrapper] — glued","text":"","code":"name <- \"Bernardo\" age <- 29 anniversary <- as.Date(\"2016-04-30\") glued(\"   My name is {name},   my age next year will be {age + 1},   and I got married on {format(anniversary, '%A, %B %d, %Y')}.\") #> My name is Bernardo, #> my age next year will be 30, #> and I got married on Saturday, April 30, 2016.  # Single braces can be inserted by doubling them glued(\"My name is {name}, not {{name}}.\") #> My name is Bernardo, not {name}.  # You can also used named arguments glued(   \"Her name is {name}, \",   \"and her age next year will be {age + 1}.\",   name = \"Maru\",   age = 6 ) #> Her name is Maru, and her age next year will be 7.  # And run operations with memories (beware!) glued(\"My name, {name}, has {n <- nchar(name); n} characters.        If we multiply by ten, we'll have {10 * n} characters!\") #> My name, Bernardo, has 8 characters. #> If we multiply by ten, we'll have 80 characters!  # If you pass a vector, the operation will be repeated for each element glued(\"Here's the value #{1:3}\") #> Here's the value #1 #> Here's the value #2 #> Here's the value #3"},{"path":"https://laresbernardo.github.io/lares/reference/grepl_letters.html","id":null,"dir":"Reference","previous_headings":"","what":"Pattern Matching for Letters considering Blanks — grepl_letters","title":"Pattern Matching for Letters considering Blanks — grepl_letters","text":"Match pattern letters considering blanks within element character vector, allowing counted characters around letter. Used auxiliary function Scrabble family functions.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/grepl_letters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pattern Matching for Letters considering Blanks — grepl_letters","text":"","code":"grepl_letters(x, pattern, blank = \"_\")"},{"path":"https://laresbernardo.github.io/lares/reference/grepl_letters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pattern Matching for Letters considering Blanks — grepl_letters","text":"x Character vector pattern Character. Character string containing semi-regular expression uses following logic: \"a_b\" means character contains \"\" followed something followed \"b\", anywhere string. blank Character. String use letters.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/grepl_letters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pattern Matching for Letters considering Blanks — grepl_letters","text":"Boolean check value x.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/grepl_letters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pattern Matching for Letters considering Blanks — grepl_letters","text":"","code":"x <- c(\"aaaa\", \"bbbb\", \"baba\", \"aabb\", \"a\", \"ab\") grepl_letters(x, \"ab\") #> [1] FALSE FALSE  TRUE  TRUE FALSE  TRUE grepl_letters(x, \"_ab\") #> [1] FALSE FALSE  TRUE  TRUE FALSE FALSE grepl_letters(x, \"a_a\") #> [1]  TRUE FALSE  TRUE FALSE FALSE FALSE grepl_letters(x, \"c\") #> [1] FALSE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://laresbernardo.github.io/lares/reference/grepm.html","id":null,"dir":"Reference","previous_headings":"","what":"Pattern Matching for Any or All Multiple Matches — grepm","title":"Pattern Matching for Any or All Multiple Matches — grepm","text":"function returns boolean vector length `x`, element result applying `type` matches corresponding element `x`, using regular expressions.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/grepm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pattern Matching for Any or All Multiple Matches — grepm","text":"","code":"grepm(pattern, x, type = \"all\", ...)"},{"path":"https://laresbernardo.github.io/lares/reference/grepm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pattern Matching for Any or All Multiple Matches — grepm","text":"pattern character string containing regular expression     (character string fixed = TRUE) matched     given character vector.  Coerced     .character character string possible.      character vector length 2 supplied, first element     used warning.  Missing values allowed except     regexpr, gregexpr regexec. x character vector matches sought,     object can coerced .character character     vector.  Long vectors supported. type Character. Type match. Choose one : , ... Additional arguments pass grepl","code":""},{"path":"https://laresbernardo.github.io/lares/reference/grepm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pattern Matching for Any or All Multiple Matches — grepm","text":"Boolean length x","code":""},{"path":"https://laresbernardo.github.io/lares/reference/grepm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pattern Matching for Any or All Multiple Matches — grepm","text":"","code":"x <- c(123, 876, 18761) patterns <- c(1, 2) grepm(patterns, x, type = \"any\") #> [1]  TRUE FALSE  TRUE grepm(patterns, x, type = \"all\") #> [1]  TRUE FALSE FALSE"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_automl.html","id":null,"dir":"Reference","previous_headings":"","what":"Automated H2O's AutoML — h2o_automl","title":"Automated H2O's AutoML — h2o_automl","text":"function lets user create robust fast model, using H2O's AutoML function. result list best model, parameters, datasets, performance metrics, variables importance, plots. Read h2o_automl() pipeline .","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_automl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automated H2O's AutoML — h2o_automl","text":"","code":"h2o_automl(   df,   y = \"tag\",   ignore = NULL,   train_test = NA,   split = 0.7,   weight = NULL,   target = \"auto\",   balance = FALSE,   impute = FALSE,   no_outliers = TRUE,   unique_train = TRUE,   center = FALSE,   scale = FALSE,   thresh = 10,   seed = 0,   nfolds = 5,   max_models = 3,   max_time = 10 * 60,   start_clean = FALSE,   exclude_algos = c(\"StackedEnsemble\", \"DeepLearning\"),   include_algos = NULL,   plots = TRUE,   alarm = TRUE,   quiet = FALSE,   print = TRUE,   save = FALSE,   subdir = NA,   project = \"AutoML Results\",   verbosity = NULL,   ... )  # S3 method for h2o_automl plot(x, ...)  # S3 method for h2o_automl print(x, importance = TRUE, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_automl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automated H2O's AutoML — h2o_automl","text":"df Dataframe. Dataframe containing data, including independent variable labeled 'tag'. want define variable used instead, use y parameter. y Variable Character. Name independent variable. ignore Character vector. Force columns model ignore train_test Character. needed, df's column name 'test' 'train' values split split Numeric. Value 0 1 split train/test datasets. Value training set. Set value 1 train available data test data (cross-validation still used training). train_test set, value overwritten real split rate. weight Column observation weights. Giving observation weight zero equivalent excluding dataset; giving observation relative weight 2 equivalent repeating row twice. Negative weights allowed. target Value. target positive value? set 'auto', target largest mean(score) selected. Change value overwrite. used binary categorical model. balance Boolean. Auto-balance train dataset -sampling? impute Boolean. Fill NA values MICE? no_outliers Boolean/Numeric. Remove y's outliers dataset? remove values farther n standard deviations independent variable's mean (Z-score). Set TRUE default (3) numeric set different multiplier. unique_train Boolean. Keep unique row observations training data? center, scale Boolean. Using base function scale, wish center /scale numerical values? thresh Integer. Threshold selecting binary regression models: number threshold unique values 'tag' (: regression; less : classification) seed Integer. Set seed reproducibility. AutoML can guarantee reproducibility max_models used max_time resource limited. nfolds Number folds k-fold cross-validation. Must >= 2; defaults 5. Use 0 disable cross-validation; also disable Stacked Ensemble (thus decreasing overall model performance). max_models, max_time Numeric. Max number models seconds wish function iterate. Note max_models guarantees reproducibility max_time (depends entirely machine's computational characteristics) start_clean Boolean. Erase everything current h2o instance start train models? may want keep models . group results custom common AutoML project, may use project_name argument. exclude_algos, include_algos Vector character strings. Algorithms skip include model-building phase. Set NULL ignore. defined, include_algos valid. plots Boolean. Create plots objects? alarm Boolean. Ping (sound) done. Requires beepr. quiet Boolean. Quiet messages, warnings, recommendations? print Boolean. Print summary process ends? save Boolean. wish save/export results working directory? subdir Character. directory wish save results? Working directory default. project Character. project's name verbosity Verbosity backend messages printed training; Optional. Must one NULL (live log disabled), \"debug\", \"info\", \"warn\", \"error\". Defaults \"warn\". ... Additional parameters h2o::h2o.automl x h2o_automl object importance Boolean. Print important variables?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_automl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automated H2O's AutoML — h2o_automl","text":"List. Trained model, predicted scores datasets used, performance metrics, parameters, importance data.frame, seed, plots plots=TRUE.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_automl.html","id":"list-of-algorithms","dir":"Reference","previous_headings":"","what":"List of algorithms","title":"Automated H2O's AutoML — h2o_automl","text":"-> Read DRF Distributed Random Forest, including Random Forest (RF)   Extremely-Randomized Trees (XRT) GLM Generalized Linear Model XGBoost eXtreme Grading Boosting GBM Gradient Boosting Machine DeepLearning Fully-connected multi-layer artificial neural network StackedEnsemble Stacked Ensemble","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_automl.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Automated H2O's AutoML — h2o_automl","text":"print Use print method print models stats summary plot Use plot method plot results using mplot_full()","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/h2o_automl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automated H2O's AutoML — h2o_automl","text":"","code":"# \\donttest{ # CRAN data(dft) # Titanic dataset dft <- subset(dft, select = -c(Ticket, PassengerId, Cabin))  # Classification: Binomial - 2 Classes r <- h2o_automl(dft, y = Survived, max_models = 1, impute = FALSE, target = \"TRUE\", alarm = FALSE) #> 2022-02-15 17:01:54 | Started process... #> - INDEPENDENT VARIABLE: Survived #> - MODEL TYPE: Classification #> # A tibble: 2 × 5 #>   tag       n     p order  pcum #>   <lgl> <int> <dbl> <int> <dbl> #> 1 FALSE   549  61.6     1  61.6 #> 2 TRUE    342  38.4     2 100   #> - MISSINGS: The following variables contain missing observations: Age (19.87%). Consider using the impute parameter. #> - CATEGORICALS: There are 3 non-numerical features. Consider using ohse() or equivalent prior to encode categorical variables. #> >>> Splitting data: train = 0.7 & test = 0.3 #> train_size  test_size  #>        623        268  #> - REPEATED: There were 57 repeated rows which are being suppressed from the train dataset #> - ALGORITHMS: excluded 'StackedEnsemble', 'DeepLearning' #> - CACHE: Previous models are not being erased. You may use 'start_clean' [clear] or 'project_name' [join] #> - UI: You may check results using H2O Flow's interactive platform: http://localhost:54321/flow/index.html #> >>> Iterating until 1 models or 600 seconds... #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> - EUREKA: Succesfully generated 1 models #>                             model_id       auc   logloss     aucpr #> 1 XGBoost_1_AutoML_1_20220215_170202 0.8445152 0.4667281 0.8209007 #>   mean_per_class_error     rmse       mse #> 1            0.2133057 0.385946 0.1489543 #> SELECTED MODEL: XGBoost_1_AutoML_1_20220215_170202 #> - NOTE: The following variables were the least important: SibSp, Embarked.S, Parch, Pclass.2, Embarked.C #> >>> Running predictions for Survived... #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> Warning: Test/Validation dataset column 'Embarked' has levels not trained on: [\"\"] #> Target value: TRUE #> >>> Generating plots... #> Model (1/1): XGBoost_1_AutoML_1_20220215_170202 #> Independent Variable: Survived #> Type: Classification (2 classes) #> Algorithm: XGBOOST #> Split: 70% training data (of 891 observations) #> Seed: 0 #>  #> Test metrics: #>    AUC = 0.87173 #>    ACC = 0.14925 #>    PRC = 0.125 #>    TPR = 0.28571 #>    TNR = 0.086957 #>  #> Most important variables: #>    Sex.female (25.8%) #>    Age (18.4%) #>    Fare (16.2%) #>    Sex.male (16.1%) #>    Pclass.3 (13.2%) #> Process duration: 31.1s  # Let's see all the stuff we have inside: lapply(r, names) #> $model #> NULL #>  #> $y #> NULL #>  #> $scores_test #> [1] \"tag\"    \"scores\" #>  #> $metrics #> [1] \"dictionary\"       \"confusion_matrix\" \"gain_lift\"        \"metrics\"          #> [5] \"cv_metrics\"       \"max_metrics\"      #>  #> $parameters #>  [1] \"model_id\"                          \"training_frame\"                    #>  [3] \"nfolds\"                            \"keep_cross_validation_models\"      #>  [5] \"keep_cross_validation_predictions\" \"fold_assignment\"                   #>  [7] \"stopping_tolerance\"                \"seed\"                              #>  [9] \"distribution\"                      \"categorical_encoding\"              #> [11] \"ntrees\"                            \"max_depth\"                         #> [13] \"min_rows\"                          \"min_child_weight\"                  #> [15] \"sample_rate\"                       \"subsample\"                         #> [17] \"col_sample_rate\"                   \"colsample_bylevel\"                 #> [19] \"col_sample_rate_per_tree\"          \"colsample_bytree\"                  #> [21] \"score_tree_interval\"               \"tree_method\"                       #> [23] \"dmatrix_type\"                      \"backend\"                           #> [25] \"x\"                                 \"y\"                                 #>  #> $importance #> [1] \"variable\"            \"relative_importance\" \"scaled_importance\"   #> [4] \"importance\"          #>  #> $datasets #> [1] \"global\" \"test\"   #>  #> $scoring_history #> [1] \"timestamp\"                     \"duration\"                      #> [3] \"number_of_trees\"               \"training_rmse\"                 #> [5] \"training_logloss\"              \"training_auc\"                  #> [7] \"training_pr_auc\"               \"training_lift\"                 #> [9] \"training_classification_error\" #>  #> $categoricals #> [1] \"Pclass\"     \"Sex\"        \"Embarked\"   \"train_test\" \"predict\"    #>  #> $type #> NULL #>  #> $split #> NULL #>  #> $threshold #> NULL #>  #> $model_name #> NULL #>  #> $algorithm #> NULL #>  #> $leaderboard #> [1] \"model_id\"             \"auc\"                  \"logloss\"              #> [4] \"aucpr\"                \"mean_per_class_error\" \"rmse\"                 #> [7] \"mse\"                  #>  #> $project #> NULL #>  #> $seed #> NULL #>  #> $h2o #> NULL #>  #> $plots #> [1] \"dashboard\"  \"metrics\"    \"importance\" #>   # Classification: Multi-Categorical - 3 Classes r <- h2o_automl(dft, Pclass, ignore = c(\"Fare\", \"Cabin\"), max_time = 30, plots = FALSE) #> 2022-02-15 17:02:25 | Started process... #> - INDEPENDENT VARIABLE: Pclass #> - MODEL TYPE: Classification #> # A tibble: 3 × 5 #>   tag       n     p order  pcum #>   <fct> <int> <dbl> <int> <dbl> #> 1 n_3     491  55.1     1  55.1 #> 2 n_1     216  24.2     2  79.4 #> 3 n_2     184  20.6     3 100   #> - MISSINGS: The following variables contain missing observations: Age (19.87%). Consider using the impute parameter. #> - CATEGORICALS: There are 3 non-numerical features. Consider using ohse() or equivalent prior to encode categorical variables. #> >>> Splitting data: train = 0.7 & test = 0.3 #> train_size  test_size  #>        623        268  #> - REPEATED: There were 65 repeated rows which are being suppressed from the train dataset #> - ALGORITHMS: excluded 'StackedEnsemble', 'DeepLearning' #> - CACHE: Previous models are not being erased. You may use 'start_clean' [clear] or 'project_name' [join] #> - UI: You may check results using H2O Flow's interactive platform: http://localhost:54321/flow/index.html #> >>> Iterating until 3 models or 30 seconds... #> - EUREKA: Succesfully generated 3 models #>                             model_id mean_per_class_error   logloss      rmse #> 1     GLM_1_AutoML_2_20220215_170226            0.4742325 0.8170807 0.5409388 #> 2 XGBoost_1_AutoML_2_20220215_170226            0.4946035 0.8255072 0.5392879 #> 3     GBM_1_AutoML_2_20220215_170226            0.5037168 0.8620436 0.5616772 #>         mse #> 1 0.2926147 #> 2 0.2908315 #> 3 0.3154812 #> SELECTED MODEL: GLM_1_AutoML_2_20220215_170226 #> - NOTE: The following variables were the least important: Sex.male, Sex.female, Parch #> >>> Running predictions for Pclass... #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> Model (1/3): GLM_1_AutoML_2_20220215_170226 #> Independent Variable: Pclass #> Type: Classification (3 classes) #> Algorithm: GLM #> Split: 70% training data (of 891 observations) #> Seed: 0 #>  #> Test metrics: #>    AUC = 0.76337 #>    ACC = 0.64179 #>  #> Most important variables: #>    Embarked.Q (25.3%) #>    Embarked.C (13.5%) #>    Embarked.S (13.3%) #>    Age (11.9%) #>    Survived.FALSE (10.6%) #> Process duration: 23.3s  # Regression: Continuous Values r <- h2o_automl(dft, y = \"Fare\", ignore = c(\"Pclass\"), exclude_algos = NULL, quiet = TRUE) print(r) #> Model (1/7): StackedEnsemble_BestOfFamily_1_AutoML_3_20220215_170249 #> Independent Variable: Fare #> Type: Regression #> Algorithm: STACKEDENSEMBLE #> Split: 70% training data (of 871 observations) #> Seed: 0 #>  #> Test metrics: #>    rmse = 20.17 #>    mae = 14.079 #>    mape = 0.068862 #>    mse = 406.82 #>    rsq = 0.367 #>    rsqa = 0.3645 #>  #>   # WITH PRE-DEFINED TRAIN/TEST DATAFRAMES splits <- msplit(dft, size = 0.8) #> train_size  test_size  #>        712        179  splits$train$split <- \"train\" splits$test$split <- \"test\" df <- rbind(splits$train, splits$test) r <- h2o_automl(df, \"Survived\", max_models = 1, train_test = \"split\") #> 2022-02-15 17:03:19 | Started process... #> - INDEPENDENT VARIABLE: Survived #> - MODEL TYPE: Classification #> # A tibble: 2 × 5 #>   tag       n     p order  pcum #>   <lgl> <int> <dbl> <int> <dbl> #> 1 FALSE   549  61.6     1  61.6 #> 2 TRUE    342  38.4     2 100   #> - MISSINGS: The following variables contain missing observations: Age (19.87%). Consider using the impute parameter. #> - CATEGORICALS: There are 4 non-numerical features. Consider using ohse() or equivalent prior to encode categorical variables. #>  #>  test train  #>   179   712  #> - REPEATED: There were 77 repeated rows which are being suppressed from the train dataset #> - ALGORITHMS: excluded 'StackedEnsemble', 'DeepLearning' #> - CACHE: Previous models are not being erased. You may use 'start_clean' [clear] or 'project_name' [join] #> - UI: You may check results using H2O Flow's interactive platform: http://localhost:54321/flow/index.html #> >>> Iterating until 1 models or 600 seconds... #> - EUREKA: Succesfully generated 1 models #>                             model_id       auc   logloss     aucpr #> 1 XGBoost_1_AutoML_4_20220215_170320 0.8450812 0.4500589 0.8188965 #>   mean_per_class_error      rmse       mse #> 1            0.2150513 0.3784227 0.1432037 #> SELECTED MODEL: XGBoost_1_AutoML_4_20220215_170320 #> - NOTE: The following variables were the least important: Embarked.S, SibSp, Embarked.C, Pclass.2 #> >>> Running predictions for Survived... #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> Target value: FALSE #> >>> Generating plots... #> Model (1/1): XGBoost_1_AutoML_4_20220215_170320 #> Independent Variable: Survived #> Type: Classification (2 classes) #> Algorithm: XGBOOST #> Split: 80% training data (of 891 observations) #> Seed: 0 #>  #> Test metrics: #>    AUC = 0.87174 #>    ACC = 0.84358 #>    PRC = 0.89091 #>    TPR = 0.69014 #>    TNR = 0.94444 #>  #> Most important variables: #>    Sex.female (32.8%) #>    Fare (21.8%) #>    Age (11.7%) #>    Pclass.3 (11.6%) #>    Sex.male (9.2%) #> Process duration: 13.4s # }"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_explainer.html","id":null,"dir":"Reference","previous_headings":"","what":"DALEX Explainer for H2O — h2o_explainer","title":"DALEX Explainer for H2O — h2o_explainer","text":"DALEX helper function create explainer object using h2o trained model.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_explainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DALEX Explainer for H2O — h2o_explainer","text":"","code":"h2o_explainer(df, model, y = \"tag\", ignore = NULL, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_explainer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DALEX Explainer for H2O — h2o_explainer","text":"df Dataframe. Must contain columns predictions model Model object (H2O) y Character Variable name. Variable's column name. ignore Character vector. columns ignored? ... Additional parameters pass h2o_predict_model h2o_predict_MOJO.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_explainer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DALEX Explainer for H2O — h2o_explainer","text":"List; explainer. Containing model, data, y, predict_function, y_hat, residuals, class, label, model_info, residual_function, weights.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/h2o_explainer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DALEX Explainer for H2O — h2o_explainer","text":"","code":"# You must have \"DALEX\" library to use this auxiliary function: if (FALSE) { data(dft) # Titanic dataset  # TRAIN A SIMPLE MODEL dfm <- h2o_automl(dft,   y = \"Survived\",   ignore = c(\"Ticket\", \"PassengerId\", \"Cabin\"),   max_models = 1 )  # EXPLAINER explainer <- h2o_explainer(df = dfm$datasets$test, model = dfm$model, y = \"Survived\") explainer$data <- na.omit(explainer$data)  # CATEGORICAL EXAMPLE class <- dalex_variable(explainer, vars = c(\"Pclass\", \"Sex\")) class$plot  # NUMERICAL EXAMPLE num <- dalex_variable(explainer, vars = c(\"Fare\", \"Age\")) num$plot  # LOCAL EXAMPLE local <- dalex_local(explainer, row = 1) # OR YOU COULD MANUALLY INPUT THE OBSERVATION local <- dalex_local(explainer, observation = explainer$data[1, ]) local$plot  # xai2shiny's UI (needs to be installed from ModelOriented/xai2shiny) xai2shiny(explainer, run = TRUE) }"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_API.html","id":null,"dir":"Reference","previous_headings":"","what":"H2O Predict using API Service — h2o_predict_API","title":"H2O Predict using API Service — h2o_predict_API","text":"function lets user get score API service","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_API.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"H2O Predict using API Service — h2o_predict_API","text":"","code":"h2o_predict_API(df, api, exclude = \"tag\")"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_API.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"H2O Predict using API Service — h2o_predict_API","text":"df Dataframe/Vector. Data insert model. api Character. API URL. exclude Character. Name variables exclude.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_API.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"H2O Predict using API Service — h2o_predict_API","text":"vector predicted results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_MOJO.html","id":null,"dir":"Reference","previous_headings":"","what":"H2O Predict using MOJO file — h2o_predict_MOJO","title":"H2O Predict using MOJO file — h2o_predict_MOJO","text":"function lets user predict using h2o .zip file containing MOJO files. Note works files generated using function export_results()","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_MOJO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"H2O Predict using MOJO file — h2o_predict_MOJO","text":"","code":"h2o_predict_MOJO(df, model_path, method = \"mojo\", batch = 300)"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_MOJO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"H2O Predict using MOJO file — h2o_predict_MOJO","text":"df Dataframe. Data pass model. model_path Character. Relative path directory zip model file . multiple zip files found, first one found used. method Character. One \"mojo\" \"json\". batch Integer. Run n batches time \"json\" method.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_MOJO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"H2O Predict using MOJO file — h2o_predict_MOJO","text":"data.frame predicted results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"H2O Predict using Binary file — h2o_predict_binary","title":"H2O Predict using Binary file — h2o_predict_binary","text":"function lets user predict using h2o binary file. Note works files generated using function export_results(). Recommendation: use h2o_predict_MOJO() function possible - change h2o's version without problem.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"H2O Predict using Binary file — h2o_predict_binary","text":"","code":"h2o_predict_binary(df, model_path, sample = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"H2O Predict using Binary file — h2o_predict_binary","text":"df Dataframe. Data insert model. model_path Character. Relative model path directory zip file. sample Integer. many rows function predict?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"H2O Predict using Binary file — h2o_predict_binary","text":"vector predicted results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_model.html","id":null,"dir":"Reference","previous_headings":"","what":"H2O Predict using H2O Model Object — h2o_predict_model","title":"H2O Predict using H2O Model Object — h2o_predict_model","text":"function lets user get scores H2O Model Object.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"H2O Predict using H2O Model Object — h2o_predict_model","text":"","code":"h2o_predict_model(df, model)"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"H2O Predict using H2O Model Object — h2o_predict_model","text":"df Dataframe/Vector. Data insert model. model h2o model Object","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_predict_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"H2O Predict using H2O Model Object — h2o_predict_model","text":"data.frame predicted results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/h2o_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Automated H2O's AutoML Results — h2o_results","title":"Automated H2O's AutoML Results — h2o_results","text":"auxiliary function calculate predictions results using h2o_automl() function.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automated H2O's AutoML Results — h2o_results","text":"","code":"h2o_results(   h2o_object,   test,   train,   y = \"tag\",   which = 1,   model_type,   target = \"auto\",   split = 0.7,   ignore = NULL,   quiet = FALSE,   project = \"ML Project\",   seed = 0,   leaderboard = list(),   plots = TRUE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automated H2O's AutoML Results — h2o_results","text":"h2o_object H2O Leaderboard (H2OFrame/H2OAutoML) Model (h2o) test, train Dataframe. Must columns y Variable Character. Name independent variable. Integer. model select leaderboard model_type Character. Select \"Classification\" \"Regression\" target Value. target positive value? set 'auto', target largest mean(score) selected. Change value overwrite. used binary categorical model. split Numeric. Value 0 1 split train/test datasets. Value training set. Set value 1 train available data test data (cross-validation still used training). train_test set, value overwritten real split rate. ignore Character vector. Columns ignore quiet Boolean. Quiet messages, warnings, recommendations? project Character. project's name seed Integer. Set seed reproducibility. AutoML can guarantee reproducibility max_models used max_time resource limited. leaderboard H2O's Leaderboard. Passed using h2o_selectmodel contains plain model leader board. plots Boolean. Create plots objects? ... Additional parameters h2o::h2o.automl","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automated H2O's AutoML Results — h2o_results","text":"List. Trained model, predicted scores datasets used, performance metrics, parameters, importance data.frame, seed, plots plots=TRUE.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_selectmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Model from h2o_automl's Leaderboard — h2o_selectmodel","title":"Select Model from h2o_automl's Leaderboard — h2o_selectmodel","text":"Select wich model h2o_automl function use","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_selectmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Model from h2o_automl's Leaderboard — h2o_selectmodel","text":"","code":"h2o_selectmodel(results, which_model = 1, quiet = FALSE, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_selectmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Model from h2o_automl's Leaderboard — h2o_selectmodel","text":"results h2o_automl() object. which_model Integer. model leaderboard wish use? quiet Boolean. Quiet messages, warnings, recommendations? ... Additional parameters h2o::h2o.automl","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_selectmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Model from h2o_automl's Leaderboard — h2o_selectmodel","text":"H2O processed model","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/h2o_shap.html","id":null,"dir":"Reference","previous_headings":"","what":"SHAP values for H2O Models — h2o_shap","title":"SHAP values for H2O Models — h2o_shap","text":"SHAP (SHapley Additive exPlanations) Lundberg Lee (2016) method explain individual predictions. SHAP based game theoretically optimal Shapley Values. Calculate SHAP values h2o models row observation column feature. Use plot method visualize features importance distributions.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_shap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SHAP values for H2O Models — h2o_shap","text":"","code":"h2o_shap(model, test = \"auto\", scores = \"auto\", y = \"y\", ...)  # S3 method for h2o_shap plot(x, relevant = TRUE, top = 15, quiet = FALSE, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/h2o_shap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SHAP values for H2O Models — h2o_shap","text":"model h2o_automl object h2o model. test String Dataframe. Leave \"auto\" use h2o_automl's test dataset pass valid dataframe. scores Numeric vector. test != \"auto\", must provide predicted values y Character. test != \"auto\", must provide y variable's name ... Additional argument predict_contributions.H2OModel x h2o_shap object relevant Boolean. Keep relevant non-trivial (>0) features top Integer. Plot top n values (importance) quiet Boolean. Print messages?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/h2o_shap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SHAP values for H2O Models — h2o_shap","text":"H2OFrame shap values every observation feature.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/h2o_shap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SHAP values for H2O Models — h2o_shap","text":"","code":"if (FALSE) { # Train a h2o_automl model model <- h2o_automl(dft, Survived,   max_models = 1, target = TRUE,   ignore = c(\"Ticket\", \"Cabin\", \"PassengerId\"),   quiet = TRUE )  # Calculate SHAP values SHAP_values <- h2o_shap(model) # Equivalent to: # SHAP_values <- h2o_shap( #  model = model$model, #  test = model$datasets$test, #  scores = model$scores_test$scores)  # Check SHAP results head(SHAP_values)  # You must have \"ggbeeswarm\" library to use this auxiliary function: # Plot SHAP values (feature importance) plot(SHAP_values)  # Plot some of the variables (categorical) shap_var(SHAP_values, Pclass)  # Plot some of the variables (numerical) shap_var(SHAP_values, Fare) }"},{"path":"https://laresbernardo.github.io/lares/reference/haveInternet.html","id":null,"dir":"Reference","previous_headings":"","what":"Internet Connection Check — haveInternet","title":"Internet Connection Check — haveInternet","text":"function checks R session currently Wifi Internet connection.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/haveInternet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internet Connection Check — haveInternet","text":"","code":"haveInternet(thresh = 3, url = \"http://www.google.com\")"},{"path":"https://laresbernardo.github.io/lares/reference/haveInternet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internet Connection Check — haveInternet","text":"thresh Numeric. many seconds consider slow connection? url Character. URL test readLines 1 command","code":""},{"path":"https://laresbernardo.github.io/lares/reference/haveInternet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internet Connection Check — haveInternet","text":"Boolean. Result checking device internet connection.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/holidays.html","id":null,"dir":"Reference","previous_headings":"","what":"Holidays in your Country — holidays","title":"Holidays in your Country — holidays","text":"function lets user automatically scrap holiday dates country year within +- 5 years. Thanks timeanddate.com!","code":""},{"path":"https://laresbernardo.github.io/lares/reference/holidays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Holidays in your Country — holidays","text":"","code":"holidays(countries = \"Venezuela\", years = year(Sys.Date()))"},{"path":"https://laresbernardo.github.io/lares/reference/holidays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Holidays in your Country — holidays","text":"countries Character vector. country(ies) holidays imported? years Character vector. year(s) wish import holiday dates?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/holidays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Holidays in your Country — holidays","text":"data.frame holidays data given countries years.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/holidays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Holidays in your Country — holidays","text":"","code":"# \\donttest{ holidays(countries = \"Argentina\") #> >>> Extracting Argentina's holidays for 2022 #> # A tibble: 38 × 10 #>    holiday    holidayname   holidaytype national observance bank  nonwork season #>    <date>     <chr>         <chr>       <lgl>    <lgl>      <lgl> <lgl>   <lgl>  #>  1 2022-02-28 Carnival / S… National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  2 2022-03-01 Carnival / S… National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  3 2022-03-20 March Equinox Season      FALSE    FALSE      FALSE FALSE   TRUE   #>  4 2022-03-24 Memorial Day  National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  5 2022-04-02 Day of the V… National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  6 2022-04-14 Maundy Thurs… Observance… FALSE    TRUE       FALSE FALSE   FALSE  #>  7 2022-04-15 Good Friday   National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  8 2022-04-15 Passover Eve  Observance  FALSE    TRUE       FALSE FALSE   FALSE  #>  9 2022-04-16 First day of… Optional h… FALSE    FALSE      FALSE FALSE   FALSE  #> 10 2022-04-17 Easter Sunday Observance… FALSE    TRUE       FALSE FALSE   FALSE  #> # … with 28 more rows, and 2 more variables: hother <lgl>, county <fct> holidays(countries = c(\"Argentina\", \"Venezuela\"), years = c(2019, 2020)) #> >>> Extracting Argentina's holidays for 2019 #> >>> Extracting Argentina's holidays for 2020 #> >>> Extracting Venezuela's holidays for 2019 #> >>> Extracting Venezuela's holidays for 2020 #> # A tibble: 158 × 11 #>    holiday    holidayname   holidaytype national observance bank  nonwork season #>    <date>     <chr>         <chr>       <lgl>    <lgl>      <lgl> <lgl>   <lgl>  #>  1 2019-03-04 Carnival / S… National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  2 2019-03-05 Carnival / S… National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  3 2019-03-20 March Equinox Season      FALSE    FALSE      FALSE FALSE   TRUE   #>  4 2019-03-24 Memorial Day  National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  5 2019-04-02 Day of the V… National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  6 2019-04-18 Maundy Thurs… National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  7 2019-04-19 Good Friday   National h… TRUE     FALSE      FALSE FALSE   FALSE  #>  8 2019-04-19 Passover Eve  Observance  FALSE    TRUE       FALSE FALSE   FALSE  #>  9 2019-04-20 First day of… Optional h… FALSE    FALSE      FALSE FALSE   FALSE  #> 10 2019-04-21 Easter Sunday Observance… FALSE    TRUE       FALSE FALSE   FALSE  #> # … with 148 more rows, and 3 more variables: hother <lgl>, country <fct>, #> #   county <fct> # }"},{"path":"https://laresbernardo.github.io/lares/reference/image_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Meta Data from Image Files — image_metadata","title":"Get Meta Data from Image Files — image_metadata","text":"function lets user get meta data image files directory.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/image_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Meta Data from Image Files — image_metadata","text":"","code":"image_metadata(files)"},{"path":"https://laresbernardo.github.io/lares/reference/image_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Meta Data from Image Files — image_metadata","text":"files Character vector. Files directory contains files.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/image_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Meta Data from Image Files — image_metadata","text":"data.frame meta-data image file.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/importxlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Excel File with All Its Tabs — importxlsx","title":"Import Excel File with All Its Tabs — importxlsx","text":"function lets user import Excel file's tabs list","code":""},{"path":"https://laresbernardo.github.io/lares/reference/importxlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Excel File with All Its Tabs — importxlsx","text":"","code":"importxlsx(file)"},{"path":"https://laresbernardo.github.io/lares/reference/importxlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Excel File with All Its Tabs — importxlsx","text":"file String. Local Excel file name","code":""},{"path":"https://laresbernardo.github.io/lares/reference/importxlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Excel File with All Its Tabs — importxlsx","text":"List data.frame. single tab found, data.frame; multiple tabs found file, list data.frames.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Missing Values (using MICE) — impute","title":"Impute Missing Values (using MICE) — impute","text":"function uses MICE methodology impute missing values.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Missing Values (using MICE) — impute","text":"","code":"impute(df, m = 5, iters = 5, seed = 0, quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Missing Values (using MICE) — impute","text":"df Dataframe. Dataframe transform. m Integer. Number multiple imputations. iters Integer. Number iterations. seed Integer. Set seed reproducibility. quiet Boolean. Keep quiet? (print replacements).","code":""},{"path":"https://laresbernardo.github.io/lares/reference/impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Missing Values (using MICE) — impute","text":"data.frame imputed values.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/install_recommended.html","id":null,"dir":"Reference","previous_headings":"","what":"Install/Update Additional Recommended Libraries — install_recommended","title":"Install/Update Additional Recommended Libraries — install_recommended","text":"needed libraries use () lares already dependency. functions many people event know exist require additional libraries. Also, may used Docker way installing useful libraries new instance.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/install_recommended.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install/Update Additional Recommended Libraries — install_recommended","text":"","code":"install_recommended(progress = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/install_recommended.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install/Update Additional Recommended Libraries — install_recommended","text":"progress Boolean. Show status bar?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ip_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrap data based on IP address — ip_data","title":"Scrap data based on IP address — ip_data","text":"function lets user scrap https://db-ip.com/ given IP address(es) get associated address type, ASN, ISP, organization, country, state region, county, city, ZIP postal code, weather station, coordinates, Timezone, local time, languages, currency.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ip_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrap data based on IP address — ip_data","text":"","code":"ip_data(ip = myip(), quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/ip_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrap data based on IP address — ip_data","text":"ip Vector. Vector IP's wish search. quiet Boolean. show loading statusbar?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ip_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrap data based on IP address — ip_data","text":"data.frame. row unique ip address, columns bee created additional information found.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/ip_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scrap data based on IP address — ip_data","text":"","code":"# \\donttest{ ip_data(\"163.114.132.0\") #>              id addresstype                   asn          isp  organization #> 1 163.114.132.0        IPv4 54115 - FACEBOOK-CORP Facebook Inc Facebook Corp #>         country stateregion districtcounty    city zippostalcode #> 1 United States  Washington           King Seattle         98127 #>       weatherstation       coordinates                    timezone localtime #> 1 USWA0395 - Seattle 47.6062, -122.332 America/Los_Angeles (UTC-8)           #>               languages     currency #> 1 en-US, es-US, haw, fr Dollar (USD) ip_data(ip = c(myip(), \"201.244.197.199\"), quiet = TRUE) #>                id addresstype                                asn #> 1   13.105.49.127        IPv4 8075 - MICROSOFT-CORP-MSN-AS-BLOCK #> 2 201.244.197.199        IPv4             19429 - ETB - Colombia #>                     isp connection       country stateregion districtcounty #> 1 Microsoft Corporation    Hosting United States  Washington          Grant #> 2        ETB - Colombia       <NA>      Colombia Bogota D.C.    Bogotá D.C. #>                        city zippostalcode        weatherstation #> 1                Moses Lake         98837 USWA0285 - Moses Lake #> 2 Bogotá (Comuna Chapinero)          <NA>  COXX6242 - Chapinero #>         coordinates                    timezone localtime             languages #> 1 47.1301, -119.278 America/Los_Angeles (UTC-8)           en-US, es-US, haw, fr #> 2 4.64225, -74.0622      America/Bogota (UTC-5)                           es-CO #>       currency                                   hostname #> 1 Dollar (USD)                                       <NA> #> 2   Peso (COP) dynamic-201-244-197-199.dynamic.etb.net.co # }"},{"path":"https://laresbernardo.github.io/lares/reference/is_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if input is_* or are_* — is_url","title":"Check if input is_* or are_* — is_url","text":"Check whether value vector following set rules. example: URL, ID vector, non-variant constant values, binary values... Notice is_ return result observation are_ whole vector.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/is_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if input is_* or are_* — is_url","text":"","code":"is_url(x, ...)  is_ip(x, ...)  are_id(x)  are_constant(x)  are_binary(x)"},{"path":"https://laresbernardo.github.io/lares/reference/is_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if input is_* or are_* — is_url","text":"x Vector ... Additional parameters passed grepl()","code":""},{"path":"https://laresbernardo.github.io/lares/reference/is_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if input is_* or are_* — is_url","text":"is_url. Boolean. Result checking x valid URL string. is_ip. Boolean. Result checking x valid IP string. are_id. Boolean. Result checking x potential ID vector are_constant. Boolean. Result checking x constant vector are_binary. Boolean. Result checking x binary vector","code":""},{"path":"https://laresbernardo.github.io/lares/reference/is_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if input is_* or are_* — is_url","text":"","code":"is_url(c(\"google.com\", \"http://google.com\")) #> [1] FALSE  TRUE  is_ip(c(\"163.114.132.0\", \"7.114.132\", \"0.0.0.0\", \"1.1.1.1.\")) #> [1]  TRUE FALSE  TRUE FALSE  are_id(1:10) #> [1] FALSE are_id(LETTERS[1:10]) #> [1] TRUE  are_constant(rep(1, 10)) #> [1] TRUE are_constant(1:10) #> [1] FALSE  are_binary(c(\"A\", \"B\", \"A\")) #> [1] TRUE"},{"path":"https://laresbernardo.github.io/lares/reference/iter_seeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterate Seeds on AutoML — iter_seeds","title":"Iterate Seeds on AutoML — iter_seeds","text":"functions lets user iterate search best seed. Note results change lot, high variance data.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/iter_seeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterate Seeds on AutoML — iter_seeds","text":"","code":"iter_seeds(df, y, tries = 10, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/iter_seeds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterate Seeds on AutoML — iter_seeds","text":"df Dataframe. Dataframe containing data, including independent variable labeled 'tag'. want define variable used instead, use y parameter. y Variable Character. Name independent variable. tries Integer. Number iterations ... Additional arguments passed h2o_automl","code":""},{"path":"https://laresbernardo.github.io/lares/reference/iter_seeds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterate Seeds on AutoML — iter_seeds","text":"data.frame performance results seed tried every row.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/json2vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Python JSON string to R vector (data.frame with 1 row) — json2vector","title":"Convert Python JSON string to R vector (data.frame with 1 row) — json2vector","text":"function lets user transform JSON string vector (data.frame 1 row). can also pass Python's dictionary. JSON transformation, jsonlite recommended.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/json2vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Python JSON string to R vector (data.frame with 1 row) — json2vector","text":"","code":"json2vector(json)"},{"path":"https://laresbernardo.github.io/lares/reference/json2vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Python JSON string to R vector (data.frame with 1 row) — json2vector","text":"json Character. JSON string.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/json2vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Python JSON string to R vector (data.frame with 1 row) — json2vector","text":"List, data.frame, vector. Depends json string.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/json2vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Python JSON string to R vector (data.frame with 1 row) — json2vector","text":"","code":"json2vector('{\"id\": 1, \"nodata\": null, \"gender\": \"M\"}') #>   id nodata gender #> 1  1   <NA>      M"},{"path":"https://laresbernardo.github.io/lares/reference/lares-exports.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — lares-exports","title":"Pipe operator — lares-exports","text":"Pipe operator","code":""},{"path":"https://laresbernardo.github.io/lares/reference/lares.html","id":null,"dir":"Reference","previous_headings":"","what":"Analytics, Data Mining & Machine Learning Sidekick — lares","title":"Analytics, Data Mining & Machine Learning Sidekick — lares","text":"R library better/faster analytics, visualization, data mining, machine learning tasks.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/lares.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analytics, Data Mining & Machine Learning Sidekick — lares","text":"Bernardo Lares (laresbernardo@gmail.com)","code":""},{"path":"https://laresbernardo.github.io/lares/reference/lares_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Personal Colours Palette — lares_pal","title":"Personal Colours Palette — lares_pal","text":"Fetch customizable palettes library's usage. package default colour-blind friendly colours can customized using R internal options (.e. options(\"lares.palette\" = c(\"#FF8303\" = \"#000\", \"#40A4D8\" = \"#FFF\", ...)). 3 options can use customize colour palletes: \"lares.palette\" (vector, used order passed, must counter colour defined), \"lares.colours\" (vector, simple colour names HEX codes), \"lares.colours.custom\" (data.frame, containing \"values\" use dynamically, \"fill\" main colour, \"colour\" (obligatory) counter colour).","code":""},{"path":"https://laresbernardo.github.io/lares/reference/lares_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Personal Colours Palette — lares_pal","text":"","code":"lares_pal(return = \"list\")"},{"path":"https://laresbernardo.github.io/lares/reference/lares_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Personal Colours Palette — lares_pal","text":"return Character. Get need. Select : \"\" \"list\" (list), \"colors\" \"colours\" (vector), \"pal\" \"palette\" (named vector), \"simple\" (named vector), \"custom\" \"personal\" (data.frame)","code":""},{"path":"https://laresbernardo.github.io/lares/reference/lares_pal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Personal Colours Palette — lares_pal","text":"Depending return input, get : vector palette results vector vector palette results vector's names list palette results vector, labels   results data.frame, simple results named vector","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/lares_pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Personal Colours Palette — lares_pal","text":"","code":"# Simple colour-named palette lares_pal(\"simple\") #>    orange      blue    purple       red     green      navy    yellow      grey  #> \"#FF8303\" \"#40A4D8\" \"#5D3A9B\" \"#E63946\" \"#A1BD4D\" \"#03396C\" \"#F8D962\" \"#8D99AE\"  #>      pink     black     white  #> \"#FFCAD4\" \"#000000\" \"#F8F8F8\"   # Raw colours and counter-colours # OR simply: lares_pal(\"palette\") nice_palette <- lares_pal(\"colours\") nice_palette_ctr <- as.vector(lares_pal()$palette) lapply(list(nice_palette, nice_palette_ctr), head) #> [[1]] #> [1] \"#FF8303\" \"#40A4D8\" \"#5D3A9B\" \"#E63946\" \"#2A9D8F\" \"#D35FB7\" #>  #> [[2]] #> [1] \"#000000\" \"#000000\" \"#FFFFFF\" \"#000000\" \"#000000\" \"#000000\" #>   # Personal colours by name df <- lares_pal(\"custom\") df[sample(nrow(df), 5), ] #>     values    fill  colour #> 14       X #8D99AE #000000 #> 4   female #FFCAD4 #000000 #> 39     fb1 #405996 #F8F8F8 #> 1        m #40A4D8 #F8F8F8 #> 34 sadness #838B8B #000000"},{"path":"https://laresbernardo.github.io/lares/reference/lasso_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Most Relevant Features Using Lasso Regression — lasso_vars","title":"Most Relevant Features Using Lasso Regression — lasso_vars","text":"Use Lasso regression identify relevant variables can predict/identify another variable. might want compare corr_var() /x2y() results compliment analysis need standardize, center scale data. Tidyverse friendly.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/lasso_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Most Relevant Features Using Lasso Regression — lasso_vars","text":"","code":"lasso_vars(   df,   variable,   ignore = NULL,   nlambdas = 100,   nfolds = 10,   top = 20,   quiet = FALSE,   seed = 123,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/lasso_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Most Relevant Features Using Lasso Regression — lasso_vars","text":"df Dataframe. dataframe valid ohse applied process categorical values, values standardize automatically. variable Variable. Independent variable. ignore Character vector. Variables exclude study. nlambdas Integer. Number lambdas used search. nfolds Integer. Number folds K-fold cross-validation (>= 2). top Integer. Plot top n results . quiet Boolean. Keep quiet? Else, show messages. seed Numeric. ... Additional parameters passed ohse().","code":""},{"path":"https://laresbernardo.github.io/lares/reference/lasso_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Most Relevant Features Using Lasso Regression — lasso_vars","text":"List. Contains lasso model coefficients, performance metrics, actual model fitted plot.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/lasso_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Most Relevant Features Using Lasso Regression — lasso_vars","text":"","code":"# \\donttest{ # CRAN Sys.unsetenv(\"LARES_FONT\") # Temporal data(dft) # Titanic dataset  m <- lasso_vars(dft, Survived, ignore = c(\"Cabin\")) #> >>> Omitting transformations for 'Cabin', 'Survived' #> >>> One Hot Encoding applied to 4 variables: 'Pclass', 'Ticket', 'Embarked', 'Sex' #> >>> Searching for optimal lambda with CV... #> Found best lambda: 0.02351 #> >>> Fetching most relevant variables... #> >>> Generating plots for Survived... #> Elapsed time: 4.19s print(m$coef) #> # A tibble: 10 × 6 #>    names         coefficients standardized_coefficients     abs     prc coef     #>    <chr>                <dbl>                     <dbl>   <dbl>   <dbl> <chr>    #>  1 Sex_male        -0.474                      -0.227   0.227   0.439   negative #>  2 Pclass_1         0.252                       0.108   0.108   0.209   positive #>  3 Ticket_1601      0.455                       0.0402  0.0402  0.0778  positive #>  4 Pclass_2         0.0970                      0.0393  0.0393  0.0761  positive #>  5 Age             -0.00243                    -0.0352  0.0352  0.0682  negative #>  6 Ticket_OTHER     0.143                       0.0351  0.0351  0.0680  positive #>  7 Ticket_113760    0.148                       0.00990 0.00990 0.0192  positive #>  8 Embarked_C       0.0249                      0.00975 0.00975 0.0189  positive #>  9 Ticket_347082   -0.101                      -0.00896 0.00896 0.0173  negative #> 10 Fare             0.0000690                   0.00343 0.00343 0.00663 positive print(m$metrics) #> # A tibble: 1 × 7 #>    rmse   mae  mape   mse   rsq  rsqa bestlambda #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>      <dbl> #> 1 0.377 0.308  1.45 0.142 0.409 0.409     0.0235 plot(m$plot)  # }"},{"path":"https://laresbernardo.github.io/lares/reference/left.html","id":null,"dir":"Reference","previous_headings":"","what":"Left or Right N characters of a string — left","title":"Left or Right N characters of a string — left","text":"functions lets user extract first last n characters string vector strings.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/left.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Left or Right N characters of a string — left","text":"","code":"left(string, n = 1)  right(string, n = 1)"},{"path":"https://laresbernardo.github.io/lares/reference/left.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Left or Right N characters of a string — left","text":"string String Vector. n Integer. many characters starting right/left?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/left.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Left or Right N characters of a string — left","text":"Character. Trimmed strings.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/left.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Left or Right N characters of a string — left","text":"","code":"left(\"Bernardo\", 3) #> [1] \"Ber\" right(c(\"Bernardo\", \"Lares\", \"V\"), 3) #> [1] \"rdo\" \"res\" \"V\""},{"path":"https://laresbernardo.github.io/lares/reference/li_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"OAuth Linkedin — li_auth","title":"OAuth Linkedin — li_auth","text":"function authenticates creates token LinkedIn's API REST","code":""},{"path":"https://laresbernardo.github.io/lares/reference/li_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OAuth Linkedin — li_auth","text":"","code":"li_auth(app_name = NA, client_id = NA, client_secret = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/li_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OAuth Linkedin — li_auth","text":"app_name Character. App's given name. client_id Character. App's client ID. client_secret Character. App's client secret.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/li_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"OAuth Linkedin — li_auth","text":"Character. String token requested.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/li_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get My Personal LinkedIn Data — li_profile","title":"Get My Personal LinkedIn Data — li_profile","text":"function brings list personal LinkedIn data","code":""},{"path":"https://laresbernardo.github.io/lares/reference/li_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get My Personal LinkedIn Data — li_profile","text":"","code":"li_profile(token = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/li_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get My Personal LinkedIn Data — li_profile","text":"token Object. OAuth Authentication: li_auth()'s output.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/li_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get My Personal LinkedIn Data — li_profile","text":"List. Results profile data given token.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/list_cats.html","id":null,"dir":"Reference","previous_headings":"","what":"List categorical values for data.frame — list_cats","title":"List categorical values for data.frame — list_cats","text":"Make list categorical values ","code":""},{"path":"https://laresbernardo.github.io/lares/reference/list_cats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List categorical values for data.frame — list_cats","text":"","code":"list_cats(df, ..., abc = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/list_cats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List categorical values for data.frame — list_cats","text":"df data.frame ... Variables segment counters abc Boolean. Sort alphabetically?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/list_cats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List categorical values for data.frame — list_cats","text":"List. Length number categorical columns, frequency data.frame using freqs().","code":""},{"path":"https://laresbernardo.github.io/lares/reference/list_cats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List categorical values for data.frame — list_cats","text":"","code":"data(dft) # Titanic dataset df <- dft[, 1:5] head(df) #>   PassengerId Survived Pclass    Sex Age #> 1           1    FALSE      3   male  22 #> 2           2     TRUE      1 female  38 #> 3           3     TRUE      3 female  26 #> 4           4     TRUE      1 female  35 #> 5           5    FALSE      3   male  35 #> 6           6    FALSE      3   male  NA list_cats(df) #> $Pclass #> # A tibble: 3 × 3 #>   Pclass     n     p #>   <chr>  <int> <dbl> #> 1 1        216  24.2 #> 2 2        184  20.6 #> 3 3        491  55.1 #>  #> $Sex #> # A tibble: 2 × 3 #>   Sex        n     p #>   <chr>  <int> <dbl> #> 1 female   314  35.2 #> 2 male     577  64.8 #>"},{"path":"https://laresbernardo.github.io/lares/reference/listfiles.html","id":null,"dir":"Reference","previous_headings":"","what":"List files in a directory — listfiles","title":"List files in a directory — listfiles","text":"function lets user list files given directory. also lets filter files contains string.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/listfiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List files in a directory — listfiles","text":"","code":"listfiles(folder = getwd(), recursive = TRUE, regex = NA, images = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/listfiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List files in a directory — listfiles","text":"folder Character. Directory contains files recursive Boolean. listing recurse directories? regex Character. String use filtering files images Boolean. Bring image files?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/listfiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List files in a directory — listfiles","text":"data.frame relevant data file folder directory.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/listfiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List files in a directory — listfiles","text":"","code":"# All files in current directory (without recursive files) df <- listfiles(recursive = TRUE) head(df, 3) #>       filename size isdir mode               mtime               ctime #> 1     ROC.html   19 FALSE  644 2022-02-15 17:00:53 2022-02-15 17:00:53 #> 2 Rplot001.png    0 FALSE  644 2022-02-15 17:03:55 2022-02-15 17:03:55 #> 3 Rplot002.png   10 FALSE  644 2022-02-15 17:01:50 2022-02-15 17:01:50 #>                 atime uid gid  uname grname #> 1 2022-02-15 17:00:53 501  20 runner  staff #> 2 2022-02-15 17:00:53 501  20 runner  staff #> 3 2022-02-15 17:01:00 501  20 runner  staff  # All files in current directory (with recursive files) df <- listfiles(recursive = TRUE) tail(df, 3) #>            filename size isdir mode               mtime               ctime #> 137    li_auth.html    8 FALSE  644 2022-02-15 17:03:54 2022-02-15 17:03:54 #> 138 li_profile.html    8 FALSE  644 2022-02-15 17:03:55 2022-02-15 17:03:55 #> 139  list_cats.html   11 FALSE  644 2022-02-15 17:03:55 2022-02-15 17:03:55 #>                   atime uid gid  uname grname #> 137 2022-02-15 17:03:54 501  20 runner  staff #> 138 2022-02-15 17:03:55 501  20 runner  staff #> 139 2022-02-15 17:03:55 501  20 runner  staff  # Check R files using regex df <- listfiles(regex = \"\\\\.R$\")"},{"path":"https://laresbernardo.github.io/lares/reference/loglossBinary.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithmic Loss Function for Binary Models — loglossBinary","title":"Logarithmic Loss Function for Binary Models — loglossBinary","text":"function calculates log loss/cross-entropy loss binary models. NOTE: result 0.69315, classification neutral; assigns equal probability classes.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/loglossBinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithmic Loss Function for Binary Models — loglossBinary","text":"","code":"loglossBinary(tag, score, eps = 0.001)"},{"path":"https://laresbernardo.github.io/lares/reference/loglossBinary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithmic Loss Function for Binary Models — loglossBinary","text":"tag Vector. Real known label score Vector. Predicted value model's result eps Numeric. Epsilon value","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mailSend.html","id":null,"dir":"Reference","previous_headings":"","what":"Send Emails with Attachments (POST) — mailSend","title":"Send Emails with Attachments (POST) — mailSend","text":"function lets user send Emails Attachments using MailGun's API service.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mailSend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send Emails with Attachments (POST) — mailSend","text":"","code":"mailSend(   from = \"RMail <laresbernardo@gmail.com>\",   to = \"laresbernardo@gmail.com\",   cc = NULL,   bcc = NULL,   subject = \"Mail from R\",   text = \" \\n\",   html = NULL,   attachment = NULL,   service = \"mailgun\",   creds = NULL,   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/mailSend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send Emails with Attachments (POST) — mailSend","text":", , cc, bcc Character. Emails subject Character. Subject email. text, html Character. Text HTML send body. attachment Character, plot data.frame. send file, plot PNG data.frame CSV, respectively. service Character. Service platform search creds. creds Character. Credential's user (see get_creds()). Must contain: url (POST address), api (API key). quiet Boolean. Keep quite display messages?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mailSend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send Emails with Attachments (POST) — mailSend","text":"return value, called side effects.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mailSend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send Emails with Attachments (POST) — mailSend","text":"","code":"if (FALSE) { myPlot <- noPlot(\"My plot\") mailSend(   from = \"BLV <myuser@mail.com>\",   to = \"youruser@mail.com\",   cc = \"myuser@mail.com\",   subject = paste(\"Daily report:\", Sys.Date()),   attachment = myPlot ) }"},{"path":"https://laresbernardo.github.io/lares/reference/missingness.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Visualize Missingness — missingness","title":"Calculate and Visualize Missingness — missingness","text":"function lets user calculate percentage NAs missingness data.frame. also plots results needed.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/missingness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Visualize Missingness — missingness","text":"","code":"missingness(df, plot = FALSE, full = FALSE, subtitle = NA, summary = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/missingness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Visualize Missingness — missingness","text":"df Dataframe. Dataframe study plot Boolean. wish plot results? full Boolean. Return variables (missings)? subtitle Character. Subtitle show plot summary Boolean. Show numerical summary text?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/missingness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Visualize Missingness — missingness","text":"data.frame variable, number missing values percentage. plot=TRUE, plot information reflected.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/missingness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Visualize Missingness — missingness","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal  # Dummy data df <- data.frame(   A = c(1:5),   B = c(NA, NA, 1, 1, 1),   C = rep(NA, 5),   D = c(NA, LETTERS[1:4]) )  # Missing values summary missingness(df) #>   variable missing missingness #> 1        C       5         100 #> 2        B       2          40 #> 3        D       1          20  # Visual results  missingness(df, plot = TRUE)   # Show all variables (including those with no missing values) missingness(df, plot = TRUE, full = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/model_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Metrics and Performance — model_metrics","title":"Model Metrics and Performance — model_metrics","text":"function lets user get confusion matrix accuracy, binary classification models: AUC, Precision, Sensitivity, Specificity, given expected (tags) values predicted values (scores).","code":""},{"path":"https://laresbernardo.github.io/lares/reference/model_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Metrics and Performance — model_metrics","text":"","code":"model_metrics(   tag,   score,   multis = NA,   abc = TRUE,   thresh = 10,   auto_n = TRUE,   thresh_cm = 0.5,   target = \"auto\",   type = \"test\",   model_name = NA,   plots = TRUE,   quiet = FALSE,   subtitle = NA )"},{"path":"https://laresbernardo.github.io/lares/reference/model_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Metrics and Performance — model_metrics","text":"tag Vector. Real known label score Vector. Predicted value model's result multis Data.frame. Containing columns category score (used 2 categories coexist) abc Boolean. Arrange columns rows alphabetically categorical values? thresh Integer. Threshold selecting binary regression models: number threshold unique values 'tag' (: regression; less : classification) auto_n Add n_ digits categorical numerical, even though seems numerical? thresh_cm Numeric. Value splits results confusion matrix. Range values: (0-1) target Value. target positive value? set 'auto', target largest mean(score) selected. Change value overwrite. used binary categorical model. type Character. One : \"train\", \"test\". model_name Character. Model's name reference. plots Boolean. Create plots objects? quiet Boolean. Quiet messages, warnings, recommendations? subtitle Character. Subtitle plots","code":""},{"path":"https://laresbernardo.github.io/lares/reference/model_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Metrics and Performance — model_metrics","text":"List. Multiple performance metrics vary depending type model (classification regression). plot=TRUE, multiple plots also returned.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/model_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Metrics and Performance — model_metrics","text":"","code":"data(dfr) # Results for AutoML Predictions lapply(dfr, head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>  #> $regr #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 #>   # Metrics for Binomial Model met1 <- model_metrics(dfr$class2$tag, dfr$class2$scores,   model_name = \"Titanic Survived Model\",   plots = FALSE ) #> Target value: TRUE print(met1) #> $dictionary #> [1] \"AUC: Area Under the Curve\"                                                              #> [2] \"ACC: Accuracy\"                                                                          #> [3] \"PRC: Precision = Positive Predictive Value\"                                             #> [4] \"TPR: Sensitivity = Recall = Hit rate = True Positive Rate\"                              #> [5] \"TNR: Specificity = Selectivity = True Negative Rate\"                                    #> [6] \"Logloss (Error): Logarithmic loss [Neutral classification: 0.69315]\"                    #> [7] \"Gain: When best n deciles selected, what % of the real target observations are picked?\" #> [8] \"Lift: When best n deciles selected, how much better than random is?\"                    #>  #> $confusion_matrix #>        Pred #> Real    FALSE TRUE #>   FALSE     9  156 #>   TRUE     68   35 #>  #> $gain_lift #> # A tibble: 10 × 10 #>    percentile value random target total  gain optimal  lift response score #>    <fct>      <fct>  <dbl>  <int> <int> <dbl>   <dbl> <dbl>    <dbl> <dbl> #>  1 1          TRUE    10.4     26    28  25.2    27.2 142.     25.2  93.3  #>  2 2          TRUE    20.5     24    27  48.5    53.4 137.     23.3  79.7  #>  3 3          TRUE    30.2     19    26  67.0    78.6 122.     18.4  46.2  #>  4 4          TRUE    39.9     12    26  78.6   100    97.0    11.7  31.5  #>  5 5          TRUE    50        9    27  87.4   100    74.8     8.74 19.8  #>  6 6          TRUE    60.1      5    27  92.2   100    53.5     4.85 13.3  #>  7 7          TRUE    69.8      3    26  95.1   100    36.4     2.91  9.31 #>  8 8          TRUE    79.9      2    27  97.1   100    21.6     1.94  7.49 #>  9 9          TRUE    89.9      3    27 100     100    11.2     2.91  6.14 #> 10 10         TRUE   100        0    27 100     100     0       0     3.19 #>  #> $metrics #>       AUC     ACC     PRC     TPR      TNR #> 1 0.89467 0.16418 0.18325 0.33981 0.054545 #>   # Metrics for Multi-Categorical Model met2 <- model_metrics(dfr$class3$tag, dfr$class3$score,   multis = subset(dfr$class3, select = -c(tag, score)),   model_name = \"Titanic Class Model\",   plots = FALSE ) print(met2) #> $dictionary #> [1] \"AUC: Area Under the Curve\"                                                              #> [2] \"ACC: Accuracy\"                                                                          #> [3] \"PRC: Precision = Positive Predictive Value\"                                             #> [4] \"TPR: Sensitivity = Recall = Hit rate = True Positive Rate\"                              #> [5] \"TNR: Specificity = Selectivity = True Negative Rate\"                                    #> [6] \"Logloss (Error): Logarithmic loss [Neutral classification: 0.69315]\"                    #> [7] \"Gain: When best n deciles selected, what % of the real target observations are picked?\" #> [8] \"Lift: When best n deciles selected, how much better than random is?\"                    #>  #> $confusion_matrix #> # A tibble: 3 × 4 #>   `Real x Pred`   n_3   n_1   n_2 #>   <fct>         <int> <int> <int> #> 1 n_3             120    11    18 #> 2 n_1              12    43     8 #> 3 n_2              26    15    15 #>  #> $metrics #>      AUC     ACC #> 1 0.7896 0.66418 #>  #> $metrics_tags #> # A tibble: 3 × 9 #>   tag       n     p   AUC order   ACC   PRC   TPR   TNR #>   <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 n_3     149  55.6 0.826     1 0.75  0.759 0.805 0.681 #> 2 n_1      63  23.5 0.867     2 0.828 0.623 0.683 0.873 #> 3 n_2      56  20.9 0.675     3 0.75  0.366 0.268 0.877 #>   # Metrics for Regression Model met3 <- model_metrics(dfr$regr$tag, dfr$regr$score,   model_name = \"Titanic Fare Model\",   plots = FALSE ) print(met3) #> $dictionary #> [1] \"RMSE: Root Mean Squared Error\"        #> [2] \"MAE: Mean Average Error\"              #> [3] \"MAPE: Mean Absolute Percentage Error\" #> [4] \"MSE: Mean Squared Error\"              #> [5] \"RSQ: R Squared\"                       #> [6] \"RSQA: Adjusted R Squared\"             #>  #> $metrics #>       rmse      mae       mape      mse    rsq   rsqa #> 1 20.30881 14.24359 0.07303959 412.4477 0.3169 0.3143 #>"},{"path":"https://laresbernardo.github.io/lares/reference/model_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Automate Data Preprocess for Modeling — model_preprocess","title":"Automate Data Preprocess for Modeling — model_preprocess","text":"Pre-process data training model. prior step h2o_automl() function's pipeline. Enabling use cases wanting  use framework, library, custom algorithm.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/model_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automate Data Preprocess for Modeling — model_preprocess","text":"","code":"model_preprocess(   df,   y = \"tag\",   ignore = NULL,   train_test = NA,   split = 0.7,   weight = NULL,   target = \"auto\",   balance = FALSE,   impute = FALSE,   no_outliers = TRUE,   unique_train = TRUE,   center = FALSE,   scale = FALSE,   thresh = 10,   seed = 0,   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/model_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automate Data Preprocess for Modeling — model_preprocess","text":"df Dataframe. Dataframe containing data, including independent variable labeled 'tag'. want define variable used instead, use y parameter. y Character. Column name independent variable. ignore Character vector. Force columns model ignore train_test Character. needed, df's column name 'test' 'train' values split split Numeric. Value 0 1 split train/test datasets. Value training set. Set value 1 train available data test data (cross-validation still used training). train_test set, value overwritten real split rate. weight Column observation weights. Giving observation weight zero equivalent excluding dataset; giving observation relative weight 2 equivalent repeating row twice. Negative weights allowed. target Value. target positive value? set 'auto', target largest mean(score) selected. Change value overwrite. used binary categorical model. balance Boolean. Auto-balance train dataset -sampling? impute Boolean. Fill NA values MICE? no_outliers Boolean/Numeric. Remove y's outliers dataset? remove values farther n standard deviations independent variable's mean (Z-score). Set TRUE default (3) numeric set different multiplier. unique_train Boolean. Keep unique row observations training data? center Boolean. Using base function scale, wish center /scale numerical values? scale Boolean. Using base function scale, wish center /scale numerical values? thresh Integer. Threshold selecting binary regression models: number threshold unique values 'tag' (: regression; less : classification) seed Integer. Set seed reproducibility. AutoML can guarantee reproducibility max_models used max_time resource limited. quiet Boolean. Quiet messages, warnings, recommendations?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/model_preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automate Data Preprocess for Modeling — model_preprocess","text":"List. Contains original data.frame df, index identify observations part train dataset train_index, model type model_type.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/model_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automate Data Preprocess for Modeling — model_preprocess","text":"","code":"data(dft) # Titanic dataset  model_preprocess(dft, \"Survived\", balance = TRUE) #> - INDEPENDENT VARIABLE: Survived #> - MODEL TYPE: Classification #> # A tibble: 2 × 5 #>   tag       n     p order  pcum #>   <lgl> <int> <dbl> <int> <dbl> #> 1 FALSE   549  61.6     1  61.6 #> 2 TRUE    342  38.4     2 100   #> - MISSINGS: The following variables contain missing observations: Age (19.87%). Consider using the impute parameter. #> - CATEGORICALS: There are 5 non-numerical features. Consider using ohse() or equivalent prior to encode categorical variables. #> >>> Splitting data: train = 0.7 & test = 0.3 #> train_size  test_size  #>        623        268  #> - BALANCE: Training set balanced: 242 observations for each (2) category; using 77.69% of training data  model_preprocess(dft, \"Fare\", split = 0.5, scale = TRUE) #> - INDEPENDENT VARIABLE: Fare #> - MODEL TYPE: Regression #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    0.00    7.91   14.45   32.20   31.00  512.33  #> - MISSINGS: The following variables contain missing observations: Age (19.87%). Consider using the impute parameter. #> - CATEGORICALS: There are 6 non-numerical features. Consider using ohse() or equivalent prior to encode categorical variables. #> - TRANSFORMATIONS: All numerical features (4) were scaled #> >>> Splitting data: train = 0.5 & test = 0.5 #> train_size  test_size  #>        435        436   model_preprocess(dft, \"Pclass\", ignore = c(\"Fare\", \"Cabin\")) #> - INDEPENDENT VARIABLE: Pclass #> - MODEL TYPE: Classification #> # A tibble: 3 × 5 #>   tag       n     p order  pcum #>   <fct> <int> <dbl> <int> <dbl> #> 1 n_3     491  55.1     1  55.1 #> 2 n_1     216  24.2     2  79.4 #> 3 n_2     184  20.6     3 100   #> - MISSINGS: The following variables contain missing observations: Age (19.87%). Consider using the impute parameter. #> - SKIPPED: Ignored variables for training models: 'Fare', 'Cabin' #> - CATEGORICALS: There are 4 non-numerical features. Consider using ohse() or equivalent prior to encode categorical variables. #> >>> Splitting data: train = 0.7 & test = 0.3 #> train_size  test_size  #>        623        268   model_preprocess(dft, \"Pclass\", quiet = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/move_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Move files from A to B — move_files","title":"Move files from A to B — move_files","text":"Move one files directory another using R.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/move_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move files from A to B — move_files","text":"","code":"move_files(from, to)"},{"path":"https://laresbernardo.github.io/lares/reference/move_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move files from A to B — move_files","text":"Character. File names directories. files moved recursively. Character. File names file directory. directory exist, created.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/move_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move files from A to B — move_files","text":"return value, called side effects.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_conf.html","id":null,"dir":"Reference","previous_headings":"","what":"Confussion Matrix Plot — mplot_conf","title":"Confussion Matrix Plot — mplot_conf","text":"function plots confussion matrix.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_conf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confussion Matrix Plot — mplot_conf","text":"","code":"mplot_conf(   tag,   score,   thresh = 0.5,   abc = TRUE,   squared = FALSE,   diagonal = TRUE,   top = 20,   subtitle = NA,   model_name = NULL,   save = FALSE,   subdir = NA,   file_name = \"viz_conf_mat.png\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_conf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confussion Matrix Plot — mplot_conf","text":"tag Vector. Real known label. score Vector. Predicted value model's result. thresh Integer. Threshold selecting binary regression models: number threshold unique values 'tag' (: regression; less : classification) abc Boolean. Arrange columns rows alphabetically? squared Boolean. Force plot squared? diagonal Boolean. FALSE convert diagonal numbers zeroes. Ideal detect must confusing categories. top Integer. Plot n frequent variables. Set NA plot . subtitle Character. Subtitle show plot model_name Character. Model's name save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_conf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confussion Matrix Plot — mplot_conf","text":"Plot confusion matrix results.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_conf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confussion Matrix Plot — mplot_conf","text":"may use conf_mat() get calculate values.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_conf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confussion Matrix Plot — mplot_conf","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions lapply(dfr, head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>  #> $regr #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 #>   # Plot for Binomial Model mplot_conf(dfr$class2$tag, dfr$class2$scores,   model_name = \"Titanic Survived Model\" )   # Plot for Multi-Categorical Model mplot_conf(dfr$class3$tag, dfr$class3$score,   model_name = \"Titanic Class Model\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_cuts.html","id":null,"dir":"Reference","previous_headings":"","what":"Cuts by quantiles for score plot — mplot_cuts","title":"Cuts by quantiles for score plot — mplot_cuts","text":"function cuts quantiles score prediction.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_cuts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuts by quantiles for score plot — mplot_cuts","text":"","code":"mplot_cuts(   score,   splits = 10,   model_name = NA,   subtitle = NA,   table = FALSE,   save = FALSE,   subdir = NA,   file_name = \"viz_ncuts.png\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_cuts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuts by quantiles for score plot — mplot_cuts","text":"score Vector. Predicted value model's result. splits Integer. Numer separations plot model_name Character. Model's name subtitle Character. Subtitle show plot table Boolean. wish return table results? save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_cuts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cuts by quantiles for score plot — mplot_cuts","text":"Plot performance results cuts.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_cuts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cuts by quantiles for score plot — mplot_cuts","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions head(dfr$class2) #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101  # Data mplot_cuts(dfr$class2$scores, splits = 5, table = TRUE) #>   range     cuts #> 1   20% 0.074886 #> 2   40% 0.132404 #> 3   60% 0.312343 #> 4   80% 0.799710 #> 5  100% 0.982415  # Plot mplot_cuts(dfr$class2$scores, model_name = \"Titanic Survived Model\")"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_cuts_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Cuts by quantiles on absolute and percentual errors plot — mplot_cuts_error","title":"Cuts by quantiles on absolute and percentual errors plot — mplot_cuts_error","text":"function cuts quantiles absolute percentual errors","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_cuts_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuts by quantiles on absolute and percentual errors plot — mplot_cuts_error","text":"","code":"mplot_cuts_error(   tag,   score,   splits = 10,   title = NA,   model_name = NA,   save = FALSE,   subdir = NA,   file_name = \"viz_ncuts_error.png\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_cuts_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuts by quantiles on absolute and percentual errors plot — mplot_cuts_error","text":"tag Vector. Real known label. score Vector. Predicted value model's result. splits Integer. Number separations plot title Character. Title show plot model_name Character. Model's name save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_cuts_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cuts by quantiles on absolute and percentual errors plot — mplot_cuts_error","text":"Plot error results cuts.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_cuts_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cuts by quantiles on absolute and percentual errors plot — mplot_cuts_error","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions head(dfr$regr) #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 mplot_cuts_error(dfr$regr$tag, dfr$regr$score,   model_name = \"Titanic Fare Model\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Density plot for discrete and continuous values — mplot_density","title":"Density plot for discrete and continuous values — mplot_density","text":"function plots discrete continuous values results","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density plot for discrete and continuous values — mplot_density","text":"","code":"mplot_density(   tag,   score,   thresh = 6,   model_name = NA,   subtitle = NA,   save = FALSE,   subdir = NA,   file_name = \"viz_distribution.png\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density plot for discrete and continuous values — mplot_density","text":"tag Vector. Real known label score Vector. Predicted value model's result thresh Integer. Threshold selecting binary regression models: number threshold unique values 'tag' (: regression; less : classification) model_name Character. Model's name subtitle Character. Subtitle show plot save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density plot for discrete and continuous values — mplot_density","text":"Plot distribution performance results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density plot for discrete and continuous values — mplot_density","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions lapply(dfr[c(1, 3)], head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $regr #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 #>   # Plot for binomial results mplot_density(dfr$class2$tag, dfr$class2$scores, subtitle = \"Titanic Survived Model\")   # Plot for regression results mplot_density(dfr$regr$tag, dfr$regr$score, model_name = \"Titanic Fare Model\")"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_full.html","id":null,"dir":"Reference","previous_headings":"","what":"MPLOTS Score Full Report Plots — mplot_full","title":"MPLOTS Score Full Report Plots — mplot_full","text":"function plots whole dashboard model's results. automatically detect categorical regression's model checking many different unique values independent variable (tag) .","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MPLOTS Score Full Report Plots — mplot_full","text":"","code":"mplot_full(   tag,   score,   multis = NA,   splits = 8,   thresh = 6,   subtitle = NA,   model_name = NA,   plot = TRUE,   save = FALSE,   subdir = NA,   file_name = \"viz_full.png\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MPLOTS Score Full Report Plots — mplot_full","text":"tag Vector. Real known label. score Vector. Predicted value model's result. multis Data.frame. Containing columns category probability score (used 2 categories coexist). splits Integer. Number separations plot thresh Integer. Threshold selecting binary regression models: number threshold unique values 'tag' (: regression; less : classification) subtitle Character. Subtitle show plot model_name Character. Model's name plot Boolean. Plot results? , plot grid object returned save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_full.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MPLOTS Score Full Report Plots — mplot_full","text":"Multiple plots gathered one, showing tag vs score performance results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_full.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MPLOTS Score Full Report Plots — mplot_full","text":"","code":"# \\donttest{ Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions lapply(dfr, head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>  #> $regr #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 #>   # Dasboard for Binomial Model mplot_full(dfr$class2$tag, dfr$class2$scores,   model_name = \"Titanic Survived Model\" )   # Dasboard for Multi-Categorical Model mplot_full(dfr$class3$tag, dfr$class3$score,   multis = subset(dfr$class3, select = -c(tag, score)),   model_name = \"Titanic Class Model\" )   # Dasboard for Regression Model mplot_full(dfr$regr$tag, dfr$regr$score,   model_name = \"Titanic Fare Model\" )  # }"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_gain.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Gain Plot — mplot_gain","title":"Cumulative Gain Plot — mplot_gain","text":"cumulative gains plot, often named ‘gains plot’, helps us answer question: apply model select best X deciles,  expect target? cumulative gains chart shows percentage overall number cases given category \"gained\" targeting percentage total number cases.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_gain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Gain Plot — mplot_gain","text":"","code":"mplot_gain(   tag,   score,   multis = NA,   target = \"auto\",   splits = 10,   highlight = \"auto\",   caption = NA,   save = FALSE,   subdir = NA,   file_name = \"viz_gain.png\",   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_gain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Gain Plot — mplot_gain","text":"tag Vector. Real known label. score Vector. Predicted value model's result. multis Data.frame. Containing columns category probability score (used 2 categories coexist). target Value. target positive value? set 'auto', target largest mean(score) selected. Change value overwrite. works binary classes splits Integer. Numer quantiles split data highlight Character Integer. split used automatic conclussion plot? Set \"auto\" best value, \"none\" turn number split. caption Character. Caption show plot save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot quiet Boolean. show message auto target?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_gain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Gain Plot — mplot_gain","text":"Plot gain performance results cuts.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_gain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Gain Plot — mplot_gain","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions lapply(dfr, head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>  #> $regr #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 #>   # Plot for Binomial Model mplot_gain(dfr$class2$tag, dfr$class2$scores,   caption = \"Titanic Survived Model\",   target = \"FALSE\" ) #> Target value: FALSE  mplot_gain(dfr$class2$tag, dfr$class2$scores,   caption = \"Titanic Survived Model\",   target = \"TRUE\" ) #> Target value: TRUE   # Plot for Multi-Categorical Model mplot_gain(dfr$class3$tag, dfr$class3$score,   multis = subset(dfr$class3, select = -c(tag, score)),   caption = \"Titanic Class Model\" ) #> Target value: n_1 #> Target value: n_2 #> Target value: n_3"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Variables Importances Plot — mplot_importance","title":"Variables Importances Plot — mplot_importance","text":"function plots Variable Importances","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variables Importances Plot — mplot_importance","text":"","code":"mplot_importance(   var,   imp,   colours = NA,   limit = 15,   model_name = NA,   subtitle = NA,   save = FALSE,   subdir = NA,   file_name = \"viz_importance.png\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variables Importances Plot — mplot_importance","text":"var Vector. Variable column's names imp Vector. Importance said variables. Must length var colours positive negative contribution known limit Integer. Limit many variables wish plot model_name Character. Model's name subtitle Character. Subtitle show plot save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variables Importances Plot — mplot_importance","text":"Plot ranked importance variables results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variables Importances Plot — mplot_importance","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal df <- data.frame(   variable = LETTERS[1:6],   importance = c(4, 6, 6.7, 3, 4.8, 6.2) / 100,   positive = c(TRUE, TRUE, FALSE, TRUE, FALSE, FALSE) ) head(df) #>   variable importance positive #> 1        A      0.040     TRUE #> 2        B      0.060     TRUE #> 3        C      0.067    FALSE #> 4        D      0.030     TRUE #> 5        E      0.048    FALSE #> 6        F      0.062    FALSE  mplot_importance(   var = df$variable,   imp = df$importance,   model_name = \"Random values model\" )   # Add a colour for categories mplot_importance(   var = df$variable,   imp = df$importance,   colours = df$positive,   limit = 4 )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_lineal.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Regression Results Plot — mplot_lineal","title":"Linear Regression Results Plot — mplot_lineal","text":"function plots Linear Regression Result","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_lineal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Regression Results Plot — mplot_lineal","text":"","code":"mplot_lineal(   tag,   score,   subtitle = NA,   model_name = NA,   save = FALSE,   subdir = NA,   file_name = \"viz_lineal.png\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_lineal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Regression Results Plot — mplot_lineal","text":"tag Vector. Real known label. score Vector. Predicted value model's result. subtitle Character. Subtitle show plot model_name Character. Model's name save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_lineal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Regression Results Plot — mplot_lineal","text":"Plot linear distribution performance results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_lineal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Regression Results Plot — mplot_lineal","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions lapply(dfr, head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>  #> $regr #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 #>  mplot_lineal(dfr$regr$tag, dfr$regr$score, model_name = \"Titanic Fare Model\")"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Metrics and Performance Plots — mplot_metrics","title":"Model Metrics and Performance Plots — mplot_metrics","text":"function generates plots metrics predictive model. auxiliary function used model_metrics() parameter plot set TRUE.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Metrics and Performance Plots — mplot_metrics","text":"","code":"mplot_metrics(   results,   subtitle = NA,   model_name = NA,   save = FALSE,   subdir = NA,   file_name = \"viz_metrics.png\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Metrics and Performance Plots — mplot_metrics","text":"results Object. Results object h2o_automl function subtitle Character. Subtitle show plot model_name Character. Model's name save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Metrics and Performance Plots — mplot_metrics","text":"Plot results performance.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative Response Plot — mplot_response","title":"Cumulative Response Plot — mplot_response","text":"response gains plot helps us answer question: apply model select ntile X, expected","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative Response Plot — mplot_response","text":"","code":"mplot_response(   tag,   score,   multis = NA,   target = \"auto\",   splits = 10,   highlight = \"auto\",   caption = NA,   save = FALSE,   subdir = NA,   file_name = \"viz_response.png\",   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative Response Plot — mplot_response","text":"tag Vector. Real known label. score Vector. Predicted value model's result. multis Data.frame. Containing columns category probability score (used 2 categories coexist). target Value. target positive value? set 'auto', target largest mean(score) selected. Change value overwrite. works binary classes splits Integer. Numer quantiles split data highlight Character Integer. split used automatic conclussion plot? Set \"auto\" best value, \"none\" turn number split. caption Character. Caption show plot save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot quiet Boolean. show message auto target?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative Response Plot — mplot_response","text":"Plot cumulative response performance results cuts.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative Response Plot — mplot_response","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions lapply(dfr, head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>  #> $regr #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 #>   # Plot for Binomial Model mplot_response(dfr$class2$tag, dfr$class2$scores,   caption = \"Titanic Survived Model\",   target = \"TRUE\" ) #> Target value: TRUE  mplot_response(dfr$class2$tag, dfr$class2$scores,   caption = \"Titanic Survived Model\",   target = \"FALSE\" ) #> Target value: FALSE   # Plot for Multi-Categorical Model mplot_response(dfr$class3$tag, dfr$class3$score,   multis = subset(dfr$class3, select = -c(tag, score)),   caption = \"Titanic Class Model\" ) #> Target value: n_1 #> Target value: n_2 #> Target value: n_3"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_roc.html","id":null,"dir":"Reference","previous_headings":"","what":"ROC Curve Plot — mplot_roc","title":"ROC Curve Plot — mplot_roc","text":"function plots ROC Curves AUC values 95% confidence range. also works multi-categorical models.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ROC Curve Plot — mplot_roc","text":"","code":"mplot_roc(   tag,   score,   multis = NA,   sample = 1000,   model_name = NA,   subtitle = NA,   interval = 0.2,   squared = TRUE,   plotly = FALSE,   save = FALSE,   subdir = NA,   file_name = \"viz_roc.png\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ROC Curve Plot — mplot_roc","text":"tag Vector. Real known label. score Vector. Predicted value model's result. multis Data.frame. Containing columns category probability score (used 2 categories coexist). sample Integer. Number samples use rendering plot. model_name Character. Model's name subtitle Character. Subtitle show plot interval Numeric. Interval breaks plot squared Boolean. Keep proportions? plotly Boolean. Use plotly plot's output interactive plot save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ROC Curve Plot — mplot_roc","text":"Plot ROC curve AUC performance results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_roc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ROC Curve Plot — mplot_roc","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions lapply(dfr[c(1, 2)], head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>   # ROC Curve for Binomial Model mplot_roc(dfr$class2$tag, dfr$class2$scores,   model_name = \"Titanic Survived Model\" )   # ROC Curves for Multi-Categorical Model mplot_roc(dfr$class3$tag, dfr$class3$score,   multis = subset(dfr$class3, select = -c(tag, score)),   squared = FALSE,   model_name = \"Titanic Class Model\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_splits.html","id":null,"dir":"Reference","previous_headings":"","what":"Split and compare quantiles plot — mplot_splits","title":"Split and compare quantiles plot — mplot_splits","text":"function lets us split compare quantiles given prediction compare different categorical values vs scores grouped equal sized buckets.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_splits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split and compare quantiles plot — mplot_splits","text":"","code":"mplot_splits(   tag,   score,   splits = 5,   subtitle = NA,   model_name = NA,   save = FALSE,   subdir = NA,   file_name = \"viz_splits.png\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_splits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split and compare quantiles plot — mplot_splits","text":"tag Vector. Real known label. score Vector. Predicted value model's result. splits Integer. Number separations plot subtitle Character. Subtitle show plot model_name Character. Model's name save Boolean. Save output plot working directory subdir Character. Sub directory wish save plot file_name Character. File name wish save plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_splits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split and compare quantiles plot — mplot_splits","text":"Plot distribution performance results splits.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_splits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split and compare quantiles plot — mplot_splits","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions lapply(dfr, head) #> $class2 #>     tag    scores #> 1  TRUE 0.3155498 #> 2  TRUE 0.8747599 #> 3  TRUE 0.8952823 #> 4 FALSE 0.0436517 #> 5  TRUE 0.2196593 #> 6 FALSE 0.2816101 #>  #> $class3 #>   tag score        n_1        n_2        n_3 #> 1 n_3   n_2 0.20343865 0.60825062 0.18831071 #> 2 n_2   n_3 0.17856154 0.07657769 0.74486071 #> 3 n_1   n_1 0.50516951 0.40168718 0.09314334 #> 4 n_3   n_2 0.30880713 0.39062151 0.30057135 #> 5 n_2   n_3 0.01956827 0.07069011 0.90974158 #> 6 n_2   n_3 0.07830017 0.15408720 0.76761264 #>  #> $regr #>       tag    score #> 1 11.1333 25.93200 #> 2 30.0708 39.91900 #> 3 26.5500 50.72246 #> 4 31.2750 47.81292 #> 5 13.0000 30.12853 #> 6 26.0000 13.24153 #>   # For categorical (binary) values mplot_splits(dfr$class2$tag, dfr$class2$scores,   splits = 4,   model_name = \"Titanic Survived Model\" )   # For categorical (+2) values mplot_splits(dfr$class3$tag, dfr$class2$scores,   model_name = \"Titanic Class Model\" )   # For continuous values mplot_splits(dfr$regr$tag, dfr$regr$score,   splits = 4,   model_name = \"Titanic Fare Model\" )"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_topcats.html","id":null,"dir":"Reference","previous_headings":"","what":"Top Hit Ratios for Multi-Classification Models — mplot_topcats","title":"Top Hit Ratios for Multi-Classification Models — mplot_topcats","text":"Calculate plot multi-class model's predictions accuracy based top N predictions distribution probabilities.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_topcats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Top Hit Ratios for Multi-Classification Models — mplot_topcats","text":"","code":"mplot_topcats(tag, score, multis, model_name = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/mplot_topcats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Top Hit Ratios for Multi-Classification Models — mplot_topcats","text":"tag Vector. Real known label. score Vector. Predicted value model's result. multis Data.frame. Containing columns category probability score (used 2 categories coexist). model_name Character. Model's name","code":""},{"path":"https://laresbernardo.github.io/lares/reference/mplot_topcats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Top Hit Ratios for Multi-Classification Models — mplot_topcats","text":"Plot performance results frequent categories.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/mplot_topcats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Top Hit Ratios for Multi-Classification Models — mplot_topcats","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dfr) # Results for AutoML Predictions mplot_topcats(dfr$class3$tag, dfr$class3$score,   multis = subset(dfr$class3, select = -c(tag, score)),   model_name = \"Titanic Class Model\" )"},{"path":"https://laresbernardo.github.io/lares/reference/msplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a dataframe for training and testing sets — msplit","title":"Split a dataframe for training and testing sets — msplit","text":"function splits automatically dataframe train test datasets. can define seed get results every time, default value. can prevent printing split counter result.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/msplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a dataframe for training and testing sets — msplit","text":"","code":"msplit(df, size = 0.7, seed = 0, print = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/msplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a dataframe for training and testing sets — msplit","text":"df Dataframe size Numeric. Split rate value, 0 1. set 1, train test set . seed Integer. Seed random split print Boolean. Print summary results?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/msplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a dataframe for training and testing sets — msplit","text":"List datasets, summary, split rate.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/msplit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a dataframe for training and testing sets — msplit","text":"","code":"data(dft) # Titanic dataset splits <- msplit(dft, size = 0.7, seed = 123) #> train_size  test_size  #>        623        268  names(splits) #> [1] \"train\"       \"test\"        \"summary\"     \"split_size\"  \"train_index\""},{"path":"https://laresbernardo.github.io/lares/reference/myip.html","id":null,"dir":"Reference","previous_headings":"","what":"What's my IP? — myip","title":"What's my IP? — myip","text":"Reveal current IP address.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/myip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"What's my IP? — myip","text":"","code":"myip()"},{"path":"https://laresbernardo.github.io/lares/reference/myip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"What's my IP? — myip","text":"Character. Result IP address based ipify.org","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/myip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"What's my IP? — myip","text":"","code":"# \\donttest{ myip() #> [1] \"13.105.49.127\" # }"},{"path":"https://laresbernardo.github.io/lares/reference/ngrams.html","id":null,"dir":"Reference","previous_headings":"","what":"Build N-grams and keep most frequent — ngrams","title":"Build N-grams and keep most frequent — ngrams","text":"Build n-grams multiple text inputs keep n frequent combinations.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ngrams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build N-grams and keep most frequent — ngrams","text":"","code":"ngrams(text, ngram = c(2, 3), top = 10, stop_words = NULL, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/ngrams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build N-grams and keep most frequent — ngrams","text":"text Character vector ngram Integer vector. Number continuous n items text. top Integer. Keep n frequent ngrams . stop_words Character vector. Words exclude text. Example: want exclude \"\", whenever word appears excluded, letter \"\" appears word, remain. ... Additional parameters passed remove_stopwords.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ngrams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build N-grams and keep most frequent — ngrams","text":"data.frame ngrams counters, sorted frequency.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/ngrams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build N-grams and keep most frequent — ngrams","text":"","code":"# You must have \"tidytext\" library to use this auxiliary function: if (FALSE) { women <- read.csv(\"https://bit.ly/3mXJOOi\") x <- women$description ngrams(x, ngram = c(2, 3), top = 3) ngrams(x, ngram = 2, top = 6, stop_words = c(\"a\", \"is\", \"of\", \"the\")) }"},{"path":"https://laresbernardo.github.io/lares/reference/noPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Result with Nothing to Plot — noPlot","title":"Plot Result with Nothing to Plot — noPlot","text":"function lets user print plot without plot, customizable message. quite useful Shiny renderPlot using filters data returned.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/noPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Result with Nothing to Plot — noPlot","text":"","code":"noPlot(message = \"Nothing to show here!\", size = 4.5, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/noPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Result with Nothing to Plot — noPlot","text":"message Character. message wish show? size Numeric. Font size message input. ... Additional parameters passed theme_lares().","code":""},{"path":"https://laresbernardo.github.io/lares/reference/noPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Result with Nothing to Plot — noPlot","text":"Empty ggplot2 object (message set).","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/noPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Result with Nothing to Plot — noPlot","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal noPlot(message = \"No plot to show!\")  noPlot(background = \"#FF5500\", size = 7)"},{"path":"https://laresbernardo.github.io/lares/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Vector — normalize","title":"Normalize Vector — normalize","text":"function lets user normalize numerical values 0 1 range","code":""},{"path":"https://laresbernardo.github.io/lares/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Vector — normalize","text":"","code":"normalize(x)"},{"path":"https://laresbernardo.github.io/lares/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Vector — normalize","text":"x Numeric Vector. Numbers transformed normalized vector","code":""},{"path":"https://laresbernardo.github.io/lares/reference/normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Vector — normalize","text":"Vector normalized x values","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Vector — normalize","text":"","code":"x <- c(0, 1, 4, 7.5, 10) normalize(x) #> [1] 0.00 0.10 0.40 0.75 1.00"},{"path":"https://laresbernardo.github.io/lares/reference/num_abbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Abbreviate numbers — num_abbr","title":"Abbreviate numbers — num_abbr","text":"function converts numeric vector's values abbreviated character equivalent, .e. 100,000,000 100M.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/num_abbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abbreviate numbers — num_abbr","text":"","code":"num_abbr(x, n = 3)"},{"path":"https://laresbernardo.github.io/lares/reference/num_abbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abbreviate numbers — num_abbr","text":"x Numeric vector n Integer. Single numeric value, specifying number significant figures show. Range 1 6.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/num_abbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Abbreviate numbers — num_abbr","text":"Vector character values contain converted values","code":""},{"path":"https://laresbernardo.github.io/lares/reference/num_abbr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abbreviate numbers — num_abbr","text":"","code":"num_abbr(rnorm(10) * 1e6) #>  [1] \"-560K\"  \"-230K\"  \"1.56M\"  \"70.5K\"  \"129K\"   \"1.72M\"  \"461K\"   \"-1.27M\" #>  [9] \"-687K\"  \"-446K\"  num_abbr(rnorm(10) * 1e6, n = 1) #>  [1] \"1M\"    \"400K\"  \"400K\"  \"100K\"  \"-600K\" \"2M\"    \"500K\"  \"-2M\"   \"700K\"  #> [10] \"-500K\""},{"path":"https://laresbernardo.github.io/lares/reference/numericalonly.html","id":null,"dir":"Reference","previous_headings":"","what":"Select only numerical columns in a dataframe — numericalonly","title":"Select only numerical columns in a dataframe — numericalonly","text":"Select numerical columns dataframe","code":""},{"path":"https://laresbernardo.github.io/lares/reference/numericalonly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select only numerical columns in a dataframe — numericalonly","text":"","code":"numericalonly(df, dropnacols = TRUE, logs = FALSE, natransform = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/numericalonly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select only numerical columns in a dataframe — numericalonly","text":"df Data.frame dropnacols Boolean. Drop columns NA values? logs Boolean. Calculate log(x)+1 numerical columns? natransform String. \"mean\" 0 impute NA values. set NA calculation run.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/numericalonly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select only numerical columns in a dataframe — numericalonly","text":"data.frame numerical columns selected.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/numericalonly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select only numerical columns in a dataframe — numericalonly","text":"","code":"data(dft) # Titanic dataset str(dft) #> 'data.frame':\t891 obs. of  11 variables: #>  $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ Survived   : logi  FALSE TRUE TRUE TRUE FALSE FALSE ... #>  $ Pclass     : Factor w/ 3 levels \"1\",\"2\",\"3\": 3 1 3 1 3 3 1 3 3 2 ... #>  $ Sex        : Factor w/ 2 levels \"female\",\"male\": 2 1 1 1 2 2 2 2 1 1 ... #>  $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ... #>  $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ... #>  $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ... #>  $ Ticket     : chr  \"A/5 21171\" \"PC 17599\" \"STON/O2. 3101282\" \"113803\" ... #>  $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ... #>  $ Cabin      : Factor w/ 148 levels \"\",\"A10\",\"A14\",..: 1 83 1 57 1 1 131 1 1 1 ... #>  $ Embarked   : Factor w/ 4 levels \"\",\"C\",\"Q\",\"S\": 4 2 4 4 4 3 4 4 4 2 ... numericalonly(dft) %>% head() #>   PassengerId Age SibSp Parch    Fare Survived Sex #> 1           1  22     1     0  7.2500        0   1 #> 2           2  38     1     0 71.2833        1   0 #> 3           3  26     0     0  7.9250        1   0 #> 4           4  35     1     0 53.1000        1   0 #> 5           5  35     0     0  8.0500        0   1 #> 6           6  NA     0     0  8.4583        0   1 numericalonly(dft, natransform = \"mean\") %>% head() #>   PassengerId      Age SibSp Parch    Fare Survived Sex #> 1           1 22.00000     1     0  7.2500        0   1 #> 2           2 38.00000     1     0 71.2833        1   0 #> 3           3 26.00000     0     0  7.9250        1   0 #> 4           4 35.00000     1     0 53.1000        1   0 #> 5           5 35.00000     0     0  8.0500        0   1 #> 6           6 29.69912     0     0  8.4583        0   1"},{"path":"https://laresbernardo.github.io/lares/reference/ohe_commas.html","id":null,"dir":"Reference","previous_headings":"","what":"One Hot Encoding for a Vector with Comma Separated Values — ohe_commas","title":"One Hot Encoding for a Vector with Comma Separated Values — ohe_commas","text":"function lets user one hot encoding variable comma separated values","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ohe_commas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One Hot Encoding for a Vector with Comma Separated Values — ohe_commas","text":"","code":"ohe_commas(df, ..., sep = \",\", noval = \"NoVal\", remove = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/ohe_commas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One Hot Encoding for a Vector with Comma Separated Values — ohe_commas","text":"df Dataframe. May contain one columns comma separated values separated one hot encoding ... Variables. variables split new columns? sep Character. regular expression separates elements? noval Character. value text remove Boolean. Remove original variables?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ohe_commas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One Hot Encoding for a Vector with Comma Separated Values — ohe_commas","text":"data.frame features numerical nature transformed one hot encoding.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/ohe_commas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One Hot Encoding for a Vector with Comma Separated Values — ohe_commas","text":"","code":"df <- data.frame(   id = c(1:5),   x = c(\"AA, D\", \"AA,B\", \"B,  D\", \"A,D,B\", NA),   z = c(\"AA+BB+AA\", \"AA\", \"BB,  AA\", NA, \"BB+AA\") ) ohe_commas(df, x, remove = TRUE) #> # A tibble: 5 × 7 #>      id z        x_AA  x_D   x_B   x_A   x_NoVal #>   <int> <chr>    <lgl> <lgl> <lgl> <lgl> <lgl>   #> 1     1 AA+BB+AA TRUE  TRUE  FALSE FALSE FALSE   #> 2     2 AA       TRUE  FALSE TRUE  FALSE FALSE   #> 3     3 BB,  AA  FALSE TRUE  TRUE  FALSE FALSE   #> 4     4 NA       FALSE TRUE  TRUE  TRUE  FALSE   #> 5     5 BB+AA    FALSE FALSE FALSE FALSE TRUE    ohe_commas(df, z, sep = \"\\\\+\") #> # A tibble: 5 × 6 #>      id x     z        z_AA  z_BB  `z_AA, AA, BB,  AA, NoVal, BB` #>   <int> <chr> <chr>    <lgl> <lgl> <lgl>                          #> 1     1 AA, D AA+BB+AA TRUE  TRUE  FALSE                          #> 2     2 AA,B  AA       TRUE  FALSE FALSE                          #> 3     3 B,  D BB,  AA  FALSE FALSE FALSE                          #> 4     4 A,D,B NA       FALSE FALSE FALSE                          #> 5     5 NA    BB+AA    TRUE  TRUE  FALSE                          ohe_commas(df, x, z) #> # A tibble: 5 × 13 #>      id x     z        x_AA  z_D   x_B   z_A   x_NoVal `x_AA+BB+AA` z_AA  x_BB  #>   <int> <chr> <chr>    <lgl> <lgl> <lgl> <lgl> <lgl>   <lgl>        <lgl> <lgl> #> 1     1 AA, D AA+BB+AA TRUE  TRUE  FALSE FALSE FALSE   TRUE         FALSE FALSE #> 2     2 AA,B  AA       TRUE  FALSE TRUE  FALSE FALSE   FALSE        TRUE  FALSE #> 3     3 B,  D BB,  AA  FALSE TRUE  TRUE  FALSE FALSE   FALSE        TRUE  TRUE  #> 4     4 A,D,B NA       FALSE TRUE  TRUE  TRUE  FALSE   FALSE        FALSE FALSE #> 5     5 NA    BB+AA    FALSE FALSE FALSE FALSE TRUE    FALSE        FALSE FALSE #> # … with 2 more variables: z_NoVal <lgl>, `x_BB+AA` <lgl>"},{"path":"https://laresbernardo.github.io/lares/reference/ohse.html","id":null,"dir":"Reference","previous_headings":"","what":"One Hot Smart Encoding (Dummy Variables) — ohse","title":"One Hot Smart Encoding (Dummy Variables) — ohse","text":"function lets user automatically transform dataframe categorical columns numerical one hot encoding technic.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ohse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One Hot Smart Encoding (Dummy Variables) — ohse","text":"","code":"ohse(   df,   redundant = FALSE,   drop = TRUE,   ignore = NULL,   dates = FALSE,   holidays = FALSE,   country = \"Colombia\",   currency_pair = NA,   trim = 0,   limit = 10,   variance = 0.9,   other_label = \"OTHER\",   sep = \"_\",   quiet = FALSE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/ohse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One Hot Smart Encoding (Dummy Variables) — ohse","text":"df Dataframe redundant Boolean. keep redundant columns? .e. column two different values, keep new columns? set NULL, binary variables dump redundant columns. drop Boolean. Drop automatically useless features? ignore Vector character. column ignored? dates Boolean. want function create features date/time columns? holidays Boolean. Include holidays new columns? country Character vector. countries holidays included? currency_pair Character. currency exchange wish get history ? .e, USD/COP, EUR/USD... trim Integer. Trim names nth character limit Integer. Limit one hot encoding n frequent values column. Set NA ignore argument. variance Numeric. Drop columns n variance. Range: 0-1. example: variable contains 91 unique different values 100 observations, column suppressed value set 0.9 other_label Character. text wish replace filtered values ? sep Character. Separator's string quiet Boolean. Quiet messages summaries? ... Additional parameters","code":""},{"path":"https://laresbernardo.github.io/lares/reference/ohse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One Hot Smart Encoding (Dummy Variables) — ohse","text":"data.frame features numerical nature transformed one hot encoding.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/ohse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One Hot Smart Encoding (Dummy Variables) — ohse","text":"","code":"data(dft) dft <- dft[, c(2, 3, 5, 9, 11)]  ohse(dft, limit = 3) %>% head(3) #> >>> One Hot Encoding applied to 3 variables: 'Pclass', 'Embarked', 'Survived' #> # A tibble: 3 × 8 #>     Age  Fare Survived_TRUE Pclass_1 Pclass_2 Embarked_C Embarked_OTHER #>   <dbl> <dbl>         <dbl>    <dbl>    <dbl>      <dbl>          <dbl> #> 1    22  7.25             0        0        0          0              0 #> 2    38 71.3              1        1        0          1              0 #> 3    26  7.92             1        0        0          0              0 #> # … with 1 more variable: Embarked_Q <dbl> ohse(dft, limit = 3, redundant = NULL) %>% head(3) #> >>> One Hot Encoding applied to 3 variables: 'Pclass', 'Embarked', 'Survived' #> # A tibble: 3 × 10 #>     Age  Fare Survived_TRUE Pclass_1 Pclass_2 Pclass_3 Embarked_C Embarked_OTHER #>   <dbl> <dbl>         <dbl>    <dbl>    <dbl>    <dbl>      <dbl>          <dbl> #> 1    22  7.25             0        0        0        1          0              0 #> 2    38 71.3              1        1        0        0          1              0 #> 3    26  7.92             1        0        0        1          0              0 #> # … with 2 more variables: Embarked_Q <dbl>, Embarked_S <dbl>  # Getting rid of columns with no (or too much) variance dft$no_variance1 <- 0 dft$no_variance2 <- c(\"A\", rep(\"B\", nrow(dft) - 1)) dft$no_variance3 <- as.character(rnorm(nrow(dft))) dft$no_variance4 <- c(rep(\"A\", 20), round(rnorm(nrow(dft) - 20), 4)) ohse(dft, limit = 3) %>% head(3) #> >>> One Hot Encoding applied to 4 variables: 'Pclass', 'Embarked', 'Survived', 'no_variance2' #> # A tibble: 3 × 11 #>     Age  Fare no_variance3    no_variance4 Survived_TRUE no_variance2_B Pclass_1 #>   <dbl> <dbl> <chr>           <chr>                <dbl>          <dbl>    <dbl> #> 1    22  7.25 -1.06782370598… A                        0              0        0 #> 2    38 71.3  -0.21797491465… A                        1              1        1 #> 3    26  7.92 -1.02600444830… A                        1              1        0 #> # … with 4 more variables: Pclass_2 <dbl>, Embarked_C <dbl>, #> #   Embarked_OTHER <dbl>, Embarked_Q <dbl>"},{"path":"https://laresbernardo.github.io/lares/reference/outlier_turkey.html","id":null,"dir":"Reference","previous_headings":"","what":"Outliers: Tukey’s fences — outlier_turkey","title":"Outliers: Tukey’s fences — outlier_turkey","text":"Tukey’s fences technique used box plots. non-outlier range defined [Q1-k(Q3-Q1), Q3+k(Q3-Q1)], Q1 Q3 lower upper quartiles respectively, k - non-negative constant (popular choice 1.5). value outlier based Tukey’s fences value lie non-outlier range.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/outlier_turkey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outliers: Tukey’s fences — outlier_turkey","text":"","code":"outlier_turkey(x, k = 1.5)"},{"path":"https://laresbernardo.github.io/lares/reference/outlier_turkey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outliers: Tukey’s fences — outlier_turkey","text":"x Numeric. Distribution k Positive Numeric. K-multiplier.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/outlier_turkey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outliers: Tukey’s fences — outlier_turkey","text":"Boolean vector detecting outliers.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/outlier_zscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Outliers: Z-score method — outlier_zscore","title":"Outliers: Z-score method — outlier_zscore","text":"Z-score, also called standard score, observation distance population center measured number normalization units. default choice center sample mean normalization unit standard deviation. Values considered outliers based z-score absolute value default z-score higher threshold (popular choice 3).","code":""},{"path":"https://laresbernardo.github.io/lares/reference/outlier_zscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outliers: Z-score method — outlier_zscore","text":"","code":"outlier_zscore(x, thresh = 3, mad = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/outlier_zscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outliers: Z-score method — outlier_zscore","text":"x Numeric. Distribution thresh Numeric. Z-Score threshold n standard deviations. mad Boolean. Use median absolute deviation instead?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/outlier_zscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outliers: Z-score method — outlier_zscore","text":"data.frame. row x observation respective std/mean mad/med calculations depending mad input.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/outlier_zscore_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Outliers: Z-score method plot — outlier_zscore_plot","title":"Outliers: Z-score method plot — outlier_zscore_plot","text":"Test several Z-score thresholds visualize outliers. Tidyverse friendly.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/outlier_zscore_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outliers: Z-score method plot — outlier_zscore_plot","text":"","code":"outlier_zscore_plot(df, var, group = NULL, thresh = c(2, 3, 5), top = 5)"},{"path":"https://laresbernardo.github.io/lares/reference/outlier_zscore_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outliers: Z-score method plot — outlier_zscore_plot","text":"df Dataframe. var Numeric variable. group Categorical variable. Grouping variable. thresh Numeric vector. Z-Score threshold n standard deviations. top Integer. Show n frequent categorical values using group argument.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/outlier_zscore_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outliers: Z-score method plot — outlier_zscore_plot","text":"ggplot2 object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/outlier_zscore_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outliers: Z-score method plot — outlier_zscore_plot","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dft) # Titanic dataset outlier_zscore_plot(dft, Fare)  p <- outlier_zscore_plot(dft, Fare, Pclass, thresh = c(3, 5)) plot(p)  attr(p, \"z_values\") #>      [,1]     [,2]     [,3]     [,4] #> [1,]    3 35.33443 235.1411 40.25220 #> [2,]    5 58.89071 391.9019 67.08699 head(attr(p, \"labels\")) #> # A tibble: 6 × 6 #>    Fare `Z-3` `Z-5` outlier_std outlier_mean outlier_group #>   <dbl> <lgl> <lgl>       <dbl>        <dbl>         <int> #> 1  7.25 FALSE FALSE        11.8         13.7             3 #> 2 71.3  FALSE FALSE        78.4         84.2             1 #> 3  7.92 FALSE FALSE        11.8         13.7             3 #> 4 53.1  FALSE FALSE        78.4         84.2             1 #> 5  8.05 FALSE FALSE        11.8         13.7             3 #> 6  8.46 FALSE FALSE        11.8         13.7             3"},{"path":"https://laresbernardo.github.io/lares/reference/plot_cats.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot All Categorical Features (Frequencies) — plot_cats","title":"Plot All Categorical Features (Frequencies) — plot_cats","text":"function filters categorical columns plots frequency value every feature.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_cats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot All Categorical Features (Frequencies) — plot_cats","text":"","code":"plot_cats(df)"},{"path":"https://laresbernardo.github.io/lares/reference/plot_cats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot All Categorical Features (Frequencies) — plot_cats","text":"df Dataframe","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_cats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot All Categorical Features (Frequencies) — plot_cats","text":"Plot. Result df categorical features.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/plot_chord.html","id":null,"dir":"Reference","previous_headings":"","what":"Chords Plot — plot_chord","title":"Chords Plot — plot_chord","text":"auxiliary function plots discrete continuous values results","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_chord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chords Plot — plot_chord","text":"","code":"plot_chord(   origin,   dest,   weight = 1,   mg = 3,   title = \"Chord Diagram\",   subtitle = \"\",   pal = NA )"},{"path":"https://laresbernardo.github.io/lares/reference/plot_chord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chords Plot — plot_chord","text":"origin, dest Vectors. Origin destination vectors weight Vector. Weight chord. mg Numeric. Margin adjust plot case need title Character. Title plot subtitle Character. Subtitle plot pal Vector. Colour pallete. Order matters.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_chord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chords Plot — plot_chord","text":"chordDiagram object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/plot_chord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chords Plot — plot_chord","text":"","code":"# You must have \"circlize\" library to use this auxiliary function: if (FALSE) { df <- data.frame(from = c(1, 1, 2, 3, 4, 1, 6), to = c(4, 4, 4, 2, 2, NA, NA)) plot_chord(df$from, df$to) }"},{"path":"https://laresbernardo.github.io/lares/reference/plot_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Summary of Numerical and Categorical Features — plot_df","title":"Plot Summary of Numerical and Categorical Features — plot_df","text":"function plots columns frequencies boxplots, categorical numerical respectively.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Summary of Numerical and Categorical Features — plot_df","text":"","code":"plot_df(df)"},{"path":"https://laresbernardo.github.io/lares/reference/plot_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Summary of Numerical and Categorical Features — plot_df","text":"df Dataframe","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Summary of Numerical and Categorical Features — plot_df","text":"Plot. Result df categorical numerical features.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/plot_nums.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot All Numerical Features (Boxplots) — plot_nums","title":"Plot All Numerical Features (Boxplots) — plot_nums","text":"function filters numerical columns plots boxplots.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_nums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot All Numerical Features (Boxplots) — plot_nums","text":"","code":"plot_nums(df)"},{"path":"https://laresbernardo.github.io/lares/reference/plot_nums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot All Numerical Features (Boxplots) — plot_nums","text":"df Dataframe","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_nums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot All Numerical Features (Boxplots) — plot_nums","text":"Plot. Result df numerical features.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/plot_nums.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot All Numerical Features (Boxplots) — plot_nums","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(dft) # Titanic dataset plot_nums(dft)"},{"path":"https://laresbernardo.github.io/lares/reference/plot_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Palette Colours — plot_palette","title":"Plot Palette Colours — plot_palette","text":"function plots list colours","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Palette Colours — plot_palette","text":"","code":"plot_palette(fill, colour = \"black\", id = NA, limit = 12)"},{"path":"https://laresbernardo.github.io/lares/reference/plot_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Palette Colours — plot_palette","text":"fill Vector. List colours fills. colour Vector. List colours colours. id Vector. ID color. limit Integer. Show first n values.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Palette Colours — plot_palette","text":"Plot fill colours colour counter-colours provided.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/plot_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Palette Colours — plot_palette","text":"","code":"# Simply pass a vector pal <- lares_pal(\"simple\") plot_palette(pal)  # Or fill + color named vector pal <- lares_pal(\"pal\") plot_palette(fill = names(pal), colour = as.vector(pal)) #> Limited to 12 colours. Overwrite with 'limit' parameter"},{"path":"https://laresbernardo.github.io/lares/reference/plot_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Survey Results — plot_survey","title":"Visualize Survey Results — plot_survey","text":"function lets user plot survey's result.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Survey Results — plot_survey","text":"","code":"plot_survey(answers, ignore = 1, title = NA, subtitle = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/plot_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Survey Results — plot_survey","text":"answers Dataframe. Answers. row different person. column different answer. ignore Numeric Vector. columns answers? title Character. Title plot subtitle Character. Subtitle plot.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Survey Results — plot_survey","text":"ggplot2 object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/plot_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot timeline as Gantt Plot — plot_timeline","title":"Plot timeline as Gantt Plot — plot_timeline","text":"function plots groups observartions timelines Gantt Plot way. works start end date format values.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot timeline as Gantt Plot — plot_timeline","text":"","code":"plot_timeline(   event,   start,   end = start + 1,   label = NA,   group = NA,   title = \"Curriculum Vitae Timeline\",   subtitle = \"Bernardo Lares\",   interactive = FALSE,   save = FALSE,   subdir = NA )"},{"path":"https://laresbernardo.github.io/lares/reference/plot_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot timeline as Gantt Plot — plot_timeline","text":"event Vector. Event, role, label, row. start Vector. Start date. end Vector. End date. one day default defined label Vector. Place, institution, label. group Vector. Academic, Work, Extracurricular... Pass factor keep specific order title Character. Title plot subtitle Character. Subtitle plot interactive Boolean. Run plotly? save Boolean. Save output plot working directory subdir Character. subdirectory wish save plot ?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/plot_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot timeline as Gantt Plot — plot_timeline","text":"ggplot2 object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/plot_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot timeline as Gantt Plot — plot_timeline","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal cols <- c(\"Role\", \"Place\", \"Type\", \"Start\", \"End\") today <- as.character(Sys.Date()) cv <- data.frame(rbind(   c(\"Marketing Science Partner\", \"Facebook\", \"Work Experience\", \"2019-12-09\", today),   c(\"Data Scientist Consultant\", \"MatrixDS\", \"Work Experience\", \"2018-09-01\", today),   c(\"R Community Contributor\", \"lares library\", \"Extra\", \"2018-07-18\", today),   c(\"Lead Data Scientist\", \"MEG\", \"Work Experience\", \"2019-01-15\", \"2019-12-09\"),   c(\"Head of Analytics\", \"Comparamejor/R5\", \"Work Experience\", \"2016-08-01\", \"2019-01-15\"),   c(\"Big Data & Data Science Programme\", \"UdC\", \"Academic\", \"2017-09-01\", \"2018-02-28\"),   c(\"Project Engineer\", \"Polytex\", \"Work Experience\", \"2016-05-15\", \"2016-09-01\"),   c(\"Big Data Analyst\", \"MEG\", \"Work Experience\", \"2016-01-01\", \"2016-04-30\"),   c(\"Advanced Excel Instructor\", \"ARTS\", \"Work Experience\", \"2015-11-01\", \"2016-04-30\"),   c(\"Continuous Improvement Intern\", \"PAVCO\", \"Work Experience\", \"2015-04-01\", \"2015-08-30\"),   c(\"Mechanical Design Intern\", \"SIGALCA\", \"Work Experience\", \"2013-07-01\", \"2013-09-30\"),   c(\"DJs Online Community Owner\", \"LaresDJ.com / SoloParaDJs\", \"Extra\", \"2010-01-05\", \"2020-05-20\"),   c(\"Mechanical Engineer Degree\", \"USB\", \"Academic\", \"2009-09-15\", \"2015-11-20\"),   c(\"DJ and Composer/Producer\", \"Legacy Discplay\", \"Extra\", \"2009-05-01\", \"2015-04-30\") )) colnames(cv) <- cols plot_timeline(   event = cv$Role,   start = cv$Start,   end = cv$End,   label = cv$Place,   # Simple trick to re-arrange the grids   group = factor(cv$Type, levels = c(\"Work Experience\", \"Academic\", \"Extra\")) )"},{"path":"https://laresbernardo.github.io/lares/reference/prophesize.html","id":null,"dir":"Reference","previous_headings":"","what":"Facebook's Prophet Forecast — prophesize","title":"Facebook's Prophet Forecast — prophesize","text":"Prophet Facebook's procedure forecasting time series data based additive model non-linear trends fit yearly, weekly, daily seasonality, plus holiday effects. works best time series strong seasonal effects several seasons historical data. Prophet robust missing data shifts trend, typically handles outliers well.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/prophesize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facebook's Prophet Forecast — prophesize","text":"","code":"prophesize(   df,   n_future = 60,   country = NULL,   trend.param = 0.05,   logged = FALSE,   pout = 0.03,   project = \"Prophet Forecast\" )"},{"path":"https://laresbernardo.github.io/lares/reference/prophesize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facebook's Prophet Forecast — prophesize","text":"df Data frame. Must contain date/time column values column, order. n_future Integer. many steps wish forecast? country Character. Country code holidays. trend.param Numeric. Flexibility trend component. Default 0.05, value becomes larger, trend component flexible. logged Boolean. Convert values logs? pout Numeric. Get rid pout % outliers. project Character. Name forecast project plot title","code":""},{"path":"https://laresbernardo.github.io/lares/reference/prophesize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facebook's Prophet Forecast — prophesize","text":"List. Containing forecast results, prophet model, plot.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/prophesize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Facebook's Prophet Forecast — prophesize","text":"Official documentation: https://github.com/facebook/prophet","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/quants.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cuts by quantiles — quants","title":"Calculate cuts by quantiles — quants","text":"function lets user quickly calculate cuts quantiles discretize numerical values categorical values.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/quants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cuts by quantiles — quants","text":"","code":"quants(values, splits = 10, return = \"labels\", n = 2)"},{"path":"https://laresbernardo.github.io/lares/reference/quants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cuts by quantiles — quants","text":"values Vector. Values calculate quantile cuts splits Integer. many cuts split values? return Character. Return \"summary\" \"labels\" n Integer. Determines number digits used formatting break numbers.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/quants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cuts by quantiles — quants","text":"Factor vector data.frame. Depending return input: labels factor ordered vector observation's quantile summary data.frame information quantile cut","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/quants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate cuts by quantiles — quants","text":"","code":"data(dft) # Titanic dataset quants(dft$Age, splits = 5, \"summary\") #>      percentile  cut   label #> 20%         20% 19.0 [19-19] #> 40%         40% 25.0 (19-25] #> 60%         60% 31.8 (25-32] #> 80%         80% 41.0 (32-41] #> 100%       100% 80.0 (41-80] quants(dft$Age, splits = 5, \"labels\")[1:10] #>  [1] (19,25]   (32,41]   (25,32]   (32,41]   (32,41]   <NA>      (41,80]   #>  [8] [0.42,19] (25,32]   [0.42,19] #> Levels: [0.42,19] < (19,25] < (25,32] < (32,41] < (41,80]"},{"path":"https://laresbernardo.github.io/lares/reference/queryDB.html","id":null,"dir":"Reference","previous_headings":"","what":"PostgreSQL Queries on Database (Read) — queryDB","title":"PostgreSQL Queries on Database (Read) — queryDB","text":"function lets user query PostgreSQL database. Previously called queryDummy replaced deprecated general function using parameter.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/queryDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PostgreSQL Queries on Database (Read) — queryDB","text":"","code":"queryDB(query, from, creds = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/queryDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PostgreSQL Queries on Database (Read) — queryDB","text":"query Character. SQL Query Character. Credential's user (see get_creds()) creds Character. Credential's directory (see get_creds())","code":""},{"path":"https://laresbernardo.github.io/lares/reference/queryDB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PostgreSQL Queries on Database (Read) — queryDB","text":"data.frame. Result fetching query data.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/queryGA.html","id":null,"dir":"Reference","previous_headings":"","what":"Queries on Google Analytics — queryGA","title":"Queries on Google Analytics — queryGA","text":"function lets user query Google Analytics API. documentation parameters googleAnalyticsR::google_analytics() Google Analytics' API","code":""},{"path":"https://laresbernardo.github.io/lares/reference/queryGA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Queries on Google Analytics — queryGA","text":"","code":"queryGA(   account,   creds = NA,   token_dir = NA,   metrics = \"sessions\",   dimensions = \"date\",   met_filters = NULL,   dim_filters = NULL,   start = lubridate::floor_date(Sys.Date(), \"month\"),   end = Sys.Date() )"},{"path":"https://laresbernardo.github.io/lares/reference/queryGA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Queries on Google Analytics — queryGA","text":"account Character. Personal named accounts creds Character. Credential's user (see get_creds()) token_dir Character. Credential's directory (see get_creds()) metrics Character. metrics wish bring dimensions Character. dimensions wish bring met_filters, dim_filters filter_clause_ga4 filtering metrics/dimensions. Check googleAnalyticsR::google_analytics(). start Date. Start date report end Date. End date report","code":""},{"path":"https://laresbernardo.github.io/lares/reference/queryGA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Queries on Google Analytics — queryGA","text":"data.frame API GET request tabulated results.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/quiet.html","id":null,"dir":"Reference","previous_headings":"","what":"Quiet prints and verbose noice — quiet","title":"Quiet prints and verbose noice — quiet","text":"function silences (verbose) output prints. Thanks Hadley Wickham bringing idea.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/quiet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quiet prints and verbose noice — quiet","text":"","code":"quiet(fx, quiet = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/quiet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quiet prints and verbose noice — quiet","text":"fx Function quiet quiet Quiet outputs? , skip quietness.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/quiet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quiet prints and verbose noice — quiet","text":"fx messages prints.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/read.file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Files Quickly (Auto-detected) — read.file","title":"Read Files Quickly (Auto-detected) — read.file","text":"function lets user import csv, xlsx, xls, sav files.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/read.file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Files Quickly (Auto-detected) — read.file","text":"","code":"read.file(filename, current_wd = TRUE, sheet = 1, quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/read.file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Files Quickly (Auto-detected) — read.file","text":"filename Character. File name import. current_wd Boolean. Use current working directory file's name? Use param get absolute root directory. sheet Character. Name index sheet read data file xlsx xls. quiet Boolean. Quiet summary message?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/read.file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Files Quickly (Auto-detected) — read.file","text":"List data.frame, depending filename's data.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/readGS.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Sheets Reading (API v4) — readGS","title":"Google Sheets Reading (API v4) — readGS","text":"Read data Google Sheets knowing file's title. may read single value cell data.frame cell range.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/readGS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Sheets Reading (API v4) — readGS","text":"","code":"readGS(   title,   sheet = \"Hoja 1\",   range = NULL,   drop_nas = TRUE,   json = NULL,   email = NULL,   api_key = NULL,   server = FALSE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/readGS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Sheets Reading (API v4) — readGS","text":"title Character. Title Google Drive file. Uses regular expressions may fetch patterns instead names. sheet Character. Working sheet import range Character. cell range read drop_nas Boolean. Remove columns rows contain NAs? json Character. JSON filename service auth email, api_key Character. multiple pre-authorized accounts machine, may non-interactively select one wish use email /api_key. server Boolean. Force interacting auth process? ... Additional parameters passed read_sheet().","code":""},{"path":"https://laresbernardo.github.io/lares/reference/readGS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Sheets Reading (API v4) — readGS","text":"data.frame results Google Sheets file based title, specificially sheet range requested.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/reduce_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce Dimensionality with PCA — reduce_pca","title":"Reduce Dimensionality with PCA — reduce_pca","text":"Principal component analysis (PCA) method can use reduce high-dimensional data low-dimensional space. words, accurately visualize high-dimensional datasets visualize anything 3 features. main purpose behind PCA transform datasets 3 features (high-dimensional) typically 2/3 column dataset. Despite reduction lower-dimensional space still can retain variance information original dataset.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/reduce_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce Dimensionality with PCA — reduce_pca","text":"","code":"reduce_pca(   df,   n = NULL,   ignore = NULL,   comb = c(1, 2),   quiet = FALSE,   plot = TRUE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/reduce_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce Dimensionality with PCA — reduce_pca","text":"df Dataframe n Integer. Number dimensions reduce . ignore Character vector. Names columns ignore. comb Vector. columns wish plot? Select two variables name column position. quiet Boolean. Keep quiet? , print messages. plot Boolean. Create plots? ... Additional parameters passed stats::prcomp","code":""},{"path":"https://laresbernardo.github.io/lares/reference/reduce_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce Dimensionality with PCA — reduce_pca","text":"List reduced dataframe possible plots.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/reduce_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce Dimensionality with PCA — reduce_pca","text":"","code":"Sys.unsetenv(\"LARES_FONT\") # Temporal data(\"iris\") df <- subset(iris, select = c(-Species)) df$id <- 1:nrow(df) reduce_pca(df, n = 3, ignore = \"id\") #> $pca_explained #> [1] 84.1715 11.7378  3.4503  0.6404 #>  #> $pcadf #> # A tibble: 149 × 3 #>         id    PC1     PC2 #>      <dbl>  <dbl>   <dbl> #>  1 0       -0.628 -0.108  #>  2 0.00671 -0.621  0.104  #>  3 0.0134  -0.667  0.0511 #>  4 0.0201  -0.652  0.103  #>  5 0.0268  -0.646 -0.134  #>  6 0.0336  -0.532 -0.290  #>  7 0.0403  -0.654 -0.0114 #>  8 0.0470  -0.623 -0.0572 #>  9 0.0537  -0.674  0.200  #> 10 0.0604  -0.643  0.0674 #> # … with 139 more rows #>  #> $plot_explained  #>  #> $plot  #>"},{"path":"https://laresbernardo.github.io/lares/reference/reduce_tsne.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce Dimensionality with t-SNE — reduce_tsne","title":"Reduce Dimensionality with t-SNE — reduce_tsne","text":"t-SNE takes high-dimensional data reduces low-dimensional graph (1-3 dimensions). Unlike PCA, t-SNE can reduce dimensions non-linear relationships. PCA attempts draw best fitting line distribution. T-SNE calculates similarity measure based distance points instead trying maximize variance.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/reduce_tsne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce Dimensionality with t-SNE — reduce_tsne","text":"","code":"reduce_tsne(df, n = 2, ignore = NULL, quiet = FALSE, plot = TRUE, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/reduce_tsne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce Dimensionality with t-SNE — reduce_tsne","text":"df Dataframe n Integer. Number dimensions reduce . ignore Character vector. Names columns ignore. quiet Boolean. Keep quiet? , print messages. plot Boolean. Create plots? ... Additional parameters passed Rtsne::Rtsne","code":""},{"path":"https://laresbernardo.github.io/lares/reference/reduce_tsne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce Dimensionality with t-SNE — reduce_tsne","text":"List reduced dataframe possible plots.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/reduce_tsne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce Dimensionality with t-SNE — reduce_tsne","text":"","code":"if (FALSE) { data(\"iris\") df <- subset(iris, select = c(-Species)) df$id <- 1:nrow(df) reduce_tsne(df, ignore = \"id\", max_iter = 800, perplexity = 20) }"},{"path":"https://laresbernardo.github.io/lares/reference/remove_stopwords.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove stop-words and patterns from character vector — remove_stopwords","title":"Remove stop-words and patterns from character vector — remove_stopwords","text":"Remove stop-words specific patterns character vector","code":""},{"path":"https://laresbernardo.github.io/lares/reference/remove_stopwords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove stop-words and patterns from character vector — remove_stopwords","text":"","code":"remove_stopwords(text, stop_words, exclude = NULL, sep = \" \")"},{"path":"https://laresbernardo.github.io/lares/reference/remove_stopwords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove stop-words and patterns from character vector — remove_stopwords","text":"text Character vector stop_words Character vector. Words exclude text. Example: want exclude \"\", whenever word appears excluded, letter \"\" appears word, remain. exclude Character. Pattern exclude using regex. sep Character. String separate terms.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/remove_stopwords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove stop-words and patterns from character vector — remove_stopwords","text":"Character vector removed texts.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/remove_stopwords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove stop-words and patterns from character vector — remove_stopwords","text":"","code":"x <- c(\"A brown fox jumps over a dog.\", \"Another brown dog.\") remove_stopwords(x, stop_words = c(\"dog\", \"brown\", \"a\"), exclude = \"\\\\.\") #> [1] \"fox jumps over\" \"Another\""},{"path":"https://laresbernardo.github.io/lares/reference/removenacols.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove/Drop Columns in which ALL or SOME values are NAs — removenacols","title":"Remove/Drop Columns in which ALL or SOME values are NAs — removenacols","text":"function lets user remove columns values NAs","code":""},{"path":"https://laresbernardo.github.io/lares/reference/removenacols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove/Drop Columns in which ALL or SOME values are NAs — removenacols","text":"","code":"removenacols(df, all = TRUE, ignore = NULL)"},{"path":"https://laresbernardo.github.io/lares/reference/removenacols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove/Drop Columns in which ALL or SOME values are NAs — removenacols","text":"df Data.frame Boolean. Remove columns containing NA values. set FALSE, remove columns containing least one NA. ignore Character vector. Column names ignore validation.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/removenacols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove/Drop Columns in which ALL or SOME values are NAs — removenacols","text":"data.frame removed columns.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/removenarows.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove/Drop Rows in which ALL or SOME values are NAs — removenarows","title":"Remove/Drop Rows in which ALL or SOME values are NAs — removenarows","text":"function lets user remove rows values NAs","code":""},{"path":"https://laresbernardo.github.io/lares/reference/removenarows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove/Drop Rows in which ALL or SOME values are NAs — removenarows","text":"","code":"removenarows(df, all = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/removenarows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove/Drop Rows in which ALL or SOME values are NAs — removenarows","text":"df Data.frame Boolean. Remove rows contains NA values. set FALSE, rows contains least one NA removed","code":""},{"path":"https://laresbernardo.github.io/lares/reference/removenarows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove/Drop Rows in which ALL or SOME values are NAs — removenarows","text":"data.frame removed rows.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/replaceall.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Values With — replaceall","title":"Replace Values With — replaceall","text":"function lets user replace specific values vector data.frame another value. replacing one value, order matters replaced order pass function. Factors refactored.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/replaceall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Values With — replaceall","text":"","code":"replaceall(df, original, change, which = \"all\", fixclass = TRUE, quiet = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/replaceall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Values With — replaceall","text":"df Data.frame Vector original String Vector. Original text wish replace change String Vector. Values wish replace originals Character vector. Name columns use. Leave \"\" everything fixclass Boolean. Try detect logical classes transformations (leave default classes character)? quiet Boolean. Keep quiet? (print replacements)","code":""},{"path":"https://laresbernardo.github.io/lares/reference/replaceall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Values With — replaceall","text":"data.frame replaced values based inputs.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/replaceall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Values With — replaceall","text":"","code":"df <- data.frame(   one = c(1:4, NA),   two = LETTERS[1:5],   three = rep(\"A\", 5),   four = c(NA, \"Aaa\", 123, \"B\", \"C\") ) print(df) #>   one two three four #> 1   1   A     A <NA> #> 2   2   B     A  Aaa #> 3   3   C     A  123 #> 4   4   D     A    B #> 5  NA   E     A    C  replaceall(df, \"A\", NA) #> # A tibble: 5 × 4 #>     one two   three four  #>   <int> <chr> <lgl> <chr> #> 1     1 NA    NA    NA    #> 2     2 B     NA    NA    #> 3     3 C     NA    123   #> 4     4 D     NA    B     #> 5    NA E     NA    C      replaceall(df, \"A\", \"a\") #> # A tibble: 5 × 4 #>     one two   three four  #>   <int> <chr> <chr> <chr> #> 1     1 a     a     NA    #> 2     2 B     a     aaa   #> 3     3 C     a     123   #> 4     4 D     a     B     #> 5    NA E     a     C      replaceall(df, 1, \"*\") #> # A tibble: 5 × 4 #>   one   two   three four  #>   <chr> <chr> <chr> <chr> #> 1 *     A     A     NA    #> 2 2     B     A     Aaa   #> 3 3     C     A     *23   #> 4 4     D     A     B     #> 5 NA    E     A     C      replaceall(df, NA, \"NotNA\") #> # A tibble: 5 × 4 #>   one   two   three four  #>   <chr> <chr> <chr> <chr> #> 1 1     A     A     NotNA #> 2 2     B     A     Aaa   #> 3 3     C     A     123   #> 4 4     D     A     B     #> 5 NotNA E     A     C      replaceall(df, NA, 0) #> # A tibble: 5 × 4 #>     one two   three four  #>   <int> <chr> <chr> <chr> #> 1     1 A     A     0     #> 2     2 B     A     Aaa   #> 3     3 C     A     123   #> 4     4 D     A     B     #> 5     0 E     A     C      replaceall(df, c(\"A\", \"B\"), c(\"'A'\", \"'B'\")) #> # A tibble: 5 × 4 #>     one two   three four  #>   <int> <chr> <chr> <chr> #> 1     1 'A'   'A'   NA    #> 2     2 'B'   'A'   'A'aa #> 3     3 C     'A'   123   #> 4     4 D     'A'   'B'   #> 5    NA E     'A'   C      replaceall(df, \"a\", \"*\", which = \"four\") #> # A tibble: 5 × 4 #>     one two   three four  #>   <int> <chr> <chr> <chr> #> 1     1 A     A     NA    #> 2     2 B     A     A**   #> 3     3 C     A     123   #> 4     4 D     A     B     #> 5    NA E     A     C"},{"path":"https://laresbernardo.github.io/lares/reference/replacefactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Factor Values — replacefactor","title":"Replace Factor Values — replacefactor","text":"function lets user replace levels factor vector.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/replacefactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Factor Values — replacefactor","text":"","code":"replacefactor(x, original, change)"},{"path":"https://laresbernardo.github.io/lares/reference/replacefactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Factor Values — replacefactor","text":"x Factor (Character) Vector original String Vector. Original text wish replace change String Vector. Values wish replace originals ","code":""},{"path":"https://laresbernardo.github.io/lares/reference/replacefactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Factor Values — replacefactor","text":"Factor vector transformed levels.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/replacefactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Factor Values — replacefactor","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:xts’: #>  #>     first, last #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data(dft) # Replace a single value dft <- mutate(dft, Pclass = replacefactor(Pclass, original = \"1\", change = \"First\")) levels(dft$Pclass) #> [1] \"First\" \"2\"     \"3\"     # Replace multiple values dft <- mutate(dft, Pclass = replacefactor(Pclass, c(\"2\", \"3\"), c(\"Second\", \"Third\"))) levels(dft$Pclass) #> [1] \"First\"  \"Second\" \"Third\""},{"path":"https://laresbernardo.github.io/lares/reference/rtistry_sphere.html","id":null,"dir":"Reference","previous_headings":"","what":"Generative Art: Sphere XmodY — rtistry_sphere","title":"Generative Art: Sphere XmodY — rtistry_sphere","text":"Generative Art: Sphere XmodY","code":""},{"path":"https://laresbernardo.github.io/lares/reference/rtistry_sphere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generative Art: Sphere XmodY — rtistry_sphere","text":"","code":"rtistry_sphere(eye = c(100, 0, 0), pal = \"auto\", var = 3)"},{"path":"https://laresbernardo.github.io/lares/reference/rtistry_sphere.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generative Art: Sphere XmodY — rtistry_sphere","text":"eye, pal, var Parameters change aesthetics calculations","code":""},{"path":"https://laresbernardo.github.io/lares/reference/rtistry_sphere.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generative Art: Sphere XmodY — rtistry_sphere","text":"ggplot object","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scale_x_comma.html","id":null,"dir":"Reference","previous_headings":"","what":"Axis scales format — scale_x_comma","title":"Axis scales format — scale_x_comma","text":"_comma ones set comma format axis text, _percent ones set percent format axis text, _dollar collar currency, _abbr abbreviated format. Lastly, use _formatNum customize numerical scales formatNum.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scale_x_comma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axis scales format — scale_x_comma","text":"","code":"scale_x_comma(...)  scale_y_comma(...)  scale_x_percent(...)  scale_y_percent(...)  scale_x_dollar(...)  scale_y_dollar(...)  scale_x_abbr(...)  scale_y_abbr(...)  scale_x_formatNum(   ...,   decimals = 2,   signif = NULL,   type = Sys.getenv(\"LARES_NUMFORMAT\"),   pre = \"\",   pos = \"\",   sign = FALSE,   abbr = FALSE )  scale_y_formatNum(   ...,   decimals = 2,   signif = NULL,   type = Sys.getenv(\"LARES_NUMFORMAT\"),   pre = \"\",   pos = \"\",   sign = FALSE,   abbr = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/scale_x_comma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axis scales format — scale_x_comma","text":"... Arguments passed ggplot2::continuous_scale formatNum depending function. decimals Integer. Amount decimals display. set NULL, getOption(\"digits\") used. signif Integer. Rounds values first argument specified number significant digits. type Integer. 1 International standards. 2 American Standards. Use Sys.setenv(\"LARES_NUMFORMAT\" = 2) set parameter globally. pre Character. Add string number. pos Character. Add string number. sign Boolean. Add + sign positive values. abbr Boolean. Abbreviate using num_abbr()? can use `decimals` parameter set abbr's n(-1) parameter.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scale_x_comma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axis scales format — scale_x_comma","text":"Reformatted scales ggplot2 object","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scale_x_comma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axis scales format — scale_x_comma","text":"","code":"library(ggplot2) df <- ggplot2::txhousing %>% removenarows(all = FALSE)  ggplot(df, aes(x = sales, y = volume)) +   geom_point() +   scale_x_dollar() +   scale_y_abbr()   # Use any argument from scale_x/y_continuous ggplot(df, aes(x = listings, y = log(inventory))) +   geom_point() +   scale_x_comma() +   scale_y_percent(limits = c(0, 3)) #> Warning: Removed 204 rows containing missing values (geom_point).   # Use any argument from scale_x/y_continuous AND formatNum ggplot(df, aes(x = median, y = inventory)) +   geom_point() +   scale_x_formatNum(n.breaks = 3, pre = \"@\", abbr = TRUE) +   scale_y_formatNum(position = \"right\", decimals = 0, pos = \" X\")"},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrabble: Dictionaries — scrabble_dictionary","title":"Scrabble: Dictionaries — scrabble_dictionary","text":"Download words 4 different languages: English, Spanish, German, French. Words save temp directory. auxiliary function. may want use scrabble_words directly searching highest score words!","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrabble: Dictionaries — scrabble_dictionary","text":"","code":"scrabble_dictionary(language)"},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrabble: Dictionaries — scrabble_dictionary","text":"language Character. \"en\",\"es\",\"de\",\"fr\". Set \"none\" wish skip step (use words parameter scrabble_words instead).","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrabble: Dictionaries — scrabble_dictionary","text":"data.frame words language columns.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scrabble: Dictionaries — scrabble_dictionary","text":"","code":"# \\donttest{ # For Spanish words dictionary <- scrabble_dictionary(\"es\") #> >>> Downloading 'es' words. Source: github.com/lorenbrichter/Words #> > Cache saved succesfully: lares_cache_es #> >>> Saved (636,598 words) into cache # }"},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrabble: Tiles Points — scrabble_points","title":"Scrabble: Tiles Points — scrabble_points","text":"Dataframe every letter points given language.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrabble: Tiles Points — scrabble_points","text":"","code":"scrabble_points(language)"},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrabble: Tiles Points — scrabble_points","text":"language Character. \"en\",\"es\".","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrabble: Tiles Points — scrabble_points","text":"data.frame tiles scores letter.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scrabble: Tiles Points — scrabble_points","text":"","code":"scrabble_points(\"es\") #> >>> Loaded points for 'es' #>    tiles scores #> 1      a      1 #> 2      b      3 #> 3      c      2 #> 4      d      2 #> 5      e      1 #> 6      f      4 #> 7      g      3 #> 8      h      4 #> 9      i      1 #> 10     j      8 #> 11     k     10 #> 12     l      1 #> 13     m      3 #> 14     n      1 #> 15     ñ      8 #> 16     o      1 #> 17     p      3 #> 18     q      5 #> 19     r      1 #> 20     s      1 #> 21     t      1 #> 22     u      2 #> 23     v      4 #> 24     w     10 #> 25     x     10 #> 26     y      5 #> 27     z     10 scrabble_points(\"en\") #> >>> Loaded points for 'en' #>    tiles scores #> 1      a      1 #> 2      b      4 #> 3      c      4 #> 4      d      2 #> 5      e      1 #> 6      f      4 #> 7      g      3 #> 8      h      3 #> 9      i      1 #> 10     j     10 #> 11     k      5 #> 12     l      2 #> 13     m      4 #> 14     n      2 #> 15     o      1 #> 16     p      4 #> 17     q     10 #> 18     r      1 #> 19     s      1 #> 20     t      1 #> 21     u      2 #> 22     v      5 #> 23     w      4 #> 24     x      8 #> 25     y      3 #> 26     z     10 # Not yet available scrabble_points(\"fr\") #> We do not have the points for this language yet!"},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrabble: Word Scores — scrabble_score","title":"Scrabble: Word Scores — scrabble_score","text":"Get score word list words. may set manually depending rules languages playing . Check examples Spanish English values played Words Friends.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrabble: Word Scores — scrabble_score","text":"","code":"scrabble_score(words, scores)"},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrabble: Word Scores — scrabble_score","text":"words Character vector. Words score scores Dataframe. Must contain two columns: \"tiles\" every letter alphabet \"scores\" letter's score.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrabble: Word Scores — scrabble_score","text":"data.frame word, scores, length values word.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scrabble: Word Scores — scrabble_score","text":"","code":"# \\donttest{ # For Spanish words (default) es_scores <- scrabble_points(\"es\") #> >>> Loaded points for 'es' # Custom scores for each letter cu_scores <- data.frame(   tiles = tolower(LETTERS),   scores = c(1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 5, 2, 4, 2, 1, 4, 10, 1, 1, 1, 2, 5, 4, 8, 3, 10) )  # Score values for each set of rules words <- c(\"Bernardo\", \"Whiskey\", \"R is great\") scrabble_score(words, es_scores) #>         word scores length #> 1    Whiskey     22      7 #> 2 R is great      9     10 #> 3   Bernardo      8      8 scrabble_score(words, cu_scores) #>         word scores length #> 1    Whiskey     16      7 #> 2   Bernardo      8      8 #> 3 R is great      7     10 # }"},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_words.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrabble: Highest score words finder — scrabble_words","title":"Scrabble: Highest score words finder — scrabble_words","text":"Find highest score words given set letters, rules, language win Scrabble! just find best place post tiles.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrabble: Highest score words finder — scrabble_words","text":"","code":"scrabble_words(   tiles = \"\",   free = 0,   force_start = \"\",   force_end = \"\",   force_str = \"\",   force_exclude = \"\",   force_n = 0,   force_max = 0,   language = Sys.getenv(\"LARES_LANG\"),   scores = language,   words = NA,   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_words.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrabble: Highest score words finder — scrabble_words","text":"tiles Character. letters wish consider. free Integer. many free blank tiles ? force_start, force_end Character. Force words start end pattern letters position. Examples: \"S\" \"\" \"__S_O\"... string contains tiles specified tiles, automatically included. force_str Character vector. Force words contain strings. string contains tiles specified tiles, automatically included. force_exclude Character vector. Exclude words containing tiles. useful Scrabble relevant Wordle. force_n, force_max Integer. Force words n max n characters long. Leave 0 ignore parameter. scores, language Character. \"en\",\"es\",\"de\",\"fr\". scores languages, must data.frame contains two columns: \"tiles\" every letter alphabet \"scores\" letter's score. wish overwrite complement dictionaries words can set \"none\" /use words parameter. might also want set parameter globally Sys.setenv(\"LARES_LANG\" = \"en\") forget ! words Character vector. Use wish manually add words. quiet Boolean. print words searched.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_words.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrabble: Highest score words finder — scrabble_words","text":"data.frame matching words found, sorted higher points.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/scrabble_words.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scrabble: Highest score words finder — scrabble_words","text":"","code":"# \\donttest{ # Automatic use of languages and scores Sys.setenv(\"LARES_LANG\" = \"es\") scrabble_words(   tiles = \"hola\",   free = 2,   force_start = \"h\",   force_n = 4,   force_str = \"_o_a\" ) #> >>> Loaded points for 'es' #> >>> Setting up tiles... #> Tiles: 'h', 'o', 'l', 'a', '_', '_' #> > Cache loaded succesfully: lares_cache_es #> >>> Loaded 636,598 'es' words #> # A tibble: 6 × 3 #>   word  scores length #>   <chr>  <int>  <int> #> 1 hoza      16      4 #> 2 hoja      14      4 #> 3 hoya      11      4 #> 4 hopa       9      4 #> 5 hola       7      4 #> 6 hora       7      4  wordle <- c(\"board\", \"tempo\", \"shoes\", \"hoard\") scrabble_words(   language = NULL,   words = wordle,   force_n = 5,   force_str = \"O_R\" ) #> >>> Skipping points schema... #> >>> Setting up tiles... #> o and r were not in your tiles: now included #> Tiles: 'o', 'r', '_', '_', '_' #> >>> Added 4 custom words  #> # A tibble: 2 × 2 #>   word  length #>   <chr>  <int> #> 1 board      5 #> 2 hoard      5  # Words considered for a language (you can custom it too!) es_words <- scrabble_dictionary(\"es\") #> > Cache loaded succesfully: lares_cache_es #> >>> Loaded 636,598 'es' words # }"},{"path":"https://laresbernardo.github.io/lares/reference/sentimentBreakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Sentiment Breakdown on Text — sentimentBreakdown","title":"Sentiment Breakdown on Text — sentimentBreakdown","text":"function searches relevant words given text adds sentiments labels (joy, anticipation, surprise, positive, trust, anger, sadness, fear, negative, disgust) , using NRC. , makes summary words plot results.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/sentimentBreakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sentiment Breakdown on Text — sentimentBreakdown","text":"","code":"sentimentBreakdown(   text,   lang = \"spanish\",   exclude = c(\"maduro\", \"que\"),   append_file = NA,   append_words = NA,   plot = TRUE,   subtitle = NA )"},{"path":"https://laresbernardo.github.io/lares/reference/sentimentBreakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sentiment Breakdown on Text — sentimentBreakdown","text":"text Character vector lang Character. Language text (used stop words) exclude Character vector. word wish exclude? append_file Character. Add dictionary append. file must contain least two columns, first words second sentiment (consider sentiments description). append_words Dataframe. append_file appending data frame word sentiment directly plot Boolean. Plot results summary? subtitle Character. Add subtitle plot","code":""},{"path":"https://laresbernardo.github.io/lares/reference/sentimentBreakdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sentiment Breakdown on Text — sentimentBreakdown","text":"List. Contains data.frame words sentiments, summary plot.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/shap_var.html","id":null,"dir":"Reference","previous_headings":"","what":"SHAP-based dependence plots for categorical/numerical features (PDP) — shap_var","title":"SHAP-based dependence plots for categorical/numerical features (PDP) — shap_var","text":"h2o_shap object, plot dependence plot categorical numerical feature.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/shap_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SHAP-based dependence plots for categorical/numerical features (PDP) — shap_var","text":"","code":"shap_var(x, var, keep_outliers = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/shap_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SHAP-based dependence plots for categorical/numerical features (PDP) — shap_var","text":"x h2o_shap object var Variable name keep_outliers Boolean. Outliers detected z-score 3sd may suppress kept plot. Keep ?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/shap_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SHAP-based dependence plots for categorical/numerical features (PDP) — shap_var","text":"ggplot2 objct shap values plotted","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/shap_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SHAP-based dependence plots for categorical/numerical features (PDP) — shap_var","text":"","code":"if (FALSE) { # Train a h2o_automl model model <- h2o_automl(dft, Survived,   max_models = 1, target = TRUE,   ignore = c(\"Ticket\", \"Cabin\", \"PassengerId\"),   quiet = TRUE )  # Calculate SHAP values SHAP_values <- h2o_shap(model) # Equivalent to: # SHAP_values <- h2o_shap( #  model = model$model, #  test = model$datasets$test, #  scores = model$scores_test$scores)  # Check SHAP results head(SHAP_values)  # You must have \"ggbeeswarm\" library to use this auxiliary function: # Plot SHAP values (feature importance) plot(SHAP_values)  # Plot some of the variables (categorical) shap_var(SHAP_values, Pclass)  # Plot some of the variables (numerical) shap_var(SHAP_values, Fare) }"},{"path":"https://laresbernardo.github.io/lares/reference/slackSend.html","id":null,"dir":"Reference","previous_headings":"","what":"Send Slack Message (Webhook) — slackSend","title":"Send Slack Message (Webhook) — slackSend","text":"function send Slack message using Webhooks.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/slackSend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send Slack Message (Webhook) — slackSend","text":"","code":"slackSend(text, title = \"\", pretext = \"\", hook = NA, creds = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/slackSend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send Slack Message (Webhook) — slackSend","text":"text, title, pretext Character. Content Slack message. hook Character. Web hook URL. Ths value overwritten creds correctly used. creds Character. Credential's dir (see get_creds()). Set hook URL \"slack\" list YML file. use first value.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/slackSend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send Slack Message (Webhook) — slackSend","text":"Invisible POST response","code":""},{"path":"https://laresbernardo.github.io/lares/reference/slackSend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Send Slack Message (Webhook) — slackSend","text":"help, can follow Sending messages using Incoming Webhooks original documentarion.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/slackSend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send Slack Message (Webhook) — slackSend","text":"","code":"if (FALSE) { slackSend(text = \"This is a message\", title = \"TEST\", pretext = Sys.info()[\"user\"]) }"},{"path":"https://laresbernardo.github.io/lares/reference/splot_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Portfolio Plots: Daily Change — splot_change","title":"Portfolio Plots: Daily Change — splot_change","text":"function plots stock's change history, since inception, weighted attributions absolute values.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portfolio Plots: Daily Change — splot_change","text":"","code":"splot_change(   p,   s,   rel = TRUE,   group = FALSE,   n_days = 365,   keep_old = FALSE,   save = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/splot_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portfolio Plots: Daily Change — splot_change","text":"p Dataframe. Result daily_portfolio() s Dataframe. Result daily_stocks() rel Boolean. Relative delta values (weighted portfolio)? , absolute monetary delta values. group Boolean. Group stocks stocks type? n_days Integer. many days back want see? sold entirely? keep_old Boolean. Include sold tickers even though currently portfolio? save Boolean. Save plot local file?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portfolio Plots: Daily Change — splot_change","text":"ggplot object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/splot_divs.html","id":null,"dir":"Reference","previous_headings":"","what":"Portfolio Plots: Dividends per Year and Quarter — splot_divs","title":"Portfolio Plots: Dividends per Year and Quarter — splot_divs","text":"function plots portfolio's historical dividends incomes grouped quarter year.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_divs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portfolio Plots: Dividends per Year and Quarter — splot_divs","text":"","code":"splot_divs(p, type = 1)"},{"path":"https://laresbernardo.github.io/lares/reference/splot_divs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portfolio Plots: Dividends per Year and Quarter — splot_divs","text":"p Dataframe. Result daily_portfolio() type Integer. Typo plot. 1 incomes.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_divs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portfolio Plots: Dividends per Year and Quarter — splot_divs","text":"ggplot object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/splot_etf.html","id":null,"dir":"Reference","previous_headings":"","what":"Portfolio's Sector Distribution (ETFs) — splot_etf","title":"Portfolio's Sector Distribution (ETFs) — splot_etf","text":"function lets user plot portfolio's distribution, specifically ETF's sectors","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_etf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portfolio's Sector Distribution (ETFs) — splot_etf","text":"","code":"splot_etf(s, keep_all = FALSE, cache = TRUE, save = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/splot_etf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portfolio's Sector Distribution (ETFs) — splot_etf","text":"s Dataframe. Result daily_stocks() keep_all Boolean. Keep \"Known / ETF\"? cache Boolean. Use daily cache available? save Boolean. Save plot local file?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_etf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portfolio's Sector Distribution (ETFs) — splot_etf","text":"ggplot2 object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/splot_growth.html","id":null,"dir":"Reference","previous_headings":"","what":"Portfolio Plots: Growth (Cash + Invested) — splot_growth","title":"Portfolio Plots: Growth (Cash + Invested) — splot_growth","text":"function plots portfolio's growth, cash investment, since inception.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_growth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portfolio Plots: Growth (Cash + Invested) — splot_growth","text":"","code":"splot_growth(p, save = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/splot_growth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portfolio Plots: Growth (Cash + Invested) — splot_growth","text":"p Dataframe. Result daily_portfolio() save Boolean. Save plot local file?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_growth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portfolio Plots: Growth (Cash + Invested) — splot_growth","text":"ggplot object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/splot_roi.html","id":null,"dir":"Reference","previous_headings":"","what":"Portfolio Plots: Daily ROI — splot_roi","title":"Portfolio Plots: Daily ROI — splot_roi","text":"function plots portfolio's historical ROI since inception since last n days, 2 moving average lines.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_roi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portfolio Plots: Daily ROI — splot_roi","text":"","code":"splot_roi(p, n_days = 365, historical = TRUE, ma = c(12, 50), save = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/splot_roi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portfolio Plots: Daily ROI — splot_roi","text":"p Dataframe. Result daily_portfolio() n_days Integer. many days back want see? historical Boolean. Historical ROI metric? , ROI calculated locally n_days parameter ma Numeric Vector. Select 2 values moving averages. Set NA turn metric save Boolean. Save plot local file?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_roi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portfolio Plots: Daily ROI — splot_roi","text":"ggplot object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/splot_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Portfolio Plots: Total Summary — splot_summary","title":"Portfolio Plots: Total Summary — splot_summary","text":"function plots summary whole portfolio, showing much invested, much ticker changed, etc.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portfolio Plots: Total Summary — splot_summary","text":"","code":"splot_summary(p, s, save = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/splot_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portfolio Plots: Total Summary — splot_summary","text":"p Dataframe. Result daily_portfolio() s Dataframe. Result daily_stocks() save Boolean. Save plot local file?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portfolio Plots: Total Summary — splot_summary","text":"ggplot object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/splot_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Portfolio Plots: Types of Stocks — splot_types","title":"Portfolio Plots: Types of Stocks — splot_types","text":"function lets user plot types categories tickers.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portfolio Plots: Types of Stocks — splot_types","text":"","code":"splot_types(s, save = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/splot_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portfolio Plots: Types of Stocks — splot_types","text":"s Dataframe. Result daily_stocks() save Boolean. Save plot local file?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/splot_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portfolio Plots: Types of Stocks — splot_types","text":"ggplot object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/spread_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Spread list column into new columns — spread_list","title":"Spread list column into new columns — spread_list","text":"Spread existing list column new columns data.frame. Note every element every observation must name function work. Original column automatically suppressed can set replace argument avoid .","code":""},{"path":"https://laresbernardo.github.io/lares/reference/spread_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spread list column into new columns — spread_list","text":"","code":"spread_list(df, col, str = NULL, replace = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/spread_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spread list column into new columns — spread_list","text":"df Dataframe col Variable name. str Character. Start column names . set NULL, original name column used. replace Boolean. Replace original values (delete column)","code":""},{"path":"https://laresbernardo.github.io/lares/reference/spread_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spread list column into new columns — spread_list","text":"data.frame. Result un-nesting named un-named list columns.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/spread_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spread list column into new columns — spread_list","text":"","code":"df <- dplyr::starwars # Un-named list columns spread_list(df, films, replace = FALSE) %>%   dplyr::select(name, dplyr::starts_with(\"films\")) %>%   head(8) #> # A tibble: 8 × 9 #>   name               films  `films_A New Hope` `films_Attack …` `films_Return …` #>   <chr>              <list> <lgl>              <lgl>            <lgl>            #> 1 Luke Skywalker     <chr>  TRUE               FALSE            TRUE             #> 2 C-3PO              <chr>  TRUE               TRUE             TRUE             #> 3 R2-D2              <chr>  TRUE               TRUE             TRUE             #> 4 Darth Vader        <chr>  TRUE               FALSE            TRUE             #> 5 Leia Organa        <chr>  TRUE               FALSE            TRUE             #> 6 Owen Lars          <chr>  TRUE               TRUE             FALSE            #> 7 Beru Whitesun lars <chr>  TRUE               TRUE             FALSE            #> 8 R5-D4              <chr>  TRUE               FALSE            FALSE            #> # … with 4 more variables: `films_Revenge of the Sith` <lgl>, #> #   `films_The Empire Strikes Back` <lgl>, `films_The Force Awakens` <lgl>, #> #   `films_The Phantom Menace` <lgl> # Named (and un-nammed) list columns df <- dplyr::tibble(id = 1:3, platform = list(   list(\"fb\" = 1, \"ig\" = 2),   list(\"fb\" = 3),   list() )) spread_list(df, platform, str = \"ptf_\") #> # A tibble: 3 × 3 #>      id ptf_fb ptf_ig #>   <int>  <dbl>  <dbl> #> 1     1      1      2 #> 2     2      3      0 #> 3     3     NA     NA"},{"path":"https://laresbernardo.github.io/lares/reference/statusbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Progressive Status Bar (Loading) — statusbar","title":"Progressive Status Bar (Loading) — statusbar","text":"function lets user view progressbar '' loop.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/statusbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progressive Status Bar (Loading) — statusbar","text":"","code":"statusbar(   run = 1,   max.run = 100,   label = run,   msg = \"\",   type = Sys.getenv(\"LARES_STATUSBAR\"),   start_time = NA,   multiples = 1,   alarm = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/statusbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progressive Status Bar (Loading) — statusbar","text":"run Iterator. loop integer current loop number. Start 1 preferibly max.run Number. Maximum number loops label String. additionaly information printed end line. default run. msg Character. Finish message. type Character. Loading type style: equal, domino start_time POSIXct. Start time consider. NA, first iteration starts set start time. Useful first iteration showed done started seconds/minutes ago. multiples Integer. print multiples N (avoid) wasting resources fast lots iterations. alarm Boolean. Ping (sound) done. Requires beepr.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/statusbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Progressive Status Bar (Loading) — statusbar","text":"return value, called side effects.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/statusbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Progressive Status Bar (Loading) — statusbar","text":"","code":"for (i in 1:9) {   statusbar(i, 9, multiples = 2)   Sys.sleep(0.3) } #>   00:00:00 [▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░] 22.2% | 2                        00:00:01 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░] 44.4% | 4                        00:00:02 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░] 66.7% | 6                        00:00:02 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░] 88.9% | 8                        00:00:03 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓] 100% | 9"},{"path":"https://laresbernardo.github.io/lares/reference/stocks_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Personal Portfolio's Data — stocks_file","title":"Get Personal Portfolio's Data — stocks_file","text":"function lets user download personal Excel Portfolio's data, locally Dropbox.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/stocks_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Personal Portfolio's Data — stocks_file","text":"","code":"stocks_file(   file = NA,   creds = NA,   auto = TRUE,   sheets = c(\"Portafolio\", \"Fondos\", \"Transacciones\"),   keep_old = TRUE,   cache = TRUE,   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/stocks_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Personal Portfolio's Data — stocks_file","text":"file Character. Import Excel file, local URL. creds Character. Dropbox's credentials (see get_creds()) auto Boolean. Automatically use local personal file? might want set .Renviron LARES_PORTFOLIO=~/dir///file.xlsx can leave parameters NA use every time. sheets Character Vector. Names sheet containing Portfolio summary, Cash, Transactions information keep_old Boolean. Include sold tickers even though currently portfolio? cache Boolean. Use daily cache available? quiet Boolean. Keep quiet? , informative messages printed.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/stocks_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Personal Portfolio's Data — stocks_file","text":"List portfolio, transactions, cash data.frames.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/stocks_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Personal Portfolio's Data — stocks_file","text":"","code":"if (FALSE) { # Load lares dummy portfolio XLSX file <- system.file(\"inst/docs\", \"dummyPortfolio.xlsx\", package = \"lares\") df <- stocks_file(   file = file,   sheets = c(\"Portafolio\", \"Fondos\", \"Transacciones\"),   keep_old = FALSE ) }"},{"path":"https://laresbernardo.github.io/lares/reference/stocks_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Stocks Historical Data — stocks_hist","title":"Download Stocks Historical Data — stocks_hist","text":"function lets user download stocks historical data","code":""},{"path":"https://laresbernardo.github.io/lares/reference/stocks_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Stocks Historical Data — stocks_hist","text":"","code":"stocks_hist(   symbols = c(\"VTI\", \"TSLA\"),   from = Sys.Date() - 365,   to = Sys.Date(),   today = TRUE,   tax = 15,   parg = FALSE,   cache = TRUE,   quiet = FALSE )  # S3 method for stocks_hist plot(x, type = 1, ...)"},{"path":"https://laresbernardo.github.io/lares/reference/stocks_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Stocks Historical Data — stocks_hist","text":"symbols Character Vector. List symbols download historical data , Date. Dates range. set, 1 year downloaded. use 4 days -written. today Boolean. wish add today's live quote? happen value today's date tax Numeric. much [0-99] dividends gone taxes? parg Boolean. Personal argument. Used personalize stuff, case, taxes changed B given date (hard-coded) cache Boolean. Use daily cache available? quiet Boolean. Keep quiet? , informative messages printed. x stocks_hist object type Integer. Select type plot. ... Additional parameters","code":""},{"path":"https://laresbernardo.github.io/lares/reference/stocks_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Stocks Historical Data — stocks_hist","text":"data.frame Date Symbol closing quote value.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/stocks_hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Stocks Historical Data — stocks_hist","text":"","code":"# \\donttest{ df <- stocks_hist(symbols = c(\"VTI\", \"FB\", \"FIW\"), from = Sys.Date() - 180) #>   00:00:00 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░] 33.3% | VTI since 2021-08-19      00:00:00 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░] 66.7% | FB since 2021-08-19      00:00:01 [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓] 100% | FIW since 2021-08-19      print(head(df)) #> # A tibble: 6 × 6 #>   Date       Symbol Value   Div DivTaxP DivReal #>   <date>     <chr>  <dbl> <dbl>   <dbl>   <dbl> #> 1 2022-02-15 VTI    226.      0       0       0 #> 2 2022-02-15 FB     217.      0       0       0 #> 3 2022-02-15 FIW     82.3     0       0       0 #> 4 2022-02-14 VTI    222.      0       0       0 #> 5 2022-02-14 FB     218.      0       0       0 #> 6 2022-02-14 FIW     81.1     0       0       0 plot(df)  # }"},{"path":"https://laresbernardo.github.io/lares/reference/stocks_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Portfolio's Calculations and Plots — stocks_obj","title":"Portfolio's Calculations and Plots — stocks_obj","text":"function lets user create portfolio's calculations plots study.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/stocks_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portfolio's Calculations and Plots — stocks_obj","text":"","code":"stocks_obj(   data = stocks_file(),   cash_fix = 0,   tax = 30,   sectors = FALSE,   parg = FALSE,   window = c(\"1M\", \"YTD\", \"1Y\", \"MAX\"),   cache = TRUE,   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/stocks_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portfolio's Calculations and Plots — stocks_obj","text":"data List. Containing following dataframes: portfolio, transactions, cash. follow original xlsx format cash_fix Numeric. , reason, need fix cash amount reports, set amount tax Numeric. much [0-99] dividends gone taxes? sectors Boolean. Return sectors segmentation ETFs? parg Boolean. Personal argument. Used personalize stuff, case, taxes changed B given date (hard-coded) window Character. Choose : \"1W\", \"1M\", \"6M\", \"1Y\", \"YTD\", \"5Y\", \"MAX\" cache Boolean. Use daily cache available? quiet Boolean. Keep quiet? , informative messages printed.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/stocks_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portfolio's Calculations and Plots — stocks_obj","text":"List. Aggregated results plots.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/stocks_quote.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Stocks Current Data — stocks_quote","title":"Download Stocks Current Data — stocks_quote","text":"function lets user download stocks live data.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/stocks_quote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Stocks Current Data — stocks_quote","text":"","code":"stocks_quote(ticks)"},{"path":"https://laresbernardo.github.io/lares/reference/stocks_quote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Stocks Current Data — stocks_quote","text":"ticks Character Vector. Symbols/Tickers quote real time.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/stocks_quote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Stocks Current Data — stocks_quote","text":"data.frame Symbol, Type stock, Quote time, current value, Daily Change, Market, Symbol Name.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/stocks_quote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Stocks Current Data — stocks_quote","text":"","code":"# \\donttest{ # Multiple quotes at the same time stocks_quote(c(\"VTI\", \"VOO\", \"TSLA\")) #>   Symbol   Type           QuoteTime    Value DailyChange    Market #> 1    VTI    ETF 2022-02-15 17:05:20 225.5750    3.455002 us_market #> 2    VOO    ETF 2022-02-15 17:05:14 409.5900    5.970001 us_market #> 3   TSLA EQUITY 2022-02-15 17:05:20 915.3899   39.629883 us_market #>                                          SymbolName #> 1 Vanguard Total Stock Market Index Fund ETF Shares #> 2                              Vanguard S&P 500 ETF #> 3                                       Tesla, Inc. # }"},{"path":"https://laresbernardo.github.io/lares/reference/stocks_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Portfolio's Full Report and Email — stocks_report","title":"Portfolio's Full Report and Email — stocks_report","text":"function lets user create portfolio's full report plots send email HTML report attached","code":""},{"path":"https://laresbernardo.github.io/lares/reference/stocks_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Portfolio's Full Report and Email — stocks_report","text":"","code":"stocks_report(   data = NA,   keep_old = TRUE,   dir = NA,   mail = FALSE,   attachment = TRUE,   to = \"laresbernardo@gmail.com\",   sectors = FALSE,   keep = FALSE,   creds = NA,   cache = TRUE )"},{"path":"https://laresbernardo.github.io/lares/reference/stocks_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Portfolio's Full Report and Email — stocks_report","text":"data Character. stocks_obj() output. NA, automatic parameters stocks_file() defaults used. keep_old Boolean. Include sold tickers even though currently portfolio? dir Character. Directory HTML report output. set NA, current working directory used. mail sent, file erased mail Boolean. want send email report attached? , HTML file created dir attachment Boolean. Create add report attachment mail=TRUE? , report rendered tabulated summaries included email's body. Character. Email send report sectors Boolean. Return sectors segmentation ETFs? keep Boolean. Keep HTML file sent email? creds Character. Credential's user (see get_creds()) sending mail Dropbox interaction. cache Boolean. Use daily cache available?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/stocks_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Portfolio's Full Report and Email — stocks_report","text":"Invisible list. Aggregated results plots.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/stocks_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Portfolio's Full Report and Email — stocks_report","text":"","code":"if (FALSE) { list <- stocks_obj() stocks_report(list, dir = \"~/Desktop\") }"},{"path":"https://laresbernardo.github.io/lares/reference/sudoku_solver.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve Sudoku Puzzles — sudoku_solver","title":"Solve Sudoku Puzzles — sudoku_solver","text":"Solve Sudoku puzzle, empty values represented 0s matrix object.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/sudoku_solver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve Sudoku Puzzles — sudoku_solver","text":"","code":"sudoku_solver(board, needed_cells = NULL, index = 1, quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/sudoku_solver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve Sudoku Puzzles — sudoku_solver","text":"board Matrix. 9x9 matrix vector length 81, digits 0 9. needed_cells, index Auxiliary parameters auto-iterate using fx. quiet Boolean. Keep quiet? , plot results.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/sudoku_solver.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve Sudoku Puzzles — sudoku_solver","text":"Logical output answering input board can solved. actual solved solution created object named solvedin .GlobalEnv.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/sudoku_solver.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve Sudoku Puzzles — sudoku_solver","text":"","code":"# \\donttest{ # board <- c(0,0,0,0,0,6,000, #            0,9,5,7,0,0,3,0,0, #            4,0,0,0,9,2,0,0,5, #            7,6,4,0,0,0,0,0,3, #            0,0,0,0,0,0,0,0,0, #            2,0,0,0,0,0,9,7,1, #            5,0,0,2,1,0,0,0,9, #            0,0,7,0,0,5,4,8,0, #            0,0,0,8,0,0,0,0,0) # sudoku_solver(board)  # Trivial input (everything) trivial <- matrix(rep(0, 81), byrow = TRUE, ncol = 9) trivial #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    0    0    0    0    0    0    0    0    0 #>  [2,]    0    0    0    0    0    0    0    0    0 #>  [3,]    0    0    0    0    0    0    0    0    0 #>  [4,]    0    0    0    0    0    0    0    0    0 #>  [5,]    0    0    0    0    0    0    0    0    0 #>  [6,]    0    0    0    0    0    0    0    0    0 #>  [7,]    0    0    0    0    0    0    0    0    0 #>  [8,]    0    0    0    0    0    0    0    0    0 #>  [9,]    0    0    0    0    0    0    0    0    0 sudoku_solver(trivial) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    1    4    7    2    3    8    5    6    9 #>  [2,]    2    5    8    1    6    9    3    4    7 #>  [3,]    3    6    9    4    5    7    1    2    8 #>  [4,]    4    7    1    3    8    2    6    9    5 #>  [5,]    5    8    2    6    9    1    4    7    3 #>  [6,]    6    9    3    5    7    4    2    8    1 #>  [7,]    7    1    4    8    2    3    9    5    6 #>  [8,]    8    2    5    9    1    6    7    3    4 #>  [9,]    9    3    6    7    4    5    8    1    2 #> [1] TRUE  # Wrong / Impossible to solve input imp <- matrix(c(rep(1, 72), rep(0, 9)), byrow = TRUE, ncol = 9) imp #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #>  [1,]    1    1    1    1    1    1    1    1    1 #>  [2,]    1    1    1    1    1    1    1    1    1 #>  [3,]    1    1    1    1    1    1    1    1    1 #>  [4,]    1    1    1    1    1    1    1    1    1 #>  [5,]    1    1    1    1    1    1    1    1    1 #>  [6,]    1    1    1    1    1    1    1    1    1 #>  [7,]    1    1    1    1    1    1    1    1    1 #>  [8,]    1    1    1    1    1    1    1    1    1 #>  [9,]    0    0    0    0    0    0    0    0    0 sudoku_solver(imp) #> [1] FALSE # }"},{"path":"https://laresbernardo.github.io/lares/reference/target_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Target Value in Target Variable — target_set","title":"Set Target Value in Target Variable — target_set","text":"function detects forces target value predicting categorical binary model. auxiliary function.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/target_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Target Value in Target Variable — target_set","text":"","code":"target_set(tag, score, target = \"auto\", quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/target_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Target Value in Target Variable — target_set","text":"tag Vector. Real known label score Vector. Predicted value model's result target Value. target positive value? set 'auto', target largest mean(score) selected. Change value overwrite. used binary categorical model. quiet Boolean. show message auto target?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/target_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Target Value in Target Variable — target_set","text":"List. Contains original data.frame df target variable.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/textCloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Wordcloud Plot — textCloud","title":"Wordcloud Plot — textCloud","text":"Study distribution target variable vs another variable. function quite similar funModeling's corrplot function.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/textCloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wordcloud Plot — textCloud","text":"","code":"textCloud(   text,   lang = \"english\",   exclude = NULL,   seed = 0,   keep_spaces = FALSE,   min = 2,   pal = NA,   print = TRUE )"},{"path":"https://laresbernardo.github.io/lares/reference/textCloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wordcloud Plot — textCloud","text":"text Character vector lang Character. Language text (used stop words) exclude Character vector. word wish exclude? seed Numeric. Seed re-producible plots keep_spaces Boolean. wish keep spaces line keep unique compount words, separated spaces, set TRUE. example, 'LA ALAMEDA' set 'LA_ALAMEDA' treated single word. min Integer. Words less frequency plotted pal Character vector. colours wish use print Boolean. Plot results textcloud?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/textCloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wordcloud Plot — textCloud","text":"wordcloud plot object","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/textFeats.html","id":null,"dir":"Reference","previous_headings":"","what":"Create features out of text — textFeats","title":"Create features out of text — textFeats","text":"function creates data.frame features based text vector","code":""},{"path":"https://laresbernardo.github.io/lares/reference/textFeats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create features out of text — textFeats","text":"","code":"textFeats(text, auto = TRUE, contains = NA, prc = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/textFeats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create features out of text — textFeats","text":"text Character vector auto Boolean. Auto create useful parameters? contains Character vector. columns wish add contains (counter) string validator? prc Boolean. Also add percentage column compared length?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/textFeats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create features out of text — textFeats","text":"data.frame additional features based text.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/textFeats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create features out of text — textFeats","text":"","code":"textFeats(\"Bernardo Lares\") #> # A tibble: 1 × 12 #>   text     length  ncap  nvoc nexcl nquest  nats npunct  ndig nword nsymb nsmile #>   <chr>     <int> <int> <int> <int>  <int> <int>  <int> <int> <dbl> <int>  <int> #> 1 Bernard…     14     2     5     0      0     0      0     0     2     0      0 textFeats(\"Bernardo Lares 123!\", prc = TRUE) #> # A tibble: 1 × 23 #>   text     length  ncap  nvoc nexcl nquest  nats npunct  ndig nword nsymb nsmile #>   <chr>     <int> <int> <int> <int>  <int> <int>  <int> <int> <dbl> <int>  <int> #> 1 Bernard…     19     2     5     1      0     0      1     3     3     0      0 #> # … with 11 more variables: length_pct <dbl>, ncap_pct <dbl>, nvoc_pct <dbl>, #> #   nexcl_pct <dbl>, nquest_pct <dbl>, nats_pct <dbl>, npunct_pct <dbl>, #> #   ndig_pct <dbl>, nword_pct <dbl>, nsymb_pct <dbl>, nsmile_pct <dbl> textFeats(\"I'm 100% Lares...\", contains = c(\"Lares\", \"lares\")) #> # A tibble: 1 × 14 #>   text     length  ncap  nvoc nexcl nquest  nats npunct  ndig nword nsymb nsmile #>   <chr>     <int> <int> <int> <int>  <int> <int>  <int> <int> <dbl> <int>  <int> #> 1 I'm 100…     17     2     3     0      0     0      5     3     3     1      0 #> # … with 2 more variables: Lares <int>, lares <int> textFeats(c(\"GREAT library!!\", \"Have you tried this 2?\", \"Happy faces :D :-)\")) #> # A tibble: 3 × 12 #>   text     length  ncap  nvoc nexcl nquest  nats npunct  ndig nword nsymb nsmile #>   <chr>     <int> <int> <int> <int>  <int> <int>  <int> <int> <dbl> <int>  <int> #> 1 GREAT l…     15     5     4     2      0     0      2     0     2     0      0 #> 2 Have yo…     22     1     7     0      1     0      1     1     5     0      0 #> 3 Happy f…     18     2     3     0      0     0      4     0     4     0      2"},{"path":"https://laresbernardo.github.io/lares/reference/textTokenizer.html","id":null,"dir":"Reference","previous_headings":"","what":"Tokenize Vectors into Words — textTokenizer","title":"Tokenize Vectors into Words — textTokenizer","text":"function transforms texts words, calculate frequencies, supress stop words given language.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/textTokenizer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tokenize Vectors into Words — textTokenizer","text":"","code":"textTokenizer(   text,   exclude = NULL,   lang = NULL,   min_word_freq = 5,   min_word_len = 2,   keep_spaces = FALSE,   lowercase = TRUE,   remove_numbers = TRUE,   remove_punct = TRUE,   remove_lettt = TRUE,   laughs = TRUE,   utf = TRUE,   df = FALSE,   h2o = FALSE,   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/textTokenizer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tokenize Vectors into Words — textTokenizer","text":"text Character vector. Sentences texts wish tokenize. exclude Character vector. words wish exclude? lang Character. Language text (used stop words). Example: \"spanish\" \"english\". Set NA ignore. min_word_freq Integer. discard words appear less <int> times. Defaults 2. Set NA ignore. min_word_len Integer. discard words less <int> characters. Defaults 5. Set NA ignore. keep_spaces Boolean. wish keep spaces line keep unique compound words, separated spaces, set TRUE. example, 'one two' set 'one_two' treated single word. lowercase, remove_numbers, remove_punct Boolean. remove_lettt Boolean. Repeated letters (3 consecutive). laughs Boolean. Try unify laughs texts. utf Boolean. Transform characters UTF (accents crazy symbols) df Boolean. Return dataframe one-hot-encoding kind results? word column returns word contained. h2o Boolean. Return H2OFrame? quiet Boolean. Keep quiet? , print messages","code":""},{"path":"https://laresbernardo.github.io/lares/reference/textTokenizer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tokenize Vectors into Words — textTokenizer","text":"data.frame. Tokenized words counters.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/theme_lares.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for ggplot2 (lares) — theme_lares","title":"Theme for ggplot2 (lares) — theme_lares","text":"Based hrbrthemes' theme_ipsum customized lares usage. team can custom colour fill palettes, global colour parameters, major minor grids, legend, font font size.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/theme_lares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for ggplot2 (lares) — theme_lares","text":"","code":"theme_lares(   font = Sys.getenv(\"LARES_FONT\"),   size = 12,   main_colour = \"darkorange3\",   hard_colour = \"black\",   soft_colour = \"grey30\",   plot_colour = \"transparent\",   panel_colour = \"transparent\",   background = \"transparent\",   no_facets = FALSE,   legend = NULL,   grid = TRUE,   axis = TRUE,   clean = FALSE,   mg = 9,   pal = 0,   palette = NULL,   which = \"fc\",   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/theme_lares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for ggplot2 (lares) — theme_lares","text":"font, size Character numeric. Base font family base size texts. Arial Narrow set default library loaded; may change Sys.getenv(\"LARES_FONT\" = \"X\") using parameter manually. main_colour, hard_colour, soft_colour, plot_colour, panel_colour Character. Main colours theme. background Character. Main colour background. Overwrites plot_colour panel_colour. no_facets Boolean. Suppress facet labels? legend Character. Legend position: \"top\", \"right\", \"bottom\", \"left\" can also set FALSE \"none\" suppress legend. grid Character Boolean. Use TRUE/FALSE combination X, x, Y, y enable/disable minor major grids. axis Character Boolean. Use TRUE/FALSE, x Y enable X /Y axis lines. clean Boolean. Suppress grids axis? Overwrites parameters. mg Numeric. External margins reference. pal Integer. 1 fill colour palette, 2 colour palette, 3 fill palette, 4 personal labels-colour palette. 0 nothing. palette Character vector. Pass vector HEX colour codes use custom palette. pass named vector, name values used fill values used colour. Character. pal = 3, select colours added custom colours palette: fill, colour, text (fct) - first letters. ... Additional parameters passed","code":""},{"path":"https://laresbernardo.github.io/lares/reference/theme_lares.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for ggplot2 (lares) — theme_lares","text":"Themed ggplot2 object","code":""},{"path":"https://laresbernardo.github.io/lares/reference/theme_lares.html","id":"why-arial-narrow-","dir":"Reference","previous_headings":"","what":"Why Arial Narrow?","title":"Theme for ggplot2 (lares) — theme_lares","text":"First foremost, Arial Narrow generally installed default readily available modern system, \"free\"-ish; plus, condensed font solid default kerning pairs geometric numbers.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/theme_lares.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for ggplot2 (lares) — theme_lares","text":"","code":"# \\donttest{ data(dft) library(ggplot2) p <- ggplot(dft, aes(x = Pclass, y = sum(Fare), fill = Pclass)) +   geom_col() p + theme_lares()  p + theme_lares(pal = 1)  p + theme_lares(background = \"#999999\", mg = 25)  p + theme_lares(legend = \"top\", grid = \"Yy\")  p + theme_lares(clean = TRUE)  # }"},{"path":"https://laresbernardo.github.io/lares/reference/tic.html","id":null,"dir":"Reference","previous_headings":"","what":"Stopwatch to measure timings in R — tic","title":"Stopwatch to measure timings in R — tic","text":"Start stopwatch. Stop stopwatch.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/tic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopwatch to measure timings in R — tic","text":"","code":"tic(id = 1, start = proc.time()[\"elapsed\"], quiet = TRUE)  toc(id = 1, msg = \"Elapsed time:\", type = \"units\", signif = 3, quiet = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/tic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopwatch to measure timings in R — tic","text":"id Define ID multiple tic & toc used. start Start time. Now default. quiet Boolean. Quiet messages? msg Character. Custom message shown type Character. Output format time list element. Choose : units, clock, seconds. signif Integer. Significant digits","code":""},{"path":"https://laresbernardo.github.io/lares/reference/tic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stopwatch to measure timings in R — tic","text":"Invisible list. Contains tic (start time), toc (stop time), elapsed time message printed. toc returns (invisible) list containing time-stamps tic toc, time seconds message msg.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/tic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stopwatch to measure timings in R — tic","text":"","code":"# Basic use (global stopwatch) tic() Sys.sleep(0.1) toc() #> Elapsed time: 0.103s  # Multiple tic tocs tic(id = \"two\", quiet = FALSE) #> Tic `id = two` start time: 2022-02-15 17:05:36 Sys.sleep(0.2) toc(id = \"two\") #> Elapsed time: 0.251s  # Global is still working (id = 1) toc(msg = \"The function finished its work in\") #> The function finished its work in 0.358s"},{"path":"https://laresbernardo.github.io/lares/reference/topics_rake.html","id":null,"dir":"Reference","previous_headings":"","what":"Keyword/Topic identification using RAKE — topics_rake","title":"Keyword/Topic identification using RAKE — topics_rake","text":"RAKE basic algorithm tries identify keywords text. Based udpipe library, model models, keywords_rake function.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/topics_rake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keyword/Topic identification using RAKE — topics_rake","text":"","code":"topics_rake(text, file = \"english-ewt-ud-2.4-190531.udpipe\", lang = \"english\")"},{"path":"https://laresbernardo.github.io/lares/reference/topics_rake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keyword/Topic identification using RAKE — topics_rake","text":"text Character vector file Character. Name udpipe model previously downloaded specific language lang Character. file exist, language downloaded udpipe's models.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/topics_rake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keyword/Topic identification using RAKE — topics_rake","text":"data.frame topics text input.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/tree_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursive Partitioning and Regression Trees — tree_var","title":"Recursive Partitioning and Regression Trees — tree_var","text":"Fit plot rpart model exploratory purposes using rpart rpart.plot libraries.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/tree_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursive Partitioning and Regression Trees — tree_var","text":"","code":"tree_var(   df,   y,   type = 2,   max = 3,   min = 20,   cp = 0,   ohse = TRUE,   plot = TRUE,   explain = TRUE,   title = NA,   subtitle = NULL,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/tree_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursive Partitioning and Regression Trees — tree_var","text":"df Data frame y Variable Character. Name independent variable. type Type plot. Possible values: 0 Draw split label split               node label leaf. 1 Label nodes, just leaves.               Similar text.rpart's =TRUE. 2 Default.               Like 1 draw split labels node labels.               Similar plots CART book. 3 Draw separate split labels left right directions. 4 Like 3 label nodes, just leaves.               Similar text.rpart's fancy=TRUE.               See also clip.right.labs. 5 Show split variable name interior nodes. max Integer. Maximal depth tree. min Integer. minimum number observations must exist node order split attempted. cp complexity parameter.  split decrease overall     lack fit factor cp attempted.  instance,     anova splitting, means overall R-squared must     increase cp step. main role parameter     save computing time pruning splits obviously     worthwhile. Essentially,user informs program     split improve fit cp likely     pruned cross-validation, hence program need     pursue . ohse Boolean. Auto generate One Hot Smart Encoding? plot Boolean. Return plot? , rpart object. explain Boolean. Include brief explanation bottom part plot. title, subtitle Character. Title subtitle include plot. Set NULL ignore. ... Additional parameters passed rpart.plot().","code":""},{"path":"https://laresbernardo.github.io/lares/reference/tree_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursive Partitioning and Regression Trees — tree_var","text":"(Invisible) list type 'tree_var' plot (function), model, predictions, performance metrics, interpret auxiliary text.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/tree_var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recursive Partitioning and Regression Trees — tree_var","text":"differs tree function S mainly handling   surrogate variables.  details follows Breiman   et. al (1984) quite closely.  R package tree provides   re-implementation tree.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/tree_var.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Recursive Partitioning and Regression Trees — tree_var","text":"Breiman L., Friedman J. H., Olshen R. ., Stone, C. J. (1984)   Classification Regression Trees.   Wadsworth.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/tree_var.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recursive Partitioning and Regression Trees — tree_var","text":"Stephen Milborrow, borrowing heavily rpart   package Terry M. Therneau Beth Atkinson,   R port package Brian Ripley.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/tree_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recursive Partitioning and Regression Trees — tree_var","text":"","code":"data(dft) # Regression Tree tree <- tree_var(dft, Fare, subtitle = \"Titanic dataset\") #> >>> One Hot Encoding applied to 6 variables: 'Pclass', 'Ticket', 'Cabin', 'Embarked', 'Survived', 'Sex' tree$plot() # tree plot  tree$model # rpart model object #> n= 891  #>  #> node), split, n, deviance, yval #>       * denotes terminal node #>  #>  1) root 891 2197799.00  32.20421   #>    2) Pclass_1< 0.5 675  107453.20  15.58005   #>      4) Ticket_OTHER>=0.5 602   36951.84  12.77241   #>        8) SibSp< 0.5 454   11332.08  10.27211 * #>        9) SibSp>=0.5 148   14075.24  20.44226 * #>      5) Ticket_OTHER< 0.5 73   26621.89  38.73350   #>       10) SibSp< 6.5 66   19269.25  35.46508 * #>       11) SibSp>=6.5 7       0.00  69.55000 * #>    3) Pclass_1>=0.5 216 1320849.00  84.15469   #>      6) Ticket_OTHER>=0.5 193 1067421.00  74.74652   #>       12) Parch< 0.5 154  626392.20  63.35249 * #>       13) Parch>=0.5 39  342089.30 119.73840 * #>      7) Ticket_OTHER< 0.5 23   92995.43 163.10140   #>       14) PassengerId>=469 12   32097.01 144.27710 * #>       15) PassengerId< 469 11   52007.28 183.63710 * tree$performance # metrics #> $dictionary #> [1] \"RMSE: Root Mean Squared Error\"        #> [2] \"MAE: Mean Average Error\"              #> [3] \"MAPE: Mean Absolute Percentage Error\" #> [4] \"MSE: Mean Squared Error\"              #> [5] \"RSQ: R Squared\"                       #> [6] \"RSQA: Adjusted R Squared\"             #>  #> $metrics #>       rmse      mae       mape      mse    rsq   rsqa #> 1 35.09267 14.68424 0.03144996 1231.495 0.5007 0.5002 #>  # Binary Tree tree_var(dft, Survived_TRUE, explain = FALSE, cex = 0.8)$plot() #> >>> One Hot Encoding applied to 6 variables: 'Pclass', 'Ticket', 'Cabin', 'Embarked', 'Survived', 'Sex'  # Multiclass tree tree_var(dft[, c(\"Pclass\", \"Fare\", \"Age\")], Pclass, ohse = FALSE)$plot()"},{"path":"https://laresbernardo.github.io/lares/reference/trendsRelated.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Trends: Related Plot — trendsRelated","title":"Google Trends: Related Plot — trendsRelated","text":"function creates plot Google Trend's related topics queries, let user compare different keywords.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/trendsRelated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Trends: Related Plot — trendsRelated","text":"","code":"trendsRelated(gtrend, top = NA, title = NA, note = NA, exclude = NULL)"},{"path":"https://laresbernardo.github.io/lares/reference/trendsRelated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Trends: Related Plot — trendsRelated","text":"gtrend List. Result gtrendsR::gtrends(keyword, geo, time) top Integer. Filter top n results . title Character. Custom title plot. note Character. Add note plot needed. exclude Character vector. observations wish exclude?","code":""},{"path":"https://laresbernardo.github.io/lares/reference/trendsRelated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Trends: Related Plot — trendsRelated","text":"plot Google Trend's results input gtrend.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/trendsTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Trends: Timelines Plot — trendsTime","title":"Google Trends: Timelines Plot — trendsTime","text":"function creates plot google trend's data timelines let user compare different keywords.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/trendsTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Trends: Timelines Plot — trendsTime","text":"","code":"trendsTime(gtrend, title = NA)"},{"path":"https://laresbernardo.github.io/lares/reference/trendsTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Trends: Timelines Plot — trendsTime","text":"gtrend List. Result gtrendsR::gtrends(keyword, geo, time) title Character. Custom title plot.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/trendsTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Trends: Timelines Plot — trendsTime","text":"plot Google Trend's results input gtrend","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/trim_mp3.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim MP3 Audio File — trim_mp3","title":"Trim MP3 Audio File — trim_mp3","text":"function trims MP3 files given start /end numeric timestamp. Requires ffmpeg installed machine.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/trim_mp3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim MP3 Audio File — trim_mp3","text":"","code":"trim_mp3(   file,   start_time = 0,   end_time = NA,   overwrite = FALSE,   ext = \"mp3\",   quiet = FALSE )"},{"path":"https://laresbernardo.github.io/lares/reference/trim_mp3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim MP3 Audio File — trim_mp3","text":"file Character. File name trim. start_time Numeric. Start end time trim audio output seconds. end_time Numeric. Start end time trim audio output seconds. overwrite Boolean. Overwrite original file? ext Character. File extension/type. quiet Boolean. Keep quiet? , print messages.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/try_require.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Specific Package is Installed — try_require","title":"Check if Specific Package is Installed — try_require","text":"function checks library dependencies","code":""},{"path":"https://laresbernardo.github.io/lares/reference/try_require.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Specific Package is Installed — try_require","text":"","code":"try_require(package, stop = TRUE)"},{"path":"https://laresbernardo.github.io/lares/reference/try_require.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Specific Package is Installed — try_require","text":"package Character. Name library stop Boolean. Stop installed. FALSE library available, warning shown.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/try_require.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Specific Package is Installed — try_require","text":"return value, called side effects.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/try_require.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if Specific Package is Installed — try_require","text":"","code":"# Check if library base is installed. If not, stop and show error try_require(\"base\", stop = TRUE) # Check if library xxx is installed. If not, show warning try_require(\"xxx\", stop = FALSE) #> Warning: Package 'xxx' recommended. Install for better results."},{"path":"https://laresbernardo.github.io/lares/reference/updateLares.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the library (dev or CRAN version) — updateLares","title":"Update the library (dev or CRAN version) — updateLares","text":"auxiliary function lets user update lares latest CRAN developer version.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/updateLares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the library (dev or CRAN version) — updateLares","text":"","code":"updateLares(force = FALSE, dev = TRUE, all = FALSE, local = FALSE, fb = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/updateLares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the library (dev or CRAN version) — updateLares","text":"force Boolean. Force install. dev Boolean. Developer version (Github)? , CRAN version. Boolean. Install recommended libraries? Kinda Docker install! local Boolean. Install package local files? (Github repo). fb Boolean. FB instance? Personal internal use.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/updateLares.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the library (dev or CRAN version) — updateLares","text":"return value, called side effects.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/vector2text.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a vector into a comma separated text — vector2text","title":"Convert a vector into a comma separated text — vector2text","text":"Convert vector comma separated text","code":""},{"path":"https://laresbernardo.github.io/lares/reference/vector2text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a vector into a comma separated text — vector2text","text":"","code":"vector2text(vector, sep = \", \", quotes = TRUE, force_single = FALSE, and = \"\")  v2t(vector, sep = \", \", quotes = TRUE, force_single = FALSE, and = \"\")"},{"path":"https://laresbernardo.github.io/lares/reference/vector2text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a vector into a comma separated text — vector2text","text":"vector Vector. Vector 1 observation. sep Character. String text wished insert values. quotes Boolean. Bring simple quotes observation. force_single Boolean. Force single quotes replacing \\\". Character. Add '' something last observation. boolean variable can used languages. Note last comma suppressed Sys.getenv(\"LARES_NUMFORMAT\") set 1 less 3 values.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/vector2text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a vector into a comma separated text — vector2text","text":"Vector pasting vector values single string","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/vector2text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a vector into a comma separated text — vector2text","text":"","code":"vector2text(LETTERS[1:5]) #> [1] \"'A', 'B', 'C', 'D', 'E'\" vector2text(c(1:5), quotes = FALSE) #> [1] \"1, 2, 3, 4, 5\" vector2text(c(1:5), quotes = FALSE, sep = \"-\") #> [1] \"1-2-3-4-5\" vector2text(c(1:5), and = \"and also\") #> [1] \"1, 2, 3, 4, and also 5\" vector2text(c(\"Text\", \"R's\"), force_single = TRUE) #> [1] \"'Text', 'R's'\" # Shorter function with same purpose v2t(LETTERS[1:5]) #> [1] \"'A', 'B', 'C', 'D', 'E'\""},{"path":"https://laresbernardo.github.io/lares/reference/winsorize.html","id":null,"dir":"Reference","previous_headings":"","what":"Outliers: Winsorize — winsorize","title":"Outliers: Winsorize — winsorize","text":"Winsorizing vector means predefined quantum smallest /largest values replaced less extreme values. Thereby substitute values extreme retained values.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/winsorize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outliers: Winsorize — winsorize","text":"","code":"winsorize(x, thresh = c(0.05, 0.95), na.rm = FALSE)"},{"path":"https://laresbernardo.github.io/lares/reference/winsorize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outliers: Winsorize — winsorize","text":"x Numeric vector. Distribution winsorized. thresh Numeric vector. Lower upper quantiles thresholds. Set values within [0,1]. na.rm Boolean. NA omitted calculate quantiles? Note NA x preserved left unchanged anyway.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/winsorize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outliers: Winsorize — winsorize","text":"Numeric vector transformed.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/writeGS.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Sheets Writing (API v4) — writeGS","title":"Google Sheets Writing (API v4) — writeGS","text":"Write data Google Sheets knowing file's title. may write single value cell data.frame cell range.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/writeGS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Sheets Writing (API v4) — writeGS","text":"","code":"writeGS(   data,   title,   sheet = \"Hoja 1\",   range = \"A1\",   reformat = FALSE,   append = FALSE,   json = NULL,   email = NULL,   api_key = NULL,   server = FALSE,   ... )"},{"path":"https://laresbernardo.github.io/lares/reference/writeGS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Sheets Writing (API v4) — writeGS","text":"data Object (value, vector, dataframe, list) title Character. Title Google Drive file. Uses regular expressions may fetch patterns instead names. sheet Character. Working sheet import range Character. cell range read reformat Boolean. Reformat affected cells? append Boolean. json Character. JSON filename service auth email Character. multiple pre-authorized accounts machine, may non-interactively select one wish use email /api_key. api_key Character. multiple pre-authorized accounts machine, may non-interactively select one wish use email /api_key. server Boolean. Force interacting auth process? ... Additional parameters passed read_sheet().","code":""},{"path":"https://laresbernardo.github.io/lares/reference/writeGS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Sheets Writing (API v4) — writeGS","text":"return value, called side effects.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/x2y.html","id":null,"dir":"Reference","previous_headings":"","what":"Ranked Predictive Power of Cross-Features (x2y) — x2y","title":"Ranked Predictive Power of Cross-Features (x2y) — x2y","text":"relative reduction error go baseline model (average continuous frequent categorical features) predictive model, can measure strength relationship two features. words, x2y measures ability x predict y. use CART (Classification Regression Trees) models able 1) compare numerical non-numerical features, 2) detect non-linear relationships, 3) easy/quick train.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/x2y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ranked Predictive Power of Cross-Features (x2y) — x2y","text":"","code":"x2y(   df,   target = NULL,   symmetric = FALSE,   target_x = FALSE,   target_y = FALSE,   plot = FALSE,   top = 20,   quiet = \"auto\",   ohse = FALSE,   corr = FALSE,   ... )  x2y_metric(x, y, confidence = FALSE, bootstraps = 20, max_cat = 20)  # S3 method for x2y_preds plot(x, corr = FALSE, ...)  # S3 method for x2y plot(x, type = 1, ...)  x2y_preds(x, y, max_cat = 10)"},{"path":"https://laresbernardo.github.io/lares/reference/x2y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ranked Predictive Power of Cross-Features (x2y) — x2y","text":"df data.frame. Note variables variance ignored. target Character vector. interested x2y values particular variable(s) df, set name(s) variable(s) interested . Keep NULL calculate every variable (column). Check target_x target_y parameters well. symmetric Boolean. x2y metric symmetric respect x y. extent x can predict y can different extent y can predict x. Set symmetric=TRUE wish average numbers. target_x, target_y Boolean. Force target features part x y? plot Boolean. Return plot? , data.frame calculated results returned. top Integer. Show/plot top N predictive cross-features. Set NULL return . quiet Boolean. Keep quiet? , show progress bar. ohse Boolean. Use lares::ohse() pre-process data? corr Boolean. Add correlation pvalue data compare ? custom studies, use lares::corr_cross() directly. ... Additional parameters passed x2y_metric() x, y Vectors. Categorical numerical vectors length. confidence Boolean. Calculate 95% confidence intervals estimated N bootstraps. bootstraps Integer. confidence=TRUE, many bootstraps? iterations run precise confidence internal . max_cat Integer. Maximum number unique x y values categorical. select frequent values rest passed \"\". type Integer. Plot type: 1 tile plot, 2 ranked bar plot.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/x2y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ranked Predictive Power of Cross-Features (x2y) — x2y","text":"Depending plot input, plot data.frame x2y results.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/x2y.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ranked Predictive Power of Cross-Features (x2y) — x2y","text":"x2y metric based Rama Ramakrishnan's post: Alternative Correlation Coefficient Works Numeric Categorical Variables. analysis complements lares::corr_cross() output.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/x2y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ranked Predictive Power of Cross-Features (x2y) — x2y","text":"","code":"# \\donttest{ data(dft) # Titanic dataset x2y_results <- x2y(dft, quiet = TRUE, max_cat = 10, top = NULL) head(x2y_results, 10) #> # A tibble: 10 × 4 #>    x        y        obs_p   x2y #>    <chr>    <chr>    <dbl> <dbl> #>  1 Fare     Pclass     100  65.2 #>  2 Fare     Embarked   100  45.3 #>  3 Sex      Survived   100  44.4 #>  4 Fare     Parch      100  40.0 #>  5 Survived Sex        100  39.5 #>  6 Fare     SibSp      100  35.4 #>  7 Pclass   Fare       100  32.1 #>  8 Ticket   SibSp      100  25.3 #>  9 SibSp    Parch      100  21.6 #> 10 Fare     Survived   100  20.5 plot(x2y_results, type = 2)   # Confidence intervals with 10 bootstrap iterations x2y(dft,   target = c(\"Survived\", \"Age\"),   confidence = TRUE, bootstraps = 10, top = 8 ) #> # A tibble: 8 × 6 #>   x        y        obs_p   x2y lower_ci upper_ci #>   <chr>    <chr>    <dbl> <dbl>    <dbl>    <dbl> #> 1 Sex      Survived 100   44.4     38.9      47.8 #> 2 Survived Sex      100   39.5     34.3      44.5 #> 3 Fare     Survived 100   20.5      2.99     19.3 #> 4 Age      Parch     80.1 18.9     14.8      21.5 #> 5 Pclass   Survived 100   16.4      8.43     24.2 #> 6 Age      Pclass    80.1 14.8      5.95     19.9 #> 7 Age      SibSp     80.1 10.6      8.14     13.1 #> 8 Cabin    Survived 100    8.19     7.37     12.3  # Compare with mean absolute correlations x2y(dft, \"Fare\", corr = TRUE, top = 6, target_x = TRUE) #> Warning: the standard deviation is zero #> # A tibble: 6 × 6 #>   x     y        obs_p   x2y mean_abs_corr mean_pvalue #>   <chr> <chr>    <dbl> <dbl>         <dbl>       <dbl> #> 1 Fare  Pclass     100  65.2         0.375    1.30e- 4 #> 2 Fare  Embarked   100  45.3         0.150    4.35e- 2 #> 3 Fare  Parch      100  40.0         0.216    6.92e-11 #> 4 Fare  SibSp      100  35.4         0.160    1.67e- 6 #> 5 Fare  Survived   100  20.5         0.257    6.12e-15 #> 6 Fare  Sex        100  13.7         0.182    4.23e- 8  # Plot (symmetric) results symm <- x2y(dft, target = \"Survived\", symmetric = TRUE) plot(symm, type = 1)   # Symmetry: x2y vs y2x on.exit(set.seed(42)) x <- seq(-1, 1, 0.01) y <- sqrt(1 - x^2) + rnorm(length(x), mean = 0, sd = 0.05)  # Knowing x reduces the uncertainty about the value of y a lot more than # knowing y reduces the uncertainty about the value of x. Note correlation. plot(x2y_preds(x, y), corr = TRUE)  plot(x2y_preds(y, x), corr = TRUE)  # }"},{"path":"https://laresbernardo.github.io/lares/reference/year_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Date into Year-Month, Year-Quarter or Year-Week Format — year_month","title":"Convert Date into Year-Month, Year-Quarter or Year-Week Format — year_month","text":"function lets user convert date YYYY-MM, YYYY-QX, YYYY-WW format easily.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/year_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Date into Year-Month, Year-Quarter or Year-Week Format — year_month","text":"","code":"year_month(date)  year_quarter(date)  year_week(date)"},{"path":"https://laresbernardo.github.io/lares/reference/year_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Date into Year-Month, Year-Quarter or Year-Week Format — year_month","text":"date Date vector. Date transform format.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/year_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Date into Year-Month, Year-Quarter or Year-Week Format — year_month","text":"Vector dates reformatted","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/year_month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Date into Year-Month, Year-Quarter or Year-Week Format — year_month","text":"","code":"year_month(Sys.Date()) #> [1] \"2022-02\" year_quarter(Sys.Date()) #> [1] \"2022-Q1\" year_week(Sys.Date()) #> [1] \"2022-07\""},{"path":"https://laresbernardo.github.io/lares/reference/zerovar.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero Variance Columns — zerovar","title":"Zero Variance Columns — zerovar","text":"function detects columns value (whichever) column.","code":""},{"path":"https://laresbernardo.github.io/lares/reference/zerovar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero Variance Columns — zerovar","text":"","code":"zerovar(df)"},{"path":"https://laresbernardo.github.io/lares/reference/zerovar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero Variance Columns — zerovar","text":"df Dataframe","code":""},{"path":"https://laresbernardo.github.io/lares/reference/zerovar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero Variance Columns — zerovar","text":"Character vector column names values variance.","code":""},{"path":[]},{"path":"https://laresbernardo.github.io/lares/reference/zerovar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zero Variance Columns — zerovar","text":"","code":"df <- data.frame(a = c(1, NA, 3), b = rep(NA, 3), c = rep(5, 3)) print(df) #>    a  b c #> 1  1 NA 5 #> 2 NA NA 5 #> 3  3 NA 5 zerovar(df) #> [1] \"b\" \"c\""}]
